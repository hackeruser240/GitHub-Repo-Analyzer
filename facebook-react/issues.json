[
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33452",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33452/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33452/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33452/events",
        "html_url": "https://github.com/facebook/react/pull/33452",
        "id": 3122958143,
        "node_id": "PR_kwDOAJy2Ks6ZS04m",
        "number": 33452,
        "title": "[tests] remove pretest compiler script",
        "user": {
            "login": "rickhanlonii",
            "id": 2440089,
            "node_id": "MDQ6VXNlcjI0NDAwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2440089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rickhanlonii",
            "html_url": "https://github.com/rickhanlonii",
            "followers_url": "https://api.github.com/users/rickhanlonii/followers",
            "following_url": "https://api.github.com/users/rickhanlonii/following{/other_user}",
            "gists_url": "https://api.github.com/users/rickhanlonii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rickhanlonii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rickhanlonii/subscriptions",
            "organizations_url": "https://api.github.com/users/rickhanlonii/orgs",
            "repos_url": "https://api.github.com/users/rickhanlonii/repos",
            "events_url": "https://api.github.com/users/rickhanlonii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rickhanlonii/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775958285,
                "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
                "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
                "name": "React Core Team",
                "color": "9149d1",
                "default": false,
                "description": "Opened by a member of the React Core Team"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2025-06-05T23:00:50Z",
        "updated_at": "2025-06-05T23:05:05Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33452",
            "html_url": "https://github.com/facebook/react/pull/33452",
            "diff_url": "https://github.com/facebook/react/pull/33452.diff",
            "patch_url": "https://github.com/facebook/react/pull/33452.patch",
            "merged_at": null
        },
        "body": "This shouldn't be needed now that the lint rule was move",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33452/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33452/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33451",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33451/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33451/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33451/events",
        "html_url": "https://github.com/facebook/react/pull/33451",
        "id": 3122862643,
        "node_id": "PR_kwDOAJy2Ks6ZSe9y",
        "number": 33451,
        "title": "[RFC] Label updates from setOptimistic per API",
        "user": {
            "login": "rickhanlonii",
            "id": 2440089,
            "node_id": "MDQ6VXNlcjI0NDAwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2440089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rickhanlonii",
            "html_url": "https://github.com/rickhanlonii",
            "followers_url": "https://api.github.com/users/rickhanlonii/followers",
            "following_url": "https://api.github.com/users/rickhanlonii/following{/other_user}",
            "gists_url": "https://api.github.com/users/rickhanlonii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rickhanlonii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rickhanlonii/subscriptions",
            "organizations_url": "https://api.github.com/users/rickhanlonii/orgs",
            "repos_url": "https://api.github.com/users/rickhanlonii/repos",
            "events_url": "https://api.github.com/users/rickhanlonii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rickhanlonii/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775958285,
                "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
                "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
                "name": "React Core Team",
                "color": "9149d1",
                "default": false,
                "description": "Opened by a member of the React Core Team"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2025-06-05T22:22:40Z",
        "updated_at": "2025-06-05T22:28:24Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33451",
            "html_url": "https://github.com/facebook/react/pull/33451",
            "diff_url": "https://github.com/facebook/react/pull/33451.diff",
            "patch_url": "https://github.com/facebook/react/pull/33451.patch",
            "merged_at": null
        },
        "body": null,
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33451/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33451/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33450",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33450/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33450/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33450/events",
        "html_url": "https://github.com/facebook/react/pull/33450",
        "id": 3122696389,
        "node_id": "PR_kwDOAJy2Ks6ZR6Fe",
        "number": 33450,
        "title": "[compiler] Don't include useEffectEvent values in autodeps",
        "user": {
            "login": "jbrown215",
            "id": 8551887,
            "node_id": "MDQ6VXNlcjg1NTE4ODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8551887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jbrown215",
            "html_url": "https://github.com/jbrown215",
            "followers_url": "https://api.github.com/users/jbrown215/followers",
            "following_url": "https://api.github.com/users/jbrown215/following{/other_user}",
            "gists_url": "https://api.github.com/users/jbrown215/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jbrown215/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jbrown215/subscriptions",
            "organizations_url": "https://api.github.com/users/jbrown215/orgs",
            "repos_url": "https://api.github.com/users/jbrown215/repos",
            "events_url": "https://api.github.com/users/jbrown215/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jbrown215/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-06-05T21:15:52Z",
        "updated_at": "2025-06-05T21:17:28Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33450",
            "html_url": "https://github.com/facebook/react/pull/33450",
            "diff_url": "https://github.com/facebook/react/pull/33450.diff",
            "patch_url": "https://github.com/facebook/react/pull/33450.patch",
            "merged_at": null
        },
        "body": "\nSummary: useEffectEvent values are not meant to be added to the dep array\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33450/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33450/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33449",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33449/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33449/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33449/events",
        "html_url": "https://github.com/facebook/react/pull/33449",
        "id": 3122655359,
        "node_id": "PR_kwDOAJy2Ks6ZRxed",
        "number": 33449,
        "title": "[compiler][newinference] ensure fixpoint converges for loops w backedges",
        "user": {
            "login": "josephsavona",
            "id": 6425824,
            "node_id": "MDQ6VXNlcjY0MjU4MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6425824?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josephsavona",
            "html_url": "https://github.com/josephsavona",
            "followers_url": "https://api.github.com/users/josephsavona/followers",
            "following_url": "https://api.github.com/users/josephsavona/following{/other_user}",
            "gists_url": "https://api.github.com/users/josephsavona/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/josephsavona/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/josephsavona/subscriptions",
            "organizations_url": "https://api.github.com/users/josephsavona/orgs",
            "repos_url": "https://api.github.com/users/josephsavona/repos",
            "events_url": "https://api.github.com/users/josephsavona/events{/privacy}",
            "received_events_url": "https://api.github.com/users/josephsavona/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775958285,
                "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
                "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
                "name": "React Core Team",
                "color": "9149d1",
                "default": false,
                "description": "Opened by a member of the React Core Team"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-06-05T21:00:59Z",
        "updated_at": "2025-06-05T21:18:10Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33449",
            "html_url": "https://github.com/facebook/react/pull/33449",
            "diff_url": "https://github.com/facebook/react/pull/33449.diff",
            "patch_url": "https://github.com/facebook/react/pull/33449.patch",
            "merged_at": null
        },
        "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* __->__ #33449\n* #33440\n* #33430\n* #33429\n* #33427\n* #33411\n* #33401\n* #33386\n* #33385\n* #33384\n* #33380\n* #33379\n* #33378\n* #33377\n* #33376\n* #33371\n* #33370\n* #33369\n* #33367\n* #33365\n* #33364\n* #33363\n* #33346\n* #33350\n* #33180\n* #33179\n* #33178\n* #33164\n* #33163\n* #33157\n* #33151\n* #33114\n* #33113\n\nThe fixpoint converges based on the abstract values being equal, but we synthesize new values cached based on the effects and new effects can be synthesized on the fly. So here we intern the effect objects by \"value\" (cache key computed from the value) to ensure that effects are stable, values cached based on them are stable, and that the fixpoint can converge.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33449/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33449/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33448",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33448/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33448/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33448/events",
        "html_url": "https://github.com/facebook/react/pull/33448",
        "id": 3122603446,
        "node_id": "PR_kwDOAJy2Ks6ZRl7g",
        "number": 33448,
        "title": "rel=expect playground",
        "user": {
            "login": "eps1lon",
            "id": 12292047,
            "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/12292047?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eps1lon",
            "html_url": "https://github.com/eps1lon",
            "followers_url": "https://api.github.com/users/eps1lon/followers",
            "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
            "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
            "organizations_url": "https://api.github.com/users/eps1lon/orgs",
            "repos_url": "https://api.github.com/users/eps1lon/repos",
            "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eps1lon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775958285,
                "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
                "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
                "name": "React Core Team",
                "color": "9149d1",
                "default": false,
                "description": "Opened by a member of the React Core Team"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2025-06-05T20:42:47Z",
        "updated_at": "2025-06-05T21:14:18Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "type": null,
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33448",
            "html_url": "https://github.com/facebook/react/pull/33448",
            "diff_url": "https://github.com/facebook/react/pull/33448.diff",
            "patch_url": "https://github.com/facebook/react/pull/33448.patch",
            "merged_at": null
        },
        "body": "Just confirming that `PerformancePaintTiming` does respect `rel=\"expect\"`",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33448/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33448/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33445",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33445/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33445/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33445/events",
        "html_url": "https://github.com/facebook/react/pull/33445",
        "id": 3121715347,
        "node_id": "PR_kwDOAJy2Ks6ZOf0A",
        "number": 33445,
        "title": "[Flight] Bypass caches in Flight fixture if requested",
        "user": {
            "login": "unstubbable",
            "id": 761683,
            "node_id": "MDQ6VXNlcjc2MTY4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/761683?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/unstubbable",
            "html_url": "https://github.com/unstubbable",
            "followers_url": "https://api.github.com/users/unstubbable/followers",
            "following_url": "https://api.github.com/users/unstubbable/following{/other_user}",
            "gists_url": "https://api.github.com/users/unstubbable/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/unstubbable/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/unstubbable/subscriptions",
            "organizations_url": "https://api.github.com/users/unstubbable/orgs",
            "repos_url": "https://api.github.com/users/unstubbable/repos",
            "events_url": "https://api.github.com/users/unstubbable/events{/privacy}",
            "received_events_url": "https://api.github.com/users/unstubbable/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775958285,
                "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
                "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
                "name": "React Core Team",
                "color": "9149d1",
                "default": false,
                "description": "Opened by a member of the React Core Team"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2025-06-05T15:38:44Z",
        "updated_at": "2025-06-05T20:02:03Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33445",
            "html_url": "https://github.com/facebook/react/pull/33445",
            "diff_url": "https://github.com/facebook/react/pull/33445.diff",
            "patch_url": "https://github.com/facebook/react/pull/33445.patch",
            "merged_at": null
        },
        "body": "When the \"Disable cache\" checkbox is checked in the dev tools, we should bypass the caching of the 3rd-party component in the Flight fixture. This allows us to quickly compare the different output (with and without caching) in React's custom performance tracks.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33445/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33445/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33444",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33444/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33444/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33444/events",
        "html_url": "https://github.com/facebook/react/pull/33444",
        "id": 3121693565,
        "node_id": "PR_kwDOAJy2Ks6ZOa__",
        "number": 33444,
        "title": "Remove Dead Code in WWW JS",
        "user": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 6344006318,
                "node_id": "LA_kwDOAJy2Ks8AAAABeiHarg",
                "url": "https://api.github.com/repos/facebook/react/labels/fb-exported",
                "name": "fb-exported",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2025-06-05T15:31:03Z",
        "updated_at": "2025-06-05T15:31:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33444",
            "html_url": "https://github.com/facebook/react/pull/33444",
            "diff_url": "https://github.com/facebook/react/pull/33444.diff",
            "patch_url": "https://github.com/facebook/react/pull/33444.patch",
            "merged_at": null
        },
        "body": "Reviewed By: kassens\n\nDifferential Revision: D76031404\n\n\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33444/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33444/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33440",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33440/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33440/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33440/events",
        "html_url": "https://github.com/facebook/react/pull/33440",
        "id": 3119428247,
        "node_id": "PR_kwDOAJy2Ks6ZG93Y",
        "number": 33440,
        "title": "[compiler][newinference] Fix for phi types, extracting primitives from objects",
        "user": {
            "login": "josephsavona",
            "id": 6425824,
            "node_id": "MDQ6VXNlcjY0MjU4MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6425824?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josephsavona",
            "html_url": "https://github.com/josephsavona",
            "followers_url": "https://api.github.com/users/josephsavona/followers",
            "following_url": "https://api.github.com/users/josephsavona/following{/other_user}",
            "gists_url": "https://api.github.com/users/josephsavona/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/josephsavona/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/josephsavona/subscriptions",
            "organizations_url": "https://api.github.com/users/josephsavona/orgs",
            "repos_url": "https://api.github.com/users/josephsavona/repos",
            "events_url": "https://api.github.com/users/josephsavona/events{/privacy}",
            "received_events_url": "https://api.github.com/users/josephsavona/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775958285,
                "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
                "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
                "name": "React Core Team",
                "color": "9149d1",
                "default": false,
                "description": "Opened by a member of the React Core Team"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-06-05T00:01:18Z",
        "updated_at": "2025-06-05T21:18:10Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33440",
            "html_url": "https://github.com/facebook/react/pull/33440",
            "diff_url": "https://github.com/facebook/react/pull/33440.diff",
            "patch_url": "https://github.com/facebook/react/pull/33440.patch",
            "merged_at": null
        },
        "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* #33449\n* __->__ #33440\n* #33430\n* #33429\n* #33427\n* #33411\n* #33401\n* #33386\n* #33385\n* #33384\n* #33380\n* #33379\n* #33378\n* #33377\n* #33376\n* #33371\n* #33370\n* #33369\n* #33367\n* #33365\n* #33364\n* #33363\n* #33346\n* #33350\n* #33180\n* #33179\n* #33178\n* #33164\n* #33163\n* #33157\n* #33151\n* #33114\n* #33113\n\nFirst a quick fix: if we have a known type for the lvalue of CreateFrom, we can drop the effect. This is a bit awkward generally because the types and abstract values overlap a bit, and i'd prefer to only look at types during one phase. So maybe move all the type-checking to where we generate effects, and then after that applyEffect() doesn't have to consider types.\n\nThe larger fix is for InferMutationAliasingRanges. When processing a mutation we have to walk the graph in both forward and backwards directions. Consider `alias a -> b, mutate(b)`. We have to walk back the alias chain from b to a, and mark a as mutated too. But for `alias a -> b, mutate(a)`, we also have to mark b as mutated \u2014 walking forwards along the alias chain.\n\nBut phis are a bit different. You can have a mutation of one of the phi operands, such that you have `a, b -> phi c, mutate(a)`. Here, we do need to mark c as mutated, but we should not walk back to b \u2014 it's a different operand! a and b don't alias together.\n\nThere are now about 150 fixtures failing, but they're in a few categories and all of them are addressable:\n* Infinite loops. `applyEffect()` creates new un-memoized effect values which means that any input with a backedge (loop) will spin until my infinite loop detection throws. This is somewhat tedious to address but it's a pragmatic concern and not a flaw in the model. I also need to convince myself that the approach in InferMutationAliasingRanges is safe for loops, but first i have to get inputs w loops to even reach that phase.\n* LoadContext/StoreContext - i currently treat these too similarly to regular load/store, ie assuming the mutations happen in order. One idea is to treat LoadContext as a mutate instead of an alias, just to make sure all instances get grouped together.\n* InvalidReact detection. We already synthesize MutateFrozen/MutateGlobal effects but we don't throw these as errors yet. This is probably the largest category of failing tests, which means overall this is actually \"pretty close\" (so, 50% of the way there).",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33440/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33440/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33439",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33439/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33439/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33439/events",
        "html_url": "https://github.com/facebook/react/pull/33439",
        "id": 3119218787,
        "node_id": "PR_kwDOAJy2Ks6ZGP4s",
        "number": 33439,
        "title": "test breaking function name transform",
        "user": {
            "login": "rickhanlonii",
            "id": 2440089,
            "node_id": "MDQ6VXNlcjI0NDAwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2440089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rickhanlonii",
            "html_url": "https://github.com/rickhanlonii",
            "followers_url": "https://api.github.com/users/rickhanlonii/followers",
            "following_url": "https://api.github.com/users/rickhanlonii/following{/other_user}",
            "gists_url": "https://api.github.com/users/rickhanlonii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rickhanlonii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rickhanlonii/subscriptions",
            "organizations_url": "https://api.github.com/users/rickhanlonii/orgs",
            "repos_url": "https://api.github.com/users/rickhanlonii/repos",
            "events_url": "https://api.github.com/users/rickhanlonii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rickhanlonii/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775958285,
                "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
                "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
                "name": "React Core Team",
                "color": "9149d1",
                "default": false,
                "description": "Opened by a member of the React Core Team"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2025-06-04T21:49:59Z",
        "updated_at": "2025-06-05T15:11:33Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33439",
            "html_url": "https://github.com/facebook/react/pull/33439",
            "diff_url": "https://github.com/facebook/react/pull/33439.diff",
            "patch_url": "https://github.com/facebook/react/pull/33439.patch",
            "merged_at": null
        },
        "body": "`babel/plugin-transform-function-name` breaks owner stacks ([Playground](https://babeljs.io/repl#?browsers=defaults%2C%20not%20ie%2011%2C%20not%20ie_mob%2011&build=&builtIns=false&corejs=3.21&spec=false&loose=false&code_lz=MYewdgzgLgBMBOBTAhlRAxZBrRBhZANgQMpTLBYwC8MA3gFAwwDkS5UAtNOVhwEYgoUEAFsOAM3jIRzAFwxxAVzDAoAS3AwAFMEIkyFdCHgBRePGMBKOoyYwkURfDBw9pHkdPnjWywG5bAF8AGnpAvyA&forceAllTransforms=false&modules=commonjs&shippedProposals=false&evaluate=false&fileSize=false&timeTravel=false&sourceType=module&lineWrap=true&presets=&prettier=false&targets=&version=7.27.5&externalPlugins=%40babel%2Fplugin-transform-function-name%407.27.1&assumptions=%7B%7D)). \r\n\r\nGoing to try a few ways to trick it:\r\n\r\nIdea 1 (gcc strips): `function (){...} || undefined` [Playground](https://babeljs.io/repl#?browsers=defaults%2C%20not%20ie%2011%2C%20not%20ie_mob%2011&build=&builtIns=false&corejs=3.21&spec=false&loose=false&code_lz=MYewdgzgLgBMBOBTAhlRAxZBrRBhZANgQMpTLBYwC8MA3gFAwwDkS5UAtNOVhwEYgoUEAFsOAM3jIRiZgC4Y4gK5hgUAJbgYACmCESZCuhDwAovHgmAlHUZMYSKEvhg4-0j2NmLJ7VYDcdgC-MAA-oTAqACaI4upgiFEANPRB_kA&forceAllTransforms=false&modules=commonjs&shippedProposals=false&evaluate=false&fileSize=false&timeTravel=false&sourceType=module&lineWrap=true&presets=&prettier=false&targets=&version=7.27.5&externalPlugins=%40babel%2Fplugin-transform-function-name%407.27.1&assumptions=%7B%7D). \r\n\r\nIdea 2 (gcc strips): `[key]: function (){...}` [Playground](https://babeljs.io/repl#?browsers=defaults%2C%20not%20ie%2011%2C%20not%20ie_mob%2011&build=&builtIns=false&corejs=3.21&spec=false&loose=false&code_lz=MYewdgzgLgBA1gUwJ4wLwwOQCcEENhQC00-chARiFFCALaEBmWutCGA3AFCiSzA64oCAGK5EAYVwAbKQGUopNDADenGDADaiJAF0AXDAYBXMAQCW4GAApg0uQuBxhILAFEsWFwEoVa9TBwoIywwGFsZeVJnNw8XKy8udQBfABpOJPYgA&forceAllTransforms=false&modules=commonjs&shippedProposals=false&evaluate=false&fileSize=false&timeTravel=false&sourceType=module&lineWrap=true&presets=&prettier=false&targets=&version=7.27.5&externalPlugins=%40babel%2Fplugin-transform-function-name%407.27.1&assumptions=%7B%7D).\r\n\r\nIdea 3 (stack changes): `'react-stack-bottom-frame': (() => function(){})()` [Playground](https://babeljs.io/repl#?browsers=defaults%2C%20not%20ie%2011%2C%20not%20ie_mob%2011&build=&builtIns=false&corejs=3.21&spec=false&loose=false&code_lz=MYewdgzgLgBMBOBTAhlRAxZBrRBhZANgQMpTLBYwC8MA3gFAwwDkS5UAtNOVhwEYgoUEAFsOAM3jIRiZgC4YACkUBKagD4Y4gK5hgUAJbglwQiTIV0IeAFF48a2oZMmSKNvhg4Z0jyu37a1UAbkYYAF8VABp6cOCgA&forceAllTransforms=false&modules=commonjs&shippedProposals=false&evaluate=false&fileSize=false&timeTravel=false&sourceType=module&lineWrap=true&presets=&prettier=false&targets=&version=7.27.5&externalPlugins=%40babel%2Fplugin-transform-function-name%407.27.1&assumptions=%7B%7D). Changes to `in Object.<anonymous>.react-stack-bottom-frame`\r\n\r\nIdead 4 (stack changes): `[key]: function() {...}` [Playground](https://babeljs.io/repl#?browsers=defaults%2C%20not%20ie%2011%2C%20not%20ie_mob%2011&build=&builtIns=false&corejs=3.21&spec=false&loose=false&code_lz=MYewdgzgLgBA1gUwJ4wLwwOQCcEENhQC00-chARiFFCALaEBmWutCGA3AFCiSzA64oCAGK5EAYVwAbKQGUopNDADenGDADaiJAF0AXDAYBXMAQCW4GAApg0uQuBxhILAFEsWFwEoVa9TBwoIywwGFsZeVJnNw8XKy8udQBfABpOJPYgA&forceAllTransforms=false&modules=commonjs&shippedProposals=false&evaluate=false&fileSize=false&timeTravel=false&sourceType=module&lineWrap=true&presets=&prettier=false&targets=&version=7.27.5&externalPlugins=%40babel%2Fplugin-transform-function-name%407.27.1&assumptions=%7B%7D). Changes to `in Object.react-stack-bottom-frame`",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33439/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33439/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33438",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33438/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33438/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33438/events",
        "html_url": "https://github.com/facebook/react/pull/33438",
        "id": 3119201627,
        "node_id": "PR_kwDOAJy2Ks6ZGMAI",
        "number": 33438,
        "title": "[Flight] Clarify Semantics for Awaiting Cached Data",
        "user": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775958285,
                "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
                "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
                "name": "React Core Team",
                "color": "9149d1",
                "default": false,
                "description": "Opened by a member of the React Core Team"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2025-06-04T21:43:01Z",
        "updated_at": "2025-06-04T22:19:27Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33438",
            "html_url": "https://github.com/facebook/react/pull/33438",
            "diff_url": "https://github.com/facebook/react/pull/33438.diff",
            "patch_url": "https://github.com/facebook/react/pull/33438.patch",
            "merged_at": null
        },
        "body": "Technically the async call graph spans basically all the way back to the start of the app potentially, but we don't want to include everything. Similarly we don't want to include everything from previous components in every child component. So we need some heuristics for filtering out data.\r\n\r\nWe roughly want to be able to inspect is what might contribute to a Suspense loading sequence even if it didn't this time e.g. due to a race condition.\r\n\r\nOne flaw with the previous approach was that awaiting a cached promise in a sibling that happened to finish after another sibling would be excluded. However, in a different race condition that might end up being used so I wanted to include an empty \"await\" in that scenario to have some association from that component. \r\n\r\nHowever, for data that resolved fully before the request even started, it's a little different. This can be things that are part of the start up sequence of the app or externally cached data. We decided that this should be excluded because it doesn't contribute to the loading sequence in the expected scenario. I.e. if it's cached. Things that end up being cache misses would still be included. If you want to test externally cached data misses, then it's up to you or the framework to simulate those. E.g. by dropping the cache. This also helps free up some noise since static / cached data can be excluded in visualizations.\r\n\r\nI also apply this principle to forwarding debug info. If you reuse a cached RSC payload, then the Server Component render time and its awaits gets clamped to the caller as if it has zero render/await time. The I/O entry is still back dated but if it was fully resolved before we started then it's completely excluded.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33438/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33438/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33437",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33437/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33437/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33437/events",
        "html_url": "https://github.com/facebook/react/issues/33437",
        "id": 3119174854,
        "node_id": "I_kwDOAJy2Ks656tTG",
        "number": 33437,
        "title": "Bug: same inline styles are considered different by hydration",
        "user": {
            "login": "mariusrak",
            "id": 12086263,
            "node_id": "MDQ6VXNlcjEyMDg2MjYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/12086263?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mariusrak",
            "html_url": "https://github.com/mariusrak",
            "followers_url": "https://api.github.com/users/mariusrak/followers",
            "following_url": "https://api.github.com/users/mariusrak/following{/other_user}",
            "gists_url": "https://api.github.com/users/mariusrak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mariusrak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mariusrak/subscriptions",
            "organizations_url": "https://api.github.com/users/mariusrak/orgs",
            "repos_url": "https://api.github.com/users/mariusrak/repos",
            "events_url": "https://api.github.com/users/mariusrak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mariusrak/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 155984160,
                "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
                "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
                "name": "Status: Unconfirmed",
                "color": "d4c5f9",
                "default": false,
                "description": "A potential issue that we haven't yet confirmed as a bug"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2025-06-04T21:31:12Z",
        "updated_at": "2025-06-05T04:35:58Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "Hi, I got this error in my console:\n```\nA tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\nhttps://react.dev/link/hydration-mismatch\n\n  ...\n                  <Banner>\n                    <BannerComponent__BannerWrapper style={{...}}>\n                      <div\n                        style={{\n+                         --banner-color: \"#CDECDE\"\n-                         --banner-color: \"#CDECDE\"\n+                         --text-color: \"#686ae5\"\n-                         --text-color: \"#686ae5\"\n+                         --btn-color: \"#CDFFAA\"\n-                         --btn-color: \"#CDFFAA\"\n+                         --btn-text-color: \"#ff0000\"\n-                         --btn-text-color: \"#ff0000\"\n                        }}\n                        className=\"BannerComponent__BannerWrapper-sc-1o07lih-0 ctOXQs\"\n                      >\n                  ...\n                ...\n```\n\nThe weird thing is that the parts of code that are supposed to be different are actually completely equal. I checked in notepad++ with hidden chars displayed and even line endings are same, all the chars are same. So i guess there's nothing to throw error about. How can this even happen?\n\nAlso, shouldn't react hydration algorithm cut some slack for such stuff as inline styles? I browsers can have differences in implementations of attributes if they are calculated dynamically, so it can happen that there would be some differences in spaces or capital vs. lowercase hex codes. These are stuff that shouldn't matter and are in fact same. I think it is not possible to achieve 100% identity of react's output on backend and every browser's implementation of values.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33437/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33437/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33435",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33435/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33435/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33435/events",
        "html_url": "https://github.com/facebook/react/issues/33435",
        "id": 3117513080,
        "node_id": "I_kwDOAJy2Ks650Xl4",
        "number": 33435,
        "title": "Bug:",
        "user": {
            "login": "ClementEXWiki",
            "id": 199796815,
            "node_id": "U_kgDOC-ioTw",
            "avatar_url": "https://avatars.githubusercontent.com/u/199796815?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ClementEXWiki",
            "html_url": "https://github.com/ClementEXWiki",
            "followers_url": "https://api.github.com/users/ClementEXWiki/followers",
            "following_url": "https://api.github.com/users/ClementEXWiki/following{/other_user}",
            "gists_url": "https://api.github.com/users/ClementEXWiki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ClementEXWiki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ClementEXWiki/subscriptions",
            "organizations_url": "https://api.github.com/users/ClementEXWiki/orgs",
            "repos_url": "https://api.github.com/users/ClementEXWiki/repos",
            "events_url": "https://api.github.com/users/ClementEXWiki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ClementEXWiki/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 155984160,
                "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
                "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
                "name": "Status: Unconfirmed",
                "color": "d4c5f9",
                "default": false,
                "description": "A potential issue that we haven't yet confirmed as a bug"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2025-06-04T11:35:07Z",
        "updated_at": "2025-06-05T13:53:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "I'm having a very specific issue inside a complex project that I can't give a minimal reproduction example of.\n\nBasically I mount a React component using `createRoot(document.getElementByid('...')).render(<MyComponent />`\n\nFor some reason, `<MyComponent />` can end up being unmounted due to an error in one of its children.\n\nI know that description is very vague, but do you have any idea what could cause the root element mounted using `createRoot().render()` to be unmounted? This would be very helpful to try to debug a more precise portion of the code I have.\n\nI haven't found anything in the docs indicating that a component mounted using `createRoot().render()` could ever be unmounted without explicitly calling `.unmount()` (which I don't).",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33435/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33435/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33434",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33434/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33434/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33434/events",
        "html_url": "https://github.com/facebook/react/pull/33434",
        "id": 3116483538,
        "node_id": "PR_kwDOAJy2Ks6Y9EM3",
        "number": 33434,
        "title": "[devtools] Prevent incorrect render detection for user components in didFiberRender (#33423)",
        "user": {
            "login": "developerjhp",
            "id": 85682854,
            "node_id": "MDQ6VXNlcjg1NjgyODU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/85682854?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/developerjhp",
            "html_url": "https://github.com/developerjhp",
            "followers_url": "https://api.github.com/users/developerjhp/followers",
            "following_url": "https://api.github.com/users/developerjhp/following{/other_user}",
            "gists_url": "https://api.github.com/users/developerjhp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/developerjhp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/developerjhp/subscriptions",
            "organizations_url": "https://api.github.com/users/developerjhp/orgs",
            "repos_url": "https://api.github.com/users/developerjhp/repos",
            "events_url": "https://api.github.com/users/developerjhp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/developerjhp/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2025-06-04T05:24:58Z",
        "updated_at": "2025-06-04T14:40:07Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33434",
            "html_url": "https://github.com/facebook/react/pull/33434",
            "diff_url": "https://github.com/facebook/react/pull/33434.diff",
            "patch_url": "https://github.com/facebook/react/pull/33434.patch",
            "merged_at": null
        },
        "body": "## Summary\r\n\r\nFixes false positive rendering detection in React DevTools Profiler by improving the `didFiberRender` function to accurately detect when user components actually re-render, preventing misleading \"The parent component rendered\" messages.\r\n\r\n## Problem\r\n\r\nPreviously, React DevTools would incorrectly mark components as \"rendered\" even when they didn't actually re-render due to bailouts. This happened because the `didFiberRender` function only checked the `PerformedWork` flag, but React can set this flag even during bailout scenarios.\r\n\r\nExample scenario:\r\n- Parent component state changes  \r\n- Sibling component with unchanged props shows \"The parent component rendered\"\r\n- But the sibling component console.log shows it didn't actually re-render\r\n\r\n## Solution\r\n\r\nEnhanced `didFiberRender` function for user components (ClassComponent, FunctionComponent, etc.):\r\n\r\n```javascript\r\n// Before\r\nconst PerformedWork = 0b000000000000000000000000001;\r\nreturn (getFiberFlags(nextFiber) & PerformedWork) === PerformedWork;\r\n\r\n// After  \r\nif ((getFiberFlags(nextFiber) & PerformedWork) === 0) {\r\n  return false;\r\n}\r\nif (\r\n  prevFiber != null &&\r\n  prevFiber.memoizedProps === nextFiber.memoizedProps &&\r\n  prevFiber.memoizedState === nextFiber.memoizedState &&\r\n  prevFiber.ref === nextFiber.ref\r\n) {\r\n  // React may mark PerformedWork even if we bailed out. Double check\r\n  // that inputs actually changed before reporting a render.\r\n  return false;\r\n}\r\nreturn true;\r\n```\r\n\r\nThis change ensures that:\r\n1. We first check the `PerformedWork` flag (performance optimization)\r\n2. Then verify that props/state/ref actually changed (accuracy check)\r\n3. Only report rendering when inputs genuinely changed\r\n\r\n## Testing\r\n\r\n**Test Setup:**\r\nUsed the following test case with independent Count and Greeting components:\r\n\r\n```javascript\r\nconst Count = () => {\r\n    const [count, setCount] = useState(0);\r\n    console.log('Count Component Rerendered');\r\n    return (\r\n        <button onClick={() => setCount(c => c + 1)}>\r\n            Count: {count}\r\n        </button>\r\n    );\r\n};\r\n\r\nconst Greeting = () => {\r\n    console.log('Greeting Component Rerendered');\r\n    return <span>Hello World!</span>;\r\n};\r\n\r\nconst App = () => {\r\n    const [appState, setAppState] = useState(0);\r\n    console.log('App Component Rerendered');\r\n    \r\n    return (\r\n        <main>\r\n            <div>App State: {appState}</div>\r\n            <button onClick={() => setAppState(s => s + 1)}>\r\n                App Rerender Trigger (All children rerender)\r\n            </button>\r\n            <hr />\r\n            <Count />\r\n            <div>\r\n                <Greeting />\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n```\r\n\r\n**Test Results:**\r\n\u2705 **Tested and verified with this code**\r\n\r\n// Before\r\n\r\n\r\nhttps://github.com/user-attachments/assets/14bd6a1a-c100-4c65-80c0-1b70f5e9169d\r\n\r\n\r\n\r\n\r\n// After\r\n\r\nhttps://github.com/user-attachments/assets/7d8aed85-7e98-49c2-8b49-bc62a964aa9b\r\n\r\n\r\n\r\n\r\n**Before Fix:**\r\n- Click Count button \u2192 Console shows only \"Count Component Rerendered\" \r\n- DevTools Profiler \u2192 Greeting component incorrectly shows \"The parent component rendered\"\r\n\r\n**After Fix:**  \r\n- Click Count button \u2192 Console shows only \"Count Component Rerendered\"\r\n- DevTools Profiler \u2192 Greeting component correctly shows no rendering information\r\n\r\n\r\n## Related\r\n\r\nThis change specifically targets user components (Function/Class components) and maintains existing behavior for host components, ensuring accurate rendering detection across the React component tree.\r\n\r\n\r\n\r\nFixes https://github.com/facebook/react/issues/33423 , https://github.com/facebook/react/issues/19732",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33434/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33434/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33433",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33433/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33433/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33433/events",
        "html_url": "https://github.com/facebook/react/pull/33433",
        "id": 3116328405,
        "node_id": "PR_kwDOAJy2Ks6Y8q5S",
        "number": 33433,
        "title": "[Fizz] Suspensey Images for View Transition Reveals",
        "user": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775958285,
                "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
                "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
                "name": "React Core Team",
                "color": "9149d1",
                "default": false,
                "description": "Opened by a member of the React Core Team"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2025-06-04T04:14:51Z",
        "updated_at": "2025-06-05T23:55:11Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33433",
            "html_url": "https://github.com/facebook/react/pull/33433",
            "diff_url": "https://github.com/facebook/react/pull/33433.diff",
            "patch_url": "https://github.com/facebook/react/pull/33433.patch",
            "merged_at": null
        },
        "body": "Block the view transition on suspensey images Up to 500ms just like the client.\r\n\r\nWe can't use `decode()` because a bug in Chrome where those are blocked on `startViewTransition` finishing we instead rely on sync decoding but also that the image is live when it's animating in and we assume it doesn't start visible.\r\n\r\nHowever, we can block the View Transition from starting on the `\"load\"` or `\"error\"` events.\r\n\r\nThe nice thing about blocking inside `startViewTransition` is that we have already done the layout so we can only wait on images that are within the viewport at this point. We might want to do that in Fiber too. If many image doesn't have fixed size but need to load first, they can all end up in the viewport. We might consider only doing this for images that have a fixed size or only a max number that doesn't have a fixed size.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33433/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33433/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33430",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33430/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33430/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33430/events",
        "html_url": "https://github.com/facebook/react/pull/33430",
        "id": 3115773741,
        "node_id": "PR_kwDOAJy2Ks6Y601e",
        "number": 33430,
        "title": "[compiler][newinference] Fixes for transitive function capturing, mutation via property loads",
        "user": {
            "login": "josephsavona",
            "id": 6425824,
            "node_id": "MDQ6VXNlcjY0MjU4MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6425824?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josephsavona",
            "html_url": "https://github.com/josephsavona",
            "followers_url": "https://api.github.com/users/josephsavona/followers",
            "following_url": "https://api.github.com/users/josephsavona/following{/other_user}",
            "gists_url": "https://api.github.com/users/josephsavona/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/josephsavona/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/josephsavona/subscriptions",
            "organizations_url": "https://api.github.com/users/josephsavona/orgs",
            "repos_url": "https://api.github.com/users/josephsavona/repos",
            "events_url": "https://api.github.com/users/josephsavona/events{/privacy}",
            "received_events_url": "https://api.github.com/users/josephsavona/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775958285,
                "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
                "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
                "name": "React Core Team",
                "color": "9149d1",
                "default": false,
                "description": "Opened by a member of the React Core Team"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-06-04T00:01:11Z",
        "updated_at": "2025-06-05T21:18:10Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33430",
            "html_url": "https://github.com/facebook/react/pull/33430",
            "diff_url": "https://github.com/facebook/react/pull/33430.diff",
            "patch_url": "https://github.com/facebook/react/pull/33430.patch",
            "merged_at": null
        },
        "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* #33449\n* #33440\n* __->__ #33430\n* #33429\n* #33427\n* #33411\n* #33401\n* #33386\n* #33385\n* #33384\n* #33380\n* #33379\n* #33378\n* #33377\n* #33376\n* #33371\n* #33370\n* #33369\n* #33367\n* #33365\n* #33364\n* #33363\n* #33346\n* #33350\n* #33180\n* #33179\n* #33178\n* #33164\n* #33163\n* #33157\n* #33151\n* #33114\n* #33113\n\r\nFixes for a few cases:\r\n* If you extract part of a value and mutate the part, that has to count as mutating the whole. See the new fixture, but this also came up with an existing test that has an array whose items are modified via array.map with a lambda that mutates its input. The key change here is preserving the CreateFrom effect (not downgrading to Alias) and then handling CreateFrom specially in range inference. Mutations of values derived from CreateFrom are transitive against the value they came from. We handle this by keeping a queue of not just the places to visit during mutation, but whether to visit them transitively or not.\r\n    * TODO: we may also want to track whether we've seen a value as transitive or not\r\n* For that array.map case w the mutable lambda, we weren't bubbling up the effects correctly so that we knew the param was mutated. Basically we inferred this information and then didn't record it. There is a bit of plumbing here.\r\n* Similarly, if a function expression returns a function expression and the inner one mutates context, we weren't propagating that up to the outer function expression. ",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33430/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33430/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33429",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33429/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33429/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33429/events",
        "html_url": "https://github.com/facebook/react/pull/33429",
        "id": 3115773494,
        "node_id": "PR_kwDOAJy2Ks6Y60x-",
        "number": 33429,
        "title": "[compiler] Effects for Return/MaybeThrow terminals",
        "user": {
            "login": "josephsavona",
            "id": 6425824,
            "node_id": "MDQ6VXNlcjY0MjU4MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6425824?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josephsavona",
            "html_url": "https://github.com/josephsavona",
            "followers_url": "https://api.github.com/users/josephsavona/followers",
            "following_url": "https://api.github.com/users/josephsavona/following{/other_user}",
            "gists_url": "https://api.github.com/users/josephsavona/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/josephsavona/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/josephsavona/subscriptions",
            "organizations_url": "https://api.github.com/users/josephsavona/orgs",
            "repos_url": "https://api.github.com/users/josephsavona/repos",
            "events_url": "https://api.github.com/users/josephsavona/events{/privacy}",
            "received_events_url": "https://api.github.com/users/josephsavona/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775958285,
                "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
                "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
                "name": "React Core Team",
                "color": "9149d1",
                "default": false,
                "description": "Opened by a member of the React Core Team"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-06-04T00:01:05Z",
        "updated_at": "2025-06-05T21:18:10Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33429",
            "html_url": "https://github.com/facebook/react/pull/33429",
            "diff_url": "https://github.com/facebook/react/pull/33429.diff",
            "patch_url": "https://github.com/facebook/react/pull/33429.patch",
            "merged_at": null
        },
        "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* #33449\n* #33440\n* #33430\n* __->__ #33429\n* #33427\n* #33411\n* #33401\n* #33386\n* #33385\n* #33384\n* #33380\n* #33379\n* #33378\n* #33377\n* #33376\n* #33371\n* #33370\n* #33369\n* #33367\n* #33365\n* #33364\n* #33363\n* #33346\n* #33350\n* #33180\n* #33179\n* #33178\n* #33164\n* #33163\n* #33157\n* #33151\n* #33114\n* #33113\n\r\nAdds explicit freeze effects for Return terminals and, more importantly, adds effects for MaybeThrow terminals. MaybeThrow is super interesting. The idea of the terminal is to represent that control-flow can break from nearly any instruction to the error handler (catch). InferMutableRanges has a pass that explicitly handles the corresponding data flow, saying that for any instruction in a block ending in MaybeThrow, to alias the instruction's lvalue to the catch handler. This is to handle cases like this:\r\n\r\n```js\r\nconst x = [];\r\ntry {\r\n  throwInput(x);\r\n} catch (x_alias) {\r\n  mutate(x_alias); // mutates x!\r\n}\r\n```\r\n\r\nOne realization is that this logic was overly pessimistic: most instruction types cannot actually throw their lvalue. In fact,  the only things that can throw their lvalue are call expressions! `c = a.b` can throw, for example, but only with an error generated by the runtime, not with a user value.\r\n\r\nDoing this allows us to encode the data flow once and then not have to handle wiring up this data again later.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33429/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33429/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33428",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33428/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33428/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33428/events",
        "html_url": "https://github.com/facebook/react/issues/33428",
        "id": 3115125522,
        "node_id": "I_kwDOAJy2Ks65rQsS",
        "number": 33428,
        "title": "Bug: performance: `createPortal()` attaches listeners even in contained roots",
        "user": {
            "login": "romgrk",
            "id": 1423607,
            "node_id": "MDQ6VXNlcjE0MjM2MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1423607?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/romgrk",
            "html_url": "https://github.com/romgrk",
            "followers_url": "https://api.github.com/users/romgrk/followers",
            "following_url": "https://api.github.com/users/romgrk/following{/other_user}",
            "gists_url": "https://api.github.com/users/romgrk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/romgrk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/romgrk/subscriptions",
            "organizations_url": "https://api.github.com/users/romgrk/orgs",
            "repos_url": "https://api.github.com/users/romgrk/repos",
            "events_url": "https://api.github.com/users/romgrk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/romgrk/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 155984160,
                "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
                "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
                "name": "Status: Unconfirmed",
                "color": "d4c5f9",
                "default": false,
                "description": "A potential issue that we haven't yet confirmed as a bug"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2025-06-03T19:08:33Z",
        "updated_at": "2025-06-05T06:42:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "I'm working on a new virtualization engine for the MUI X Data Grid and other components. I was hoping to be able to do some work outside of react for performance reasons, and to tie React in with portals, but the base cost of adding portals is too high for that use-case due to the event listeners that are added on new roots. \n\nReact version: 19\n\n## Steps To Reproduce\n\n1. Create a portal inside the app's main root\n\nLink to code example: https://stackblitz.com/edit/mui-virtual-exploration\n\n\n## The current behavior\n\nReact attaches event listeners to new portal roots even when the root node is contained by the main app root node. It creates a lot of overhead for cases where multiple portals are attached at once.\n\n<img src=\"https://github.com/user-attachments/assets/59ccb728-b742-454c-b28e-26433e9d1f63\" width=\"450\" />\n\n## The expected behavior\n\nNo added listeners if the root is contained in the main root.\n\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33428/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33428/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33427",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33427/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33427/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33427/events",
        "html_url": "https://github.com/facebook/react/pull/33427",
        "id": 3115027578,
        "node_id": "PR_kwDOAJy2Ks6Y4UYD",
        "number": 33427,
        "title": "[compiler] Post/Pre-FixUpdate, try/catch, ConditionallyMutateIterator support",
        "user": {
            "login": "josephsavona",
            "id": 6425824,
            "node_id": "MDQ6VXNlcjY0MjU4MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6425824?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josephsavona",
            "html_url": "https://github.com/josephsavona",
            "followers_url": "https://api.github.com/users/josephsavona/followers",
            "following_url": "https://api.github.com/users/josephsavona/following{/other_user}",
            "gists_url": "https://api.github.com/users/josephsavona/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/josephsavona/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/josephsavona/subscriptions",
            "organizations_url": "https://api.github.com/users/josephsavona/orgs",
            "repos_url": "https://api.github.com/users/josephsavona/repos",
            "events_url": "https://api.github.com/users/josephsavona/events{/privacy}",
            "received_events_url": "https://api.github.com/users/josephsavona/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775958285,
                "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
                "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
                "name": "React Core Team",
                "color": "9149d1",
                "default": false,
                "description": "Opened by a member of the React Core Team"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-06-03T18:34:05Z",
        "updated_at": "2025-06-05T21:18:10Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33427",
            "html_url": "https://github.com/facebook/react/pull/33427",
            "diff_url": "https://github.com/facebook/react/pull/33427.diff",
            "patch_url": "https://github.com/facebook/react/pull/33427.patch",
            "merged_at": null
        },
        "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* #33449\n* #33440\n* #33430\n* #33429\n* __->__ #33427\n* #33411\n* #33401\n* #33386\n* #33385\n* #33384\n* #33380\n* #33379\n* #33378\n* #33377\n* #33376\n* #33371\n* #33370\n* #33369\n* #33367\n* #33365\n* #33364\n* #33363\n* #33346\n* #33350\n* #33180\n* #33179\n* #33178\n* #33164\n* #33163\n* #33157\n* #33151\n* #33114\n* #33113\n\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33427/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33427/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33423",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33423/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33423/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33423/events",
        "html_url": "https://github.com/facebook/react/issues/33423",
        "id": 3114637077,
        "node_id": "I_kwDOAJy2Ks65pZcV",
        "number": 33423,
        "title": "Bug: profiler incorrectly reports 'The parent component rendered'",
        "user": {
            "login": "michaelboyles",
            "id": 17732072,
            "node_id": "MDQ6VXNlcjE3NzMyMDcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/17732072?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelboyles",
            "html_url": "https://github.com/michaelboyles",
            "followers_url": "https://api.github.com/users/michaelboyles/followers",
            "following_url": "https://api.github.com/users/michaelboyles/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelboyles/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelboyles/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelboyles/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelboyles/orgs",
            "repos_url": "https://api.github.com/users/michaelboyles/repos",
            "events_url": "https://api.github.com/users/michaelboyles/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelboyles/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 155984160,
                "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
                "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
                "name": "Status: Unconfirmed",
                "color": "d4c5f9",
                "default": false,
                "description": "A potential issue that we haven't yet confirmed as a bug"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2025-06-03T16:20:59Z",
        "updated_at": "2025-06-04T05:25:55Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "React version: 19.0.0\n\nDevtools version: 6.1.2 (5/7/2025)\n\nChrome: 136.0.7103.114 \n\nWindows 11\n\n## Steps To Reproduce\n\n1. Go to this codesandbox link https://codesandbox.io/p/sandbox/optimistic-ritchie-forked-yhhjl4 \n2. Specifically open the preview in a new tab at https://yhhjl4.csb.app/ otherwise react devtools won't attach\n3. Enable \"Highlight updates when components render\" in react dev tools\n4. Click the numbered button to cause a rerender\n\n<summary>\nFull code (click to show)\n\n<details>\n\n```tsx\nimport { useState, useRef } from \"react\";\n\nconst Count = () => {\n  const [count, setCount] = useState(0);\n  return <button onClick={() => setCount((c) => c + 1)}>{count}</button>;\n};\n\nexport function Greeting() {\n  const renderCount = useRef(0);\n  renderCount.current++;\n  console.log(\"Greeting rendered\");\n  return <span>Hello World! (rendered {renderCount.current} times)</span>;\n}\n\nexport default function App() {\n  return (\n    <div>\n      <Count />\n      <div>\n        <Greeting />\n      </div>\n    </div>\n  );\n}\n```\n\n</details>\n</summary>\n\n## The current behavior\n\nThe Greeting component will flash as being rerendered even though it isn't\n\n![Image](https://github.com/user-attachments/assets/19acd9a6-6a25-499e-89dd-0fe8bcb954a7)\n\nIf you record via the profiler, the cause is given as \"The parent component rendered\", but it did not\n\n![Image](https://github.com/user-attachments/assets/e2943445-85d2-42dd-8d2f-7c4ab3715ace)\n\n## The expected behavior\n\nIt neither flashes, nor is reported in the profiler flamegraph after being recorded. It didn't rerender.\n\n----\n\nHere's some variants I tested:\n\n\u2705= Greeting correctly reported as **not** rerendering\n\u274c = Greeting incorrectly reported as rerendering\n\n```tsx\n//\u2705 Same level\n<Count />\n<Greeting />\n\n//\u2705 Greeting above\n<div>\n    <Greeting />\n    <div><Count /></div>\n</div>\n\n// \u274c Greeting below in div\n<Count />\n<div>\n    <Greeting />\n</div>\n\n// \u274c Greeting below in empty fragment \n<Count />\n<>\n    <Greeting />\n</>\n```\n\n---\n\nThis is the same as #19732. Reopening here as per the directions in https://github.com/facebook/react/issues/19732#issuecomment-2061919359\n\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33423/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33423/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33419",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33419/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33419/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33419/events",
        "html_url": "https://github.com/facebook/react/issues/33419",
        "id": 3113798663,
        "node_id": "I_kwDOAJy2Ks65mMwH",
        "number": 33419,
        "title": "Feature Request: [react-hooks/exhaustive-deps] Add option to ignore specific values in hook dependency arrays",
        "user": {
            "login": "qba86",
            "id": 17455878,
            "node_id": "MDQ6VXNlcjE3NDU1ODc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/17455878?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qba86",
            "html_url": "https://github.com/qba86",
            "followers_url": "https://api.github.com/users/qba86/followers",
            "following_url": "https://api.github.com/users/qba86/following{/other_user}",
            "gists_url": "https://api.github.com/users/qba86/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/qba86/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/qba86/subscriptions",
            "organizations_url": "https://api.github.com/users/qba86/orgs",
            "repos_url": "https://api.github.com/users/qba86/repos",
            "events_url": "https://api.github.com/users/qba86/events{/privacy}",
            "received_events_url": "https://api.github.com/users/qba86/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 155984160,
                "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
                "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
                "name": "Status: Unconfirmed",
                "color": "d4c5f9",
                "default": false,
                "description": "A potential issue that we haven't yet confirmed as a bug"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-06-03T12:39:23Z",
        "updated_at": "2025-06-03T17:25:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "<!--\n  Please provide a clear and concise description of what the bug is. Include\n  screenshots if needed. Please test using the latest version of the relevant\n  React packages to make sure your issue has not already been fixed.\n-->\n\nReact version: 19.1.0\n\n## Steps To Reproduce\n\n1. Create eg. const {push}= useRouter()\n2. Use that setter inside a `useEffect` or `useCallback` or another hook\n3. Leave the dependency array empty or intentionally exclude the function\n4. Observe a warning from `react-hooks/exhaustive-deps`\n\nExample:\n\n```tsx\nconst {push}= useRouter()\n\nuseEffect(() => {\n  // do something\n  push(\"something\"); // I don't need to add `push` to dependencies, but I get a warning\n}, []);\n```\n\n\n## The current behavior\nThe linter produces a warning:\n`React Hook useEffect has a missing dependency: 'push'. Either include it or remove the dependency array.\n`\nEven though \"push\" is a stable function, the linter still suggests adding it. The current workaround is to disable the rule entirely for that line:\n`// eslint-disable-next-line react-hooks/exhaustive-dep`\n\nHowever, this disables the entire rule, which increases the risk of overlooking important dynamic dependencies in more complex hooks.\n\n## The expected behavior\n\nI\u2019d like to have a way to ignore specific values in the dependency array without disabling the whole rule.\nFor example, something like:\n`// eslint-disable-next-line react-hooks/exhaustive-deps --ignore push`\n\nThis would allow developers to suppress false positives selectively, while still benefiting from the rule\u2019s guidance on other dependencies.\n\n## Why this matters\n\n1. It avoids the risk of over-disabling the rule entirely with eslint-disable-next-line.\n2. It allows safe, intentional handling of well-known stable values (e.g., setState, context dispatchers, router methods).\n3. It improves the developer experience, especially in large codebases using hooks heavily.\n\nThank you for considering this feature!\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33419/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33419/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33418",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33418/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33418/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33418/events",
        "html_url": "https://github.com/facebook/react/issues/33418",
        "id": 3113344934,
        "node_id": "I_kwDOAJy2Ks65kd-m",
        "number": 33418,
        "title": "Bug: better-auth incompatibility with react-19 regarding export of useSyncExternalStore & useRef",
        "user": {
            "login": "masumkhan081",
            "id": 25237315,
            "node_id": "MDQ6VXNlcjI1MjM3MzE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/25237315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/masumkhan081",
            "html_url": "https://github.com/masumkhan081",
            "followers_url": "https://api.github.com/users/masumkhan081/followers",
            "following_url": "https://api.github.com/users/masumkhan081/following{/other_user}",
            "gists_url": "https://api.github.com/users/masumkhan081/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/masumkhan081/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/masumkhan081/subscriptions",
            "organizations_url": "https://api.github.com/users/masumkhan081/orgs",
            "repos_url": "https://api.github.com/users/masumkhan081/repos",
            "events_url": "https://api.github.com/users/masumkhan081/events{/privacy}",
            "received_events_url": "https://api.github.com/users/masumkhan081/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 155984160,
                "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
                "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
                "name": "Status: Unconfirmed",
                "color": "d4c5f9",
                "default": false,
                "description": "A potential issue that we haven't yet confirmed as a bug"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-06-03T10:17:25Z",
        "updated_at": "2025-06-03T10:17:25Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": " pnpm run build\n\n> clairly@0.1.0 build D:\\0.MASUMKHAN\\PROJECTS-TECHNEXT\\clairly\n> next build\n\n   \u25b2 Next.js 15.3.1\n   - Environments: .env\n\n   Creating an optimized production build ...\nFailed to compile.\n\n./node_modules/.pnpm/better-auth@1.2.5_typescript@5.7.3/node_modules/better-auth/dist/client/react/index.mjs\nAttempted import error: 'useRef' is not exported from 'react' (imported as 'useRef').     \n\nImport trace for requested module:\n./node_modules/.pnpm/better-auth@1.2.5_typescript@5.7.3/node_modules/better-auth/dist/client/react/index.mjs\n./lib/auth-client.ts\n\n./node_modules/.pnpm/better-auth@1.2.5_typescript@5.7.3/node_modules/better-auth/dist/client/react/index.mjs\nAttempted import error: 'useSyncExternalStore' is not exported from 'react' (imported as 'useSyncExternalStore').\n\nImport trace for requested module:\n./node_modules/.pnpm/better-auth@1.2.5_typescript@5.7.3/node_modules/better-auth/dist/client/react/index.mjs\n./lib/auth-client.ts\n\n\n> Build failed because of webpack errors\n\u2009ELIFECYCLE\u2009 Command failed with exit code 1.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33418/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33418/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33411",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33411/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33411/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33411/events",
        "html_url": "https://github.com/facebook/react/pull/33411",
        "id": 3112077014,
        "node_id": "PR_kwDOAJy2Ks6YudbY",
        "number": 33411,
        "title": "[compiler] Further improve new range inference",
        "user": {
            "login": "josephsavona",
            "id": 6425824,
            "node_id": "MDQ6VXNlcjY0MjU4MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6425824?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josephsavona",
            "html_url": "https://github.com/josephsavona",
            "followers_url": "https://api.github.com/users/josephsavona/followers",
            "following_url": "https://api.github.com/users/josephsavona/following{/other_user}",
            "gists_url": "https://api.github.com/users/josephsavona/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/josephsavona/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/josephsavona/subscriptions",
            "organizations_url": "https://api.github.com/users/josephsavona/orgs",
            "repos_url": "https://api.github.com/users/josephsavona/repos",
            "events_url": "https://api.github.com/users/josephsavona/events{/privacy}",
            "received_events_url": "https://api.github.com/users/josephsavona/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775958285,
                "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
                "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
                "name": "React Core Team",
                "color": "9149d1",
                "default": false,
                "description": "Opened by a member of the React Core Team"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-06-03T01:32:21Z",
        "updated_at": "2025-06-05T21:18:10Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33411",
            "html_url": "https://github.com/facebook/react/pull/33411",
            "diff_url": "https://github.com/facebook/react/pull/33411.diff",
            "patch_url": "https://github.com/facebook/react/pull/33411.patch",
            "merged_at": null
        },
        "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* #33449\n* #33440\n* #33430\n* #33429\n* #33427\n* __->__ #33411\n* #33401\n* #33386\n* #33385\n* #33384\n* #33380\n* #33379\n* #33378\n* #33377\n* #33376\n* #33371\n* #33370\n* #33369\n* #33367\n* #33365\n* #33364\n* #33363\n* #33346\n* #33350\n* #33180\n* #33179\n* #33178\n* #33164\n* #33163\n* #33157\n* #33151\n* #33114\n* #33113\n\nFurther refine the abstract interpretation for InferMutationAliasingRanges to account for forward data flow: Alias/Capture a -> b, mutate(a) => mutate(b) ie mutation affects aliases of the place being mutated, not just things that place aliased.\n\nFixes inference of which context vars of a function mutate, using the precise inference from the Range pass.\n\nAdds MutateFrozen and MutateGlobal effects but they're not fully hooked up yet.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33411/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33411/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33410",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33410/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33410/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33410/events",
        "html_url": "https://github.com/facebook/react/issues/33410",
        "id": 3112067147,
        "node_id": "I_kwDOAJy2Ks65fmBL",
        "number": 33410,
        "title": "Bug: useId generates invalid ids for SVG elements.",
        "user": {
            "login": "DominoPivot",
            "id": 7483182,
            "node_id": "MDQ6VXNlcjc0ODMxODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7483182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DominoPivot",
            "html_url": "https://github.com/DominoPivot",
            "followers_url": "https://api.github.com/users/DominoPivot/followers",
            "following_url": "https://api.github.com/users/DominoPivot/following{/other_user}",
            "gists_url": "https://api.github.com/users/DominoPivot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DominoPivot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DominoPivot/subscriptions",
            "organizations_url": "https://api.github.com/users/DominoPivot/orgs",
            "repos_url": "https://api.github.com/users/DominoPivot/repos",
            "events_url": "https://api.github.com/users/DominoPivot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DominoPivot/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 127893911,
                "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
                "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
                "name": "Component: DOM",
                "color": "fef2c0",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2025-06-03T01:25:03Z",
        "updated_at": "2025-06-04T14:51:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "React version: 19.1.0\n\nFollowing https://github.com/facebook/react/pull/32001 the `useId` hook now generates identifiers wrapped in `\u00ab\u00bb` in place of `::` to avoid issues in CSS selectors. However, chevrons are not allowed in the id attribute of SVG elements, which must be valid XML 1.0 names.\n\nIn practice, user agents do not enforce such a requirement and SVG renders properly, though some HTML validators will complain.\n\nMore problematic is that using `outerHTML` on an `<svg>` element in order to export it as a separate file now produces an invalid SVG document, which third party software less lenient than browsers will refuse to open. That is how I discovered the issue; the SVG files exported from my web app could no longer be imported by my image editor following the change in `useId`.\n\nLink to an example: https://codesandbox.io/p/sandbox/divine-forest-my4y8w\nValidating the rendered page with the Nu HTML checker gives us:\n> Error: Bad value \u00abr0\u00bb for attribute id on element circle: Not a valid XML 1.0 name.\n\n## The current behavior\n\n`useId` generates an id wrapped in `\u00ab\u00bb` which is *technically* not allowed in SVG element ids.\n\n## The expected behavior\n\n`useId` should either produce valid XML 1.0 names, or the documentation should explicitly warn that its generated ids are not valid for foreign elements.\n\n## Workaround\n\nAs a workaround, I've wrapped `useId` in a function that replaces `\u00ab\u00bb` with a pair of underscores.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33410/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33410/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33409",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33409/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33409/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33409/events",
        "html_url": "https://github.com/facebook/react/pull/33409",
        "id": 3112047733,
        "node_id": "PR_kwDOAJy2Ks6YuXZp",
        "number": 33409,
        "title": "[compiler]: fix link compiler & 4 broken tests from path containing spaces",
        "user": {
            "login": "wlemahieu",
            "id": 9045737,
            "node_id": "MDQ6VXNlcjkwNDU3Mzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9045737?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wlemahieu",
            "html_url": "https://github.com/wlemahieu",
            "followers_url": "https://api.github.com/users/wlemahieu/followers",
            "following_url": "https://api.github.com/users/wlemahieu/following{/other_user}",
            "gists_url": "https://api.github.com/users/wlemahieu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wlemahieu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wlemahieu/subscriptions",
            "organizations_url": "https://api.github.com/users/wlemahieu/orgs",
            "repos_url": "https://api.github.com/users/wlemahieu/repos",
            "events_url": "https://api.github.com/users/wlemahieu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wlemahieu/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2025-06-03T01:06:21Z",
        "updated_at": "2025-06-05T19:14:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33409",
            "html_url": "https://github.com/facebook/react/pull/33409",
            "diff_url": "https://github.com/facebook/react/pull/33409.diff",
            "patch_url": "https://github.com/facebook/react/pull/33409.patch",
            "merged_at": null
        },
        "body": "## Summary\r\n\r\nProblem #1: Running the `link-compiler.sh` bash script via `\"prebuild\"` script fails if a developer has cloned the `react` repo into a folder that contains _any_ spaces.\r\n\r\nProblem #2: 4 tests fail that normally wouldn't because of Problem #1.\r\n\r\nFor example, my current folder is:\r\n`/Users/wes/Development/Open Source Contributions/react`\r\n\r\nThe link compiler error returns:\r\n`./scripts/react-compiler/link-compiler.sh: line 15: cd: /Users/wes/Development/Open: No such file or directory`\r\n\r\nThe 4 failing tests are:\r\n\r\n<img width=\"1003\" alt=\"fail-1\" src=\"https://github.com/user-attachments/assets/1fbfa9ce-4f84-48d7-b49c-b6e967b8c7ca\" />\r\n<img width=\"1011\" alt=\"fail-2\" src=\"https://github.com/user-attachments/assets/0a8c6371-a2df-4276-af98-38f4784cf0da\" />\r\n<img width=\"1027\" alt=\"fail-3\" src=\"https://github.com/user-attachments/assets/1c4f4429-800c-4b44-b3da-a59ac85a16b9\" />\r\n<img width=\"987\" alt=\"fail-4\" src=\"https://github.com/user-attachments/assets/56a673bc-513f-4458-95b2-224129c77144\" />\r\n\r\nThese same tests pass if I hyphenate my local folder:\r\n`/Users/wes/Development/Open-Source-Contributions/react`\r\n\r\nI selfishly want to keep spaces in my folder names. \ud83e\udee3 Looking into this, it appears the existing stack trace regex is a bit too aggressive, causing paths with spaces to be broken. Adjusting the regex resolves the problem and also allows a little more information from the V8 stack track into the frame.\r\n\r\n## How did you test this change?\r\n\r\n**npx yarn prebuild**\r\n\r\nBefore:\r\n<img width=\"896\" alt=\"Screenshot at Jun 01 11-42-56\" src=\"https://github.com/user-attachments/assets/4692775c-1e5c-4851-9bd7-e12ed5455e47\" />\r\n\r\nAfter:\r\n<img width=\"420\" alt=\"Screenshot at Jun 01 11-43-42\" src=\"https://github.com/user-attachments/assets/4e303c00-02b7-4540-ba19-927b2d7034fb\" />\r\n\r\n**npx yarn test**\r\n**npx yarn test ./packages/react/src/__tests__/ReactChildren-test.js**\r\n**npx yarn test -r=xplat --env=development --variant=true --ci --shard=3/5**\r\n\r\nBefore:\r\n<img width=\"438\" alt=\"before\" src=\"https://github.com/user-attachments/assets/f5eedb22-18c3-4124-a04b-daa95c0f7652\" />\r\n\r\nAfter:\r\n<img width=\"439\" alt=\"after\" src=\"https://github.com/user-attachments/assets/a94218ba-7c6a-4f08-85d3-57540e9d0029\" />\r\n\r\n<img width=\"650\" alt=\"Screenshot at Jun 02 18-03-39\" src=\"https://github.com/user-attachments/assets/3eae993c-a56b-46c8-ae02-d249cb053fe7\" />\r\n\r\n<img width=\"685\" alt=\"Screenshot at Jun 03 12-53-47\" src=\"https://github.com/user-attachments/assets/5b2caa33-d3dc-4804-981d-52cb10b6226f\" />\r\n\r\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33409/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33409/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33401",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33401/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33401/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33401/events",
        "html_url": "https://github.com/facebook/react/pull/33401",
        "id": 3108088822,
        "node_id": "PR_kwDOAJy2Ks6YhIcI",
        "number": 33401,
        "title": "[compiler] InferMutationAliasingRanges precisely models which values mutate when",
        "user": {
            "login": "josephsavona",
            "id": 6425824,
            "node_id": "MDQ6VXNlcjY0MjU4MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6425824?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josephsavona",
            "html_url": "https://github.com/josephsavona",
            "followers_url": "https://api.github.com/users/josephsavona/followers",
            "following_url": "https://api.github.com/users/josephsavona/following{/other_user}",
            "gists_url": "https://api.github.com/users/josephsavona/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/josephsavona/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/josephsavona/subscriptions",
            "organizations_url": "https://api.github.com/users/josephsavona/orgs",
            "repos_url": "https://api.github.com/users/josephsavona/repos",
            "events_url": "https://api.github.com/users/josephsavona/events{/privacy}",
            "received_events_url": "https://api.github.com/users/josephsavona/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775958285,
                "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
                "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
                "name": "React Core Team",
                "color": "9149d1",
                "default": false,
                "description": "Opened by a member of the React Core Team"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-06-02T00:19:57Z",
        "updated_at": "2025-06-05T21:18:10Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33401",
            "html_url": "https://github.com/facebook/react/pull/33401",
            "diff_url": "https://github.com/facebook/react/pull/33401.diff",
            "patch_url": "https://github.com/facebook/react/pull/33401.patch",
            "merged_at": null
        },
        "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* #33449\n* #33440\n* #33430\n* #33429\n* #33427\n* #33411\n* __->__ #33401\n* #33386\n* #33385\n* #33384\n* #33380\n* #33379\n* #33378\n* #33377\n* #33376\n* #33371\n* #33370\n* #33369\n* #33367\n* #33365\n* #33364\n* #33363\n* #33346\n* #33350\n* #33180\n* #33179\n* #33178\n* #33164\n* #33163\n* #33157\n* #33151\n* #33114\n* #33113\n\nIt turns out that InferMutationAliasingRanges does need a fixpoint loop, but the approach is arguably simpler overall and more precise than the previous implementation. Like InferMutationAliasingEffects (which is the new InferReferenceEffects), we build an abstract model of the heap. But here we know what the effects are, so we can do abstract interpretation of the effects. Each abstract value stores a set of values that it has captured (for transitive mutation), while each variable keeps a set of values it may directly mutate (for assign/alias/capturefrom).\n\nThis means that at each mutation, we can mark _exactly_ the set of variables/values that are affected by that specific instruction. This means we can correctly infer that `mutate(b)` can't impact `a` here:\n\n```\na = make();\nb = make();\nmutate(b); // when we interpret the mutation here, a isn't captured yet\nb.a = a;\n```\n\nWe will need to make this a fixpoint, but only if there are backedges in the CFG.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33401/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33401/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33399",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33399/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33399/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33399/events",
        "html_url": "https://github.com/facebook/react/issues/33399",
        "id": 3107642442,
        "node_id": "I_kwDOAJy2Ks65OtxK",
        "number": 33399,
        "title": "Feature Request: [eslint-plugin-react-hooks] Provide a way for custom hooks with a dependency array to accept seemingly redundant dependencies",
        "user": {
            "login": "aweebit",
            "id": 36817090,
            "node_id": "MDQ6VXNlcjM2ODE3MDkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/36817090?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aweebit",
            "html_url": "https://github.com/aweebit",
            "followers_url": "https://api.github.com/users/aweebit/followers",
            "following_url": "https://api.github.com/users/aweebit/following{/other_user}",
            "gists_url": "https://api.github.com/users/aweebit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aweebit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aweebit/subscriptions",
            "organizations_url": "https://api.github.com/users/aweebit/orgs",
            "repos_url": "https://api.github.com/users/aweebit/repos",
            "events_url": "https://api.github.com/users/aweebit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aweebit/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-06-01T18:25:25Z",
        "updated_at": "2025-06-01T18:25:25Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "- #33041\n\nSince React doesn't provide a native way to define a dependency array for resetting state, I have to resort to a user-land implementation of this functionality. Here is the signature of the hook I use:\n\n```ts\nfunction useDerivedState<S>(\n  initialState: S | ((previousState?: S) => S),\n  deps: DependencyList,\n): [S, Dispatch<SetStateAction<S>>]\n```\n\nPlease check https://github.com/facebook/react/issues/33041#issuecomment-2923900312 for details and full code.\n\nIn order to get warnings about missing dependencies, I add this rule to my ESLint config:\n\n```ts\n'react-hooks/exhaustive-deps': [\n  'warn',\n  { additionalHooks: 'useDerivedState' },\n]\n```\n\nUnfortunately, that leads to warnings in cases where there shouldn't be any. Here is an example:\n\n```ts\nconst [collapsed, setCollapsed] = useDerivedState(() => true, [collapsible]);\n```\n\nThe reason is that `collapsible` is listed as a dependency, but not present in the initializer function's body, so the linter plugin thinks it's unnecessary. However, this is intended: it is desired that `collapsed` is reset to `true` whenever `collapsible` changes.\n\nSuch seemingly redundant dependencies are currently only accepted for the effects family of hooks. They got this special treatment shortly after the `exhaustive-deps` rule was introduced, see https://github.com/facebook/react/issues/14920#issuecomment-471070149.\n\nThe test for whether a hook belongs to the effects family is very simple: it's enough that the hook's name includes the substring `\"Effect\"` at the end of it, or followed by a symbol other than a lowercase letter.\n\nhttps://github.com/facebook/react/blob/ee76351917106c6146745432a52e9a54a41ee181/packages/eslint-plugin-react-hooks/src/rules/ExhaustiveDeps.ts#L1334\n\nNow, I could of course rename my `useDerivedState` hook to something like `useDerivedStateEffect`, but this would be a despicable misnomer since not only is the hook's functionality nothing like that of `useEffect`, but also its whole idea is to fight how effects are used all over the place for deriving state despite it being a terrible anti-pattern (#33041 has a detailed explanation).\n\nA couple more workarounds I can think of:\n\n1.\n    ```ts\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const [collapsed, setCollapsed] = useDerivedState(true, [collapsible]);\n    ```\n\n    Simply suppressing the warning. Dirty.\n2.\n    ```ts\n    const [collapsed, setCollapsed] = useDerivedState(() => {\n      collapsible; // eslint-disable-line @typescript-eslint/no-unused-expressions\n      return true;\n    }, [collapsible]);\n    ```\n\n    Forcing `collapsible` to be referenced in the initializer function's body, but now a different warning has to be suppressed.\n\n    This is more verbose and a little confusing, but especially in more complex cases where we don't only have one single dependency, I would go for this option because I wouldn't want to disable the `exhaustive-deps` rule completely.\n\n    (By the way, Biome's `useExhaustiveDependencies` rule [allows ignoring only a specific dependency](https://biomejs.dev/linter/rules/use-exhaustive-dependencies/#ignoring-a-specific-dependency). This alone make me kind of want to give Biome a try. Very inspiring!)\n3.  \n    ```ts\n    const [collapsed, setCollapsed] = useDerivedState(() => {\n      return collapsible || true;\n    }, [collapsible]);\n    ```\n\n    There shouldn't be any problem with this, right? Well, turns out there is, and it's that with this code, TypeScript for whatever reason decides that the type of `collapsed` is `true` rather than `boolean`, so it has to be specified manually:\n\n    ```ts\n    const [collapsed, setCollapsed] = useDerivedState<boolean>(() => {\n      return collapsible || true;\n    }, [collapsible]);\n    ```\n\n    I'm really clueless about why TypeScript thinks `collapsible || true` is of type `true` while a simple `true` expression is of type `boolean`. Probably I should open an issue about this in TypeScript's repo, but if anyone here has any idea, please let me know \ud83d\ude4f\n\n    Anyway, I shouldn't be writing stupid code like this just to get around the linter plugin's limitations.\n\nI suggest introducing support for the following kind of configuration:\n\n```ts\n'react-hooks/exhaustive-deps': ['warn', {\n  additionalHooks: [\n    { name: 'useDerivedState', allowExtraDeps: true },\n    { name: 'useDefinitelyNotAnEffect', allowExtraDeps: false },\n    /^(useMyCustomHook|useMyOtherCustomHook)$/,\n  ]\n}]\n```\n\nProbably quite self-explanatory, but here are some details:\n\n- `additionalHooks` can now accept objects of this shape:\n  \n    ```ts\n    { name: string | RegExp, allowExtraDeps?: boolean }\n    ```\n\n    If `allowExtraDeps` is undefined, the decision on whether to report seemingly redundant dependencies should be made just the same way it is made now. Otherwise, it should be based on that property's value.\n- I think it's better not to convert the `name` properties from string to regexes, but treat strings as values that should be matched exactly. Before, regexes couldn't be used directly because the config file had to be in JSON format, and that is why strings were converted to regexes. With the new flat config format, that is no longer necessary to have regex support.\n- In addition to strings, regexes and object of the proposed shape, `additionalHooks` should also accept arrays of those values so that each one of them can be configured individually.\n\nThe proposed object shape could also be extended to allow even more flexibility, like for example what the aforementioned Biome rule offers with its [`closureIndex` and `dependenciesIndex` options](https://biomejs.dev/linter/rules/use-exhaustive-dependencies/#validating-dependencies) (this would solve #25443), or with its [`stableResult` option](https://biomejs.dev/linter/rules/use-exhaustive-dependencies/#stable-results) (this would solve #16873)",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33399/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33399/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33391",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33391/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33391/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33391/events",
        "html_url": "https://github.com/facebook/react/issues/33391",
        "id": 3105845078,
        "node_id": "I_kwDOAJy2Ks65H29W",
        "number": 33391,
        "title": "Bug: [eslint-plugin-react-hooks] No `react-hooks/exhaustive-deps` warning when an unstable reference is passed to hook's callback parameter",
        "user": {
            "login": "aweebit",
            "id": 36817090,
            "node_id": "MDQ6VXNlcjM2ODE3MDkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/36817090?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aweebit",
            "html_url": "https://github.com/aweebit",
            "followers_url": "https://api.github.com/users/aweebit/followers",
            "following_url": "https://api.github.com/users/aweebit/following{/other_user}",
            "gists_url": "https://api.github.com/users/aweebit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aweebit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aweebit/subscriptions",
            "organizations_url": "https://api.github.com/users/aweebit/orgs",
            "repos_url": "https://api.github.com/users/aweebit/repos",
            "events_url": "https://api.github.com/users/aweebit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aweebit/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 155984160,
                "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
                "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
                "name": "Status: Unconfirmed",
                "color": "d4c5f9",
                "default": false,
                "description": "A potential issue that we haven't yet confirmed as a bug"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2025-05-31T17:54:48Z",
        "updated_at": "2025-06-05T10:03:50Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "sub_issues_summary": {
            "total": 0,
            "completed": 0,
            "percent_completed": 0
        },
        "body": "<!--\n  Please provide a clear and concise description of what the bug is. Include\n  screenshots if needed. Please test using the latest version of the relevant\n  React packages to make sure your issue has not already been fixed.\n-->\n\nReact version: 19.1.0\neslint-plugin-react-hooks version: 5.2.0\n\n## Steps To Reproduce\n\n1.\n    ```bash\n    git clone https://github.com/aweebit/eslint-plugin-react-hooks-unstable-reference-issue.git`\n    cd eslint-plugin-react-hooks-unstable-reference-issue\n    npm install\n    ```\n2. Run `npm run lint` and observe how there are no warnings.\n3. Run `npm start`, open the served page in your browser and look at the console output.\n\n<!--\n  Your bug will get fixed much faster if we can run your code and it doesn't\n  have dependencies other than React. Issues without reproduction steps or\n  code examples may be immediately closed as not actionable.\n-->\n\nLink to example repository: https://github.com/aweebit/eslint-plugin-react-hooks-unstable-reference-issue\n\n<!--\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\n  repository on GitHub, or provide a minimal code example that reproduces the\n  problem. You may provide a screenshot of the application if you think it is\n  relevant to your bug report. Here are some tips for providing a minimal\n  example: https://stackoverflow.com/help/mcve.\n-->\n\nHere is the full example code:\n\n```js\nimport { createElement, useEffect, useReducer } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nlet bar = () => console.log(\"good\");\n\nfunction Example() {\n  console.log(\"rendering\");\n  const [updateTrigger, triggerUpdate] = useReducer(() => ({}), {});\n\n  useEffect(() => {\n    const timeout = setTimeout(triggerUpdate);\n    return () => clearTimeout(timeout);\n  }, []);\n\n  useEffect(bar, [updateTrigger]);\n\n  return null;\n}\n\ncreateRoot(\n  /** @type {HTMLDivElement} */ (document.getElementById(\"root\"))\n).render(createElement(Example));\n\nsetTimeout(() =>\n  setTimeout(() => {\n    console.log(\"changing bar\");\n    bar = () => console.log(\"evil\");\n  })\n);\n```\n\n## The current behavior\n\nNo ESLint warnings\n\n## The expected behavior\n\n```\n15:3  warning  React Hook useEffect received a function whose dependencies are unknown. Pass an inline function instead  react-hooks/exhaustive-deps\n```\n\n## Details\n\nThe expected behavior is what happens if you write\n\n```js\nconst foo = { bar: () => console.log(\"good\") };\n```\n\nand replace `bar` with `foo.bar` everywhere.\n\nThe warning makes perfect sense since there is no way for the linter plugin to know for sure `foo.bar` doesn't change between renders. But there is also no way for it to know it if a variable declared with `let` such as `bar` is passed! That's why a warning also has to be produced in that case.\n\nOn the other hand, if the variable passed was declared with `const`, it is fine to not produce any warning because in that case, the plugin would have a guarantee it's a stable reference.\n\nThe issue was discovered in https://github.com/facebook/react/issues/31207#issuecomment-2925440287.",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33391/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33391/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33389",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33389/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33389/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33389/events",
        "html_url": "https://github.com/facebook/react/pull/33389",
        "id": 3105508952,
        "node_id": "PR_kwDOAJy2Ks6YZQA7",
        "number": 33389,
        "title": "[linter] Add verification for stable value hooks",
        "user": {
            "login": "jbrown215",
            "id": 8551887,
            "node_id": "MDQ6VXNlcjg1NTE4ODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8551887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jbrown215",
            "html_url": "https://github.com/jbrown215",
            "followers_url": "https://api.github.com/users/jbrown215/followers",
            "following_url": "https://api.github.com/users/jbrown215/following{/other_user}",
            "gists_url": "https://api.github.com/users/jbrown215/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jbrown215/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jbrown215/subscriptions",
            "organizations_url": "https://api.github.com/users/jbrown215/orgs",
            "repos_url": "https://api.github.com/users/jbrown215/repos",
            "events_url": "https://api.github.com/users/jbrown215/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jbrown215/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2025-05-31T13:44:33Z",
        "updated_at": "2025-05-31T13:47:50Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "type": null,
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33389",
            "html_url": "https://github.com/facebook/react/pull/33389",
            "diff_url": "https://github.com/facebook/react/pull/33389.diff",
            "patch_url": "https://github.com/facebook/react/pull/33389.patch",
            "merged_at": null
        },
        "body": "---\n[//]: # (BEGIN SAPLING FOOTER)\nStack created with [Sapling](https://sapling-scm.com). Best reviewed with [ReviewStack](https://reviewstack.dev/facebook/react/pull/33389).\n* __->__ #33389\n* #33382",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33389/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33389/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33387",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33387/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33387/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33387/events",
        "html_url": "https://github.com/facebook/react/pull/33387",
        "id": 3104690663,
        "node_id": "PR_kwDOAJy2Ks6YWmys",
        "number": 33387,
        "title": "[react-dom] Fix HTML spec violation in useFormStatus: submitter formMethod ignored (#33361)",
        "user": {
            "login": "developerjhp",
            "id": 85682854,
            "node_id": "MDQ6VXNlcjg1NjgyODU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/85682854?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/developerjhp",
            "html_url": "https://github.com/developerjhp",
            "followers_url": "https://api.github.com/users/developerjhp/followers",
            "following_url": "https://api.github.com/users/developerjhp/following{/other_user}",
            "gists_url": "https://api.github.com/users/developerjhp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/developerjhp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/developerjhp/subscriptions",
            "organizations_url": "https://api.github.com/users/developerjhp/orgs",
            "repos_url": "https://api.github.com/users/developerjhp/repos",
            "events_url": "https://api.github.com/users/developerjhp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/developerjhp/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-05-31T02:29:20Z",
        "updated_at": "2025-06-03T23:52:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33387",
            "html_url": "https://github.com/facebook/react/pull/33387",
            "diff_url": "https://github.com/facebook/react/pull/33387.diff",
            "patch_url": "https://github.com/facebook/react/pull/33387.patch",
            "merged_at": null
        },
        "body": "## Summary\r\n\r\nThis PR fixes a bug where the `formmethod` attribute on submit buttons was not properly overriding the parent form's method when accessed through the `useFormStatus` hook.\r\n\r\n**Problem:**\r\nWhen a submit button has a `formMethod` attribute (e.g., `<button formMethod=\"post\">`), it should override the parent form's method attribute. However, useFormStatus did not reflect this override and continued to return the form\u2019s original method, even though the HTML specification states that formmethod on the submitter should take precedence \u2014 with or without formaction.\r\n\r\n**Reproducible Demo:**\r\nYou can reproduce the bug with this sandbox:  \r\nhttps://codesandbox.io/p/sandbox/react-dev-forked-ks99yw\r\n\r\nThis demonstrates that `useFormStatus` does not reflect the `formMethod` override from the submit button.\r\n\r\n**Solution:**\r\n- Extracted the form method resolution logic into a reusable `createPendingFormStatus` helper function\r\n- Updated the logic to properly check for `formMethod` attribute on the submitter element\r\n- Ensured `useFormStatus` accurately reflects the overridden formmethod\r\n- Refactored duplicate code in `FormActionEventPlugin` for better maintainability\r\n\r\nThis change aligns React's behavior with the HTML specification for form submissions.\r\n\r\n## How did you test this change?\r\n\r\n**Added comprehensive test cases:**\r\n1. **Test 1:** `formMethod on submit button overrides form method in useFormStatus`\r\n   - Tests formMethod override when form has no explicit method (uses default)\r\n   - Verifies useFormStatus returns \"post\" when button has `formMethod=\"post\"`\r\n\r\n2. **Test 2:** `submitter's formMethod overrides the form method`\r\n   - Tests formMethod override when form has explicit method (`method=\"dialog\"`)\r\n   - Verifies useFormStatus returns \"post\" when button has `formMethod=\"post\"`\r\n\r\n**Test execution:**\r\n```bash\r\nnpm test -- --testPathPattern=\"ReactDOMForm\" --passWithNoTests   \r\n```\r\n\r\n**Results:**\r\n- \u2705 All existing tests pass (45/45)\r\n- \u2705 New formMethod tests pass\r\n- \u2705 No regressions in form submission behavior\r\n- \u2705 useFormStatus correctly reports overridden methods\r\n\r\n**Manual verification:**\r\n- Tested with various formMethod values (post, get, put, delete)\r\n- Verified behavior matches HTML specification\r\n- Confirmed backward compatibility with existing form submissions\r\n\r\nFixes #33361",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33387/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33387/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/facebook/react/issues/33386",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/33386/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/33386/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/33386/events",
        "html_url": "https://github.com/facebook/react/pull/33386",
        "id": 3104462166,
        "node_id": "PR_kwDOAJy2Ks6YV1ci",
        "number": 33386,
        "title": "[compiler] Fix mutable ranges for StoreContext",
        "user": {
            "login": "josephsavona",
            "id": 6425824,
            "node_id": "MDQ6VXNlcjY0MjU4MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6425824?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josephsavona",
            "html_url": "https://github.com/josephsavona",
            "followers_url": "https://api.github.com/users/josephsavona/followers",
            "following_url": "https://api.github.com/users/josephsavona/following{/other_user}",
            "gists_url": "https://api.github.com/users/josephsavona/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/josephsavona/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/josephsavona/subscriptions",
            "organizations_url": "https://api.github.com/users/josephsavona/orgs",
            "repos_url": "https://api.github.com/users/josephsavona/repos",
            "events_url": "https://api.github.com/users/josephsavona/events{/privacy}",
            "received_events_url": "https://api.github.com/users/josephsavona/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "labels": [
            {
                "id": 196858374,
                "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
                "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
                "name": "CLA Signed",
                "color": "e7e7e7",
                "default": false,
                "description": null
            },
            {
                "id": 1775958285,
                "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
                "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
                "name": "React Core Team",
                "color": "9149d1",
                "default": false,
                "description": "Opened by a member of the React Core Team"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2025-05-30T23:30:06Z",
        "updated_at": "2025-06-05T21:18:11Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "type": null,
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/facebook/react/pulls/33386",
            "html_url": "https://github.com/facebook/react/pull/33386",
            "diff_url": "https://github.com/facebook/react/pull/33386.diff",
            "patch_url": "https://github.com/facebook/react/pull/33386.patch",
            "merged_at": null
        },
        "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* #33449\n* #33440\n* #33430\n* #33429\n* #33427\n* #33411\n* #33401\n* __->__ #33386\n* #33385\n* #33384\n* #33380\n* #33379\n* #33378\n* #33377\n* #33376\n* #33371\n* #33370\n* #33369\n* #33367\n* #33365\n* #33364\n* #33363\n* #33346\n* #33350\n* #33180\n* #33179\n* #33178\n* #33164\n* #33163\n* #33157\n* #33151\n* #33114\n* #33113\n\n",
        "closed_by": null,
        "reactions": {
            "url": "https://api.github.com/repos/facebook/react/issues/33386/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/33386/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]