[
    {
        "sha": "a00ca6f6b51e46a0ccec54a2231bfe7a1ed9ae1d",
        "node_id": "C_kwDOAJy2KtoAKGEwMGNhNmY2YjUxZTQ2YTBjY2VjNTRhMjIzMWJmZTdhMWVkOWFlMWQ",
        "commit": {
            "author": {
                "name": "Sebastian \"Sebbie\" Silbermann",
                "email": "sebastian.silbermann@vercel.com",
                "date": "2025-06-11T19:24:24Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-11T19:24:24Z"
            },
            "message": "[Fizz] Delay detachment of completed boundaries until reveal (#33511)",
            "tree": {
                "sha": "f21c5baba38567c33e51b14688cbbf99adda59c2",
                "url": "https://api.github.com/repos/facebook/react/git/trees/f21c5baba38567c33e51b14688cbbf99adda59c2"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/a00ca6f6b51e46a0ccec54a2231bfe7a1ed9ae1d",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoSdfoCRC1aQ7uu5UhlAAAz8MQAJPd7hNUr9aP0CldScRNEVfV\n7Venj3irbAJ7+9ef/Mk2jzsftD6VnW2m68l1sPtT86RXRhT4i5V1l8+KknSOMb1b\n/RQjoI2CQwWPbCS4L/fwX8VGEmSlH9VahjBEYAqhuQIs/q5z34mEeBIBY0DqPdwz\nqXySPVIiqmHRb8dwJit6j0HBbXPGfbEYSv3CYmXZ/UGlX6V/aCEikXuKwx54t18N\nRxR00xRjQE+Iq2P1FGb3koeaob8j5Q1pMnm2OBbQi6tLXsAXN8Ov7kswvHjFkSFG\nfbH3CcsgjYS/sKeil8yHRh1+OWb57WHqE2NHaRc7zXvElD6bRCx4YYPDke7rcnno\nyJkUuXjc8hwQLdNG5wVygOf9N76OGM4KgH39IsIsLyjtPOe4+fBNTsCPDLP9IxlD\nPwjEtmg0SUyt8t4eZaGRRBFY1lueQBUlNJv6jezH8ns1w9Y2Ac6bEBRtxYcQ+pcL\ndEyJgRi7vDUaGxMUNy+T5jbSRRQFpAh9rV0FDj5wjkwsRqi4olxWKgSv2cWIoMma\nZNvLwtee2ZL2BtTnGCUfDXGlinJ7JWsEHU9znJHGvOn6mCW2XWbtNWttnK5AUIMl\nuLp/VXoyyrbjIYYWKHiqvBsWIGIJNhWWnvvxWgiFZDJGunwE5ZyNAmxgg3IsNLnO\nw8raVltiFIfTqGGglZQH\n=rSad\n-----END PGP SIGNATURE-----\n",
                "payload": "tree f21c5baba38567c33e51b14688cbbf99adda59c2\nparent 888ea60d8e6059790382c0b849be13915b4bcc30\nauthor Sebastian \"Sebbie\" Silbermann <sebastian.silbermann@vercel.com> 1749669864 +0200\ncommitter GitHub <noreply@github.com> 1749669864 +0200\n\n[Fizz] Delay detachment of completed boundaries until reveal (#33511)\n\n",
                "verified_at": "2025-06-11T19:24:26Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/a00ca6f6b51e46a0ccec54a2231bfe7a1ed9ae1d",
        "html_url": "https://github.com/facebook/react/commit/a00ca6f6b51e46a0ccec54a2231bfe7a1ed9ae1d",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/a00ca6f6b51e46a0ccec54a2231bfe7a1ed9ae1d/comments",
        "author": {
            "login": "eps1lon",
            "id": 12292047,
            "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/12292047?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eps1lon",
            "html_url": "https://github.com/eps1lon",
            "followers_url": "https://api.github.com/users/eps1lon/followers",
            "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
            "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
            "organizations_url": "https://api.github.com/users/eps1lon/orgs",
            "repos_url": "https://api.github.com/users/eps1lon/repos",
            "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eps1lon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "888ea60d8e6059790382c0b849be13915b4bcc30",
                "url": "https://api.github.com/repos/facebook/react/commits/888ea60d8e6059790382c0b849be13915b4bcc30",
                "html_url": "https://github.com/facebook/react/commit/888ea60d8e6059790382c0b849be13915b4bcc30"
            }
        ]
    },
    {
        "sha": "888ea60d8e6059790382c0b849be13915b4bcc30",
        "node_id": "C_kwDOAJy2KtoAKDg4OGVhNjBkOGU2MDU5NzkwMzgyYzBiODQ5YmUxMzkxNWI0YmNjMzA",
        "commit": {
            "author": {
                "name": "lauren",
                "email": "poteto@users.noreply.github.com",
                "date": "2025-06-11T18:40:42Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-11T18:40:42Z"
            },
            "message": "[compiler][repro] Postfix operator is incorrectly compiled (#33508)\n\nThis bug was reported via our wg and appears to only affect values\ncreated as a ref.\n\nCurrently, postfix operators used in a callback gets compiled to:\n\n```js\nmodalId.current = modalId.current + 1; // 1\nconst id = modalId.current; // 1\nreturn id;\n```\n\nwhich is semantically incorrect. The postfix increment operator should\nreturn the value before incrementing. In other words something like this\nshould have been compiled instead:\n\n```js\nconst id = modalId.current; // 0\nmodalId.current = modalId.current + 1; // 1\nreturn id;\n```\n\nThis bug does not trigger when the incremented value is a plain\nprimitive, instead there is a TODO bailout.",
            "tree": {
                "sha": "c94b732b554f5475085fd6de9ce119fbd1d8031a",
                "url": "https://api.github.com/repos/facebook/react/git/trees/c94b732b554f5475085fd6de9ce119fbd1d8031a"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/888ea60d8e6059790382c0b849be13915b4bcc30",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoSc2qCRC1aQ7uu5UhlAAAhzMQAEhBDz2smyREh/qqa6Qe1BkQ\njg4XB1cC9390codrVhp/yHC2dkGIwTGARKnnssj8ZKlnXj0LJdE0eXK5EOj9/OTO\n03tB2EWK0lZFZrLLuye1393xPKegWgb4rUpoLGoMJmJ80Dz80CGIi+oC/H4yUXxz\nUhcRWIWUPp42MFUtaMY6NgX3gmWg4f1/DQpqcEW94NayPrBD/VAw4wegMms1GZwk\ni0d9j0PQjvIy66bPe9Q0MeNY5nh04ny3s7irDQ0oM5cCZ5qjiWz34MVBN95KanIR\niIx1JTbdOwpuS6VMclr10xONedpDUUnO/LFfHRrz3jmZCytb+4GzvWiY9+oHrDvc\nRNGtqSBBJfxNxDPk0+Nc2VJa2XXxpZ6QwKyrnqIu3F4t+ZQrJDsazzQmDOCkVfUS\nEbXxkn7WCcZqWk3KE+2FYKE2nn4DM4alj5ONQARheQFhyw4silaqVu+E9R1XZZr0\nc3UE8HDK3oAjRooaQxphYCkcC9N0Cp9Sb6isC84E18kYnIaTVU8ncfzxB8/GbheT\nuczGCJfLcexplnURlvvre9r+eBsGm1ud9/5r2BozphIQEf0mbw2WgvPauk3VHrCm\nsRZZf8Z+1wr3zAgFEHjyph4kxWyB6OWB0jqL+DYOOZIysFp+rvk8Dt/EnpQg+IXp\ncqLZtl0Bgz01kgyzvW8m\n=e6U4\n-----END PGP SIGNATURE-----\n",
                "payload": "tree c94b732b554f5475085fd6de9ce119fbd1d8031a\nparent b7e2de632b2a160bc09edda1fbb9b8f85a6914e8\nauthor lauren <poteto@users.noreply.github.com> 1749667242 -0400\ncommitter GitHub <noreply@github.com> 1749667242 -0400\n\n[compiler][repro] Postfix operator is incorrectly compiled (#33508)\n\nThis bug was reported via our wg and appears to only affect values\ncreated as a ref.\n\nCurrently, postfix operators used in a callback gets compiled to:\n\n```js\nmodalId.current = modalId.current + 1; // 1\nconst id = modalId.current; // 1\nreturn id;\n```\n\nwhich is semantically incorrect. The postfix increment operator should\nreturn the value before incrementing. In other words something like this\nshould have been compiled instead:\n\n```js\nconst id = modalId.current; // 0\nmodalId.current = modalId.current + 1; // 1\nreturn id;\n```\n\nThis bug does not trigger when the incremented value is a plain\nprimitive, instead there is a TODO bailout.",
                "verified_at": "2025-06-11T18:40:44Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/888ea60d8e6059790382c0b849be13915b4bcc30",
        "html_url": "https://github.com/facebook/react/commit/888ea60d8e6059790382c0b849be13915b4bcc30",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/888ea60d8e6059790382c0b849be13915b4bcc30/comments",
        "author": {
            "login": "poteto",
            "id": 1390709,
            "node_id": "MDQ6VXNlcjEzOTA3MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1390709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/poteto",
            "html_url": "https://github.com/poteto",
            "followers_url": "https://api.github.com/users/poteto/followers",
            "following_url": "https://api.github.com/users/poteto/following{/other_user}",
            "gists_url": "https://api.github.com/users/poteto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/poteto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/poteto/subscriptions",
            "organizations_url": "https://api.github.com/users/poteto/orgs",
            "repos_url": "https://api.github.com/users/poteto/repos",
            "events_url": "https://api.github.com/users/poteto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/poteto/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "b7e2de632b2a160bc09edda1fbb9b8f85a6914e8",
                "url": "https://api.github.com/repos/facebook/react/commits/b7e2de632b2a160bc09edda1fbb9b8f85a6914e8",
                "html_url": "https://github.com/facebook/react/commit/b7e2de632b2a160bc09edda1fbb9b8f85a6914e8"
            }
        ]
    },
    {
        "sha": "b7e2de632b2a160bc09edda1fbb9b8f85a6914e8",
        "node_id": "C_kwDOAJy2KtoAKGI3ZTJkZTYzMmIyYTE2MGJjMDllZGRhMWZiYjliOGY4NWE2OTE0ZTg",
        "commit": {
            "author": {
                "name": "Jan Kassens",
                "email": "jkassens@meta.com",
                "date": "2025-06-11T16:08:04Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-11T16:08:04Z"
            },
            "message": "Stringify context as SomeContext instead of SomeContext.Provider (#33507)\n\nThis matches the change in React 19 to use `<SomeContext>` as the\npreferred way to provide a context.",
            "tree": {
                "sha": "a4fd90533fd1d0935e4076a8b7055e8384322443",
                "url": "https://api.github.com/repos/facebook/react/git/trees/a4fd90533fd1d0935e4076a8b7055e8384322443"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b7e2de632b2a160bc09edda1fbb9b8f85a6914e8",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoSankCRC1aQ7uu5UhlAAA2YMQAI5pThvXzqEXwRBB5BFe7hFc\n4t18eb5F3qr1mx/Wr8CCpeUZJYdDfATobLmCi0bIRzJ/xkQUhFuCpmNEjKESnVHH\nFVhtoRctzA3tSgVK4rYfVgukhi3P90HM5NdUWCr5vQdPhMf5MaEphttB+BfxDJAn\nskZASnUYugmuYFvG6yD505nyeSzFp5Ggi9+um+LWRMaMjzw50YjbKZsWAdwZWQ7f\n86+4lUjHPNRYoZJL9kz63VR3SPLzZj6FfKSc6fu+27WaNGVj+uLY4PBxySGRA5Sd\nMUhs7noTvXtGgbg9vrK94r7eK+fSWJoSgvujMx3TfCRmdz5e5ibIz/Kd1dNR7VIQ\nhsnXmdkf2boFGEWgkfH7hqT9VQFXyjiI8w6/d0gkNuSK/WhV8Qc4UXGTHU4k3h9f\nQYul4FlkrJUze+vJE4C/nRrnIzj3xVT1BZp914JQoWlqxx+qqK2qVBz6y43fq2Ls\nHT7+7UPlvm++sa5E53qt1+kEBHtwpcG3/qISN+6FwVMfXS/5iBeHtahTx5rekP9O\n5fj7/NOcXifarsqXSsW2cBAAvLItOlXIwbGE1iylcqgpHcCuCbTmCjWdlAG1HJXe\n3NDGnKK0xEreVAlDq7qnHEzJoTjHf9njnmpUEZHtVhzRS48iLEClZquvY+0qFzq5\ni5cUQYddO5pibV78VC5F\n=k56r\n-----END PGP SIGNATURE-----\n",
                "payload": "tree a4fd90533fd1d0935e4076a8b7055e8384322443\nparent ff93c4448c44e8e5562a4102394ebf9f2b0ec847\nauthor Jan Kassens <jkassens@meta.com> 1749658084 -0400\ncommitter GitHub <noreply@github.com> 1749658084 -0400\n\nStringify context as SomeContext instead of SomeContext.Provider (#33507)\n\nThis matches the change in React 19 to use `<SomeContext>` as the\npreferred way to provide a context.",
                "verified_at": "2025-06-11T16:08:07Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b7e2de632b2a160bc09edda1fbb9b8f85a6914e8",
        "html_url": "https://github.com/facebook/react/commit/b7e2de632b2a160bc09edda1fbb9b8f85a6914e8",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b7e2de632b2a160bc09edda1fbb9b8f85a6914e8/comments",
        "author": {
            "login": "kassens",
            "id": 11849,
            "node_id": "MDQ6VXNlcjExODQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kassens",
            "html_url": "https://github.com/kassens",
            "followers_url": "https://api.github.com/users/kassens/followers",
            "following_url": "https://api.github.com/users/kassens/following{/other_user}",
            "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
            "organizations_url": "https://api.github.com/users/kassens/orgs",
            "repos_url": "https://api.github.com/users/kassens/repos",
            "events_url": "https://api.github.com/users/kassens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kassens/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "ff93c4448c44e8e5562a4102394ebf9f2b0ec847",
                "url": "https://api.github.com/repos/facebook/react/commits/ff93c4448c44e8e5562a4102394ebf9f2b0ec847",
                "html_url": "https://github.com/facebook/react/commit/ff93c4448c44e8e5562a4102394ebf9f2b0ec847"
            }
        ]
    },
    {
        "sha": "ff93c4448c44e8e5562a4102394ebf9f2b0ec847",
        "node_id": "C_kwDOAJy2KtoAKGZmOTNjNDQ0OGM0NGU4ZTU1NjJhNDEwMjM5NGViZjlmMmIwZWM4NDc",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-11T16:07:10Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-11T16:07:10Z"
            },
            "message": "[Flight] Track Debug Info from Synchronously Unwrapped Promises (#33485)\n\nStacked on #33482.\n\nThere's a flaw with getting information from the execution context of\nthe ping. For the soft-deprecated \"throw a promise\" technique, this is a\nbit unreliable because you could in theory throw the same one multiple\ntimes. Similarly, a more fundamental flaw with that API is that it\ndoesn't allow for tracking the information of Promises that are already\nsynchronously able to resolve.\n\nThis stops tracking the async debug info in the case of throwing a\nPromise and only when you render a Promise. That means some loss of data\nbut we should just warn for throwing a Promise anyway.\n\nInstead, this also adds support for tracking `use()`d thenables and\nforwarding `_debugInfo` from then. This is done by extracting the info\nfrom the Promise after the fact instead of in the resolve so that it\nonly happens once at the end after the pings are done.\n\nThis also supports passing the same Promise in multiple places and\ntracking the debug info at each location, even if it was already\ninstrumented with a synchronous value by the time of the second use.",
            "tree": {
                "sha": "8dc146335c22331ad3ed00ccef348743ee268a08",
                "url": "https://api.github.com/repos/facebook/react/git/trees/8dc146335c22331ad3ed00ccef348743ee268a08"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/ff93c4448c44e8e5562a4102394ebf9f2b0ec847",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoSamuCRC1aQ7uu5UhlAAAllYQAGUAb+hbW8/pGQb/THoVIJ/D\nh7OfNtzYG3XGC8pn8ungnMWywj5eeR788BiZPeTqhrIw6M+Klcbx5IJs9CJ9fjd4\nYoA4YSxNsR4TFK9LtKV8R4gxqnh4/H1ZlThiJ6434yrXvuhLODz6KOqeQzY0EGOs\nJH1BWGDZdzvbRoxBIxJdCrdBjbwj/Z8yA+LYhqhGpQkemVU6ze673hynJf9LiULv\nMvM2jizDQi9tzRjsfDEK7c3qSojnkT8BIeCLdqAPok5kT1U97aFlhvrVazOSwuQh\nNvbaSo91pS7OYxm6lfF8w5aLzE5B2Swq68VYq+kvjg74UwWFPOy0rD84PlzVRwLW\nqyZ5dq1etAwumym4JRqLvSBOHxLcHqDHGZ0yc1rFdp5gLY317DcKUklGbNFwHF8C\nUSfaK4FuLeSWpbPv1/VouBJTd5P2jHWpd/R4zZAZt6p+jk6YanKFELQSXnZeA09q\nBWAdbTdi0XjQm+zABpSnqr+AXi3Lb3hDdILuiB7Z8M3AYZax3OL5pMUrc1L8+2sd\nwZQHcLuIHS58CRy6m0lWwM+cV4+KycABuoU+myO3i76KRg/+9BcUFsO12zMnB8mx\nPxUPXNPP+otw50u4A/RImHdxHdM5XKOwwBANZ+gRNKZWiXHGDGMdDMRTiaYB3Sv1\nRuKj33n/ZaYOkZ2Es33w\n=vdSY\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 8dc146335c22331ad3ed00ccef348743ee268a08\nparent 6c86e56a0fa3c8f253da133330cd5b7d1d20e7e5\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749658030 -0400\ncommitter GitHub <noreply@github.com> 1749658030 -0400\n\n[Flight] Track Debug Info from Synchronously Unwrapped Promises (#33485)\n\nStacked on #33482.\n\nThere's a flaw with getting information from the execution context of\nthe ping. For the soft-deprecated \"throw a promise\" technique, this is a\nbit unreliable because you could in theory throw the same one multiple\ntimes. Similarly, a more fundamental flaw with that API is that it\ndoesn't allow for tracking the information of Promises that are already\nsynchronously able to resolve.\n\nThis stops tracking the async debug info in the case of throwing a\nPromise and only when you render a Promise. That means some loss of data\nbut we should just warn for throwing a Promise anyway.\n\nInstead, this also adds support for tracking `use()`d thenables and\nforwarding `_debugInfo` from then. This is done by extracting the info\nfrom the Promise after the fact instead of in the resolve so that it\nonly happens once at the end after the pings are done.\n\nThis also supports passing the same Promise in multiple places and\ntracking the debug info at each location, even if it was already\ninstrumented with a synchronous value by the time of the second use.",
                "verified_at": "2025-06-11T16:07:12Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/ff93c4448c44e8e5562a4102394ebf9f2b0ec847",
        "html_url": "https://github.com/facebook/react/commit/ff93c4448c44e8e5562a4102394ebf9f2b0ec847",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/ff93c4448c44e8e5562a4102394ebf9f2b0ec847/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "6c86e56a0fa3c8f253da133330cd5b7d1d20e7e5",
                "url": "https://api.github.com/repos/facebook/react/commits/6c86e56a0fa3c8f253da133330cd5b7d1d20e7e5",
                "html_url": "https://github.com/facebook/react/commit/6c86e56a0fa3c8f253da133330cd5b7d1d20e7e5"
            }
        ]
    },
    {
        "sha": "6c86e56a0fa3c8f253da133330cd5b7d1d20e7e5",
        "node_id": "C_kwDOAJy2KtoAKDZjODZlNTZhMGZhM2M4ZjI1M2RhMTMzMzMwY2Q1YjdkMWQyMGU3ZTU",
        "commit": {
            "author": {
                "name": "Jan Kassens",
                "email": "jkassens@meta.com",
                "date": "2025-06-11T15:53:04Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-11T15:53:04Z"
            },
            "message": "Remove feature flag enableRenderableContext (#33505)\n\nThe flag is fully rolled out.",
            "tree": {
                "sha": "bad35b4a74d59a9f9fc6c44953a404604aff653d",
                "url": "https://api.github.com/repos/facebook/react/git/trees/bad35b4a74d59a9f9fc6c44953a404604aff653d"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/6c86e56a0fa3c8f253da133330cd5b7d1d20e7e5",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoSaZgCRC1aQ7uu5UhlAAAu+YQABMPO9hPYY3rgw8bK9F+Ojla\nTd2kinuzTDK8fwuMaD0shT3M+WFbr/AsYsW0Kl3BJt6xTnuGCx+nLUDSujW5LDOO\nEWcY2BLo92bvoSEAcRLr5sabAdiMOJaMRyfjVsNYRabhdbbrqZxtF/yaDC4YeLG6\n94AzYXXFVvqLFaV5kyPGTTJp1STNH0CrDvwdjKZrdWsnwJ9q1HkQZ1uo8xEUnV2+\nxDE1uXmogQ1tLt0hrvpZjnt0ww95najIojfOHd5ZCJ4ifWVL4rorgXIRp1/6SrxR\nMKmzp0GIIN/1CgQetFsroSFdGbOzxfd7S717d5Zi2HVimgwnHNz/fdkx4kBsYhof\nPaezI8eZsLxnSVHcr8NHORA44YbqFHzsMSTWYOaxzr3p/GuPBxB/nS1YgR2OrYnJ\nkENHqxuQxbmpY6zIOuLe9gXa6sACgTqQTtQ1UczvP561brRP3CEvtky9hnjDcH7i\nm16Zlqq5nTMtNronoNp9G1AF7v90DOGxDzXn2156D5eC9PQRZTO378BHbJjv2eu3\nj5oEulEqTmufehsmzuyYkWKNMJr3hwjrh6QNtJO3bK5r/JpM/35bIYl29J2ykNH/\nRi5gxFvDa7ekzT+d0c1+keCq3/hE4RSpnYPljE/EAS+CthrIXEkT/wZYODMsRKZM\nQaQgOo2WcNFzhOr8GCrp\n=JsRk\n-----END PGP SIGNATURE-----\n",
                "payload": "tree bad35b4a74d59a9f9fc6c44953a404604aff653d\nparent 56408a5b12fa4099e9dbbeca7f6bc59e1307e507\nauthor Jan Kassens <jkassens@meta.com> 1749657184 -0400\ncommitter GitHub <noreply@github.com> 1749657184 -0400\n\nRemove feature flag enableRenderableContext (#33505)\n\nThe flag is fully rolled out.",
                "verified_at": "2025-06-11T15:53:04Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/6c86e56a0fa3c8f253da133330cd5b7d1d20e7e5",
        "html_url": "https://github.com/facebook/react/commit/6c86e56a0fa3c8f253da133330cd5b7d1d20e7e5",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/6c86e56a0fa3c8f253da133330cd5b7d1d20e7e5/comments",
        "author": {
            "login": "kassens",
            "id": 11849,
            "node_id": "MDQ6VXNlcjExODQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kassens",
            "html_url": "https://github.com/kassens",
            "followers_url": "https://api.github.com/users/kassens/followers",
            "following_url": "https://api.github.com/users/kassens/following{/other_user}",
            "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
            "organizations_url": "https://api.github.com/users/kassens/orgs",
            "repos_url": "https://api.github.com/users/kassens/repos",
            "events_url": "https://api.github.com/users/kassens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kassens/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "56408a5b12fa4099e9dbbeca7f6bc59e1307e507",
                "url": "https://api.github.com/repos/facebook/react/commits/56408a5b12fa4099e9dbbeca7f6bc59e1307e507",
                "html_url": "https://github.com/facebook/react/commit/56408a5b12fa4099e9dbbeca7f6bc59e1307e507"
            }
        ]
    },
    {
        "sha": "56408a5b12fa4099e9dbbeca7f6bc59e1307e507",
        "node_id": "C_kwDOAJy2KtoAKDU2NDA4YTViMTJmYTQwOTllOWRiYmVjYTdmNmJjNTllMTMwN2U1MDc",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-10T15:03:20Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-10T15:03:20Z"
            },
            "message": "[Flight] Emit timestamps only in forwards advancing time in debug info (#33482)\n\nPreviously you weren't guaranteed to have only advancing time entries,\nyou could jump back in time, but now it omits unnecessary duplicates and\nclamps automatically if you emit a previous time entry to enforce\nforwards order only.\n\nThe reason I didn't do this originally is because `await` can jump in\nthe order because we're trying to encode a graph into a flat timeline\nfor simplicity of the protocol and consumers.\n\n```js\nasync function a() {\n  await fetch1();\n  await fetch2();\n}\n\nasync function b() {\n  await fetch3();\n}\n\nasync function foo() {\n  const p = a();\n  await b();\n  return p;\n}\n```\n\nThis can effectively create two parallel sequences:\n\n```\n--1.................----2.......--\n------3......---------------------\n```\n\nThis can now be flattened to either:\n\n```\n--1.................3---2.......--\n```\n\nOr:\n\n```\n------3......1......----2.......--\n```\n\nDepending on which one we visit first. Regardless, information is lost.\n\nI'd say that the second one is worse encoding of this scenario because\nit pretends that we weren't waiting for part of the timespan that we\nwere. To solve this I think we should probably make `emitAsyncSequence`\ncreate a temporary flat list and then sort it by start time before\nemitting.\n\nAlthough we weren't actually blocked since there was some CPU time that\nwas able to proceed to get to 3. So maybe the second one is actually\nbetter. If we wanted that consistently we'd have to figure out what the\nintersection was.\n\n---------\n\nCo-authored-by: Hendrik Liebau <mail@hendrik-liebau.de>",
            "tree": {
                "sha": "2b658cae5749c125783cd25fc1c00964f3f753de",
                "url": "https://api.github.com/repos/facebook/react/git/trees/2b658cae5749c125783cd25fc1c00964f3f753de"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/56408a5b12fa4099e9dbbeca7f6bc59e1307e507",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoSEk4CRC1aQ7uu5UhlAAA6P0QAEZesXFSKpxl7XJq5QuzVDxY\n3yHPBtGk86X7Oo7XDFeHlrpfBJT0es8wHkPcWyFAMfXd4R1iizd9EDM9rEJHcAaf\nnG+78IJCcFqwPLptcf1keYkZu72ocBsVqmRyFrLovbs8g5qoujLyQCbwVAzXSbIU\nYSmN4jcSseXOgNAnFoIE79qYk3EUHejNrSDWAOuE/E/qmLHhym2eFJ/6/LDk5lkn\nvoGsDq80Pum8Xq0QeGDbVW05mDElIZxn5PZfd9WJ9v53jU5dDllolvFQnUILAKCC\nOtLfjHQLDEoKctdh69uFYmQdko38xT1Fqke7VqO1aN9ozKIFgw8H9UpCu4meFm5h\nJQmEDUhRR5toPV4w5g/6YBIE1Kvs88+5YeDmhuwlLt2EWxXamHVP8xx6s/+lItA1\nTIuDZybLDlJYdxH/i2yicnlVOJqxRl0AcBuZ2FqbkHDZITCh4TiItenrYSAgwNLq\n6LDTBko4MqA8M6krb2cvLXWO/mKG8KbVN3nfkEUzKnvYzu1JuIAWjYbffSVI6Inz\nZ8U6NrNCOyxqzxS1sD6Cu+qE1z/xWRP1nKIHmZTro7cFa6MMt5CL09OFJf2BB1oo\nCqD49C4DVamZJPbr4ss8gX0ojIkyIW3D49a/HzJX72+TcAgjMI97p5xtB3IExJha\nh5Mz2rYiib1gd2dfGeOJ\n=t/3U\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 2b658cae5749c125783cd25fc1c00964f3f753de\nparent c38e26897848374c34ac6b651fce4a9088ed4dd0\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749567800 -0400\ncommitter GitHub <noreply@github.com> 1749567800 -0400\n\n[Flight] Emit timestamps only in forwards advancing time in debug info (#33482)\n\nPreviously you weren't guaranteed to have only advancing time entries,\nyou could jump back in time, but now it omits unnecessary duplicates and\nclamps automatically if you emit a previous time entry to enforce\nforwards order only.\n\nThe reason I didn't do this originally is because `await` can jump in\nthe order because we're trying to encode a graph into a flat timeline\nfor simplicity of the protocol and consumers.\n\n```js\nasync function a() {\n  await fetch1();\n  await fetch2();\n}\n\nasync function b() {\n  await fetch3();\n}\n\nasync function foo() {\n  const p = a();\n  await b();\n  return p;\n}\n```\n\nThis can effectively create two parallel sequences:\n\n```\n--1.................----2.......--\n------3......---------------------\n```\n\nThis can now be flattened to either:\n\n```\n--1.................3---2.......--\n```\n\nOr:\n\n```\n------3......1......----2.......--\n```\n\nDepending on which one we visit first. Regardless, information is lost.\n\nI'd say that the second one is worse encoding of this scenario because\nit pretends that we weren't waiting for part of the timespan that we\nwere. To solve this I think we should probably make `emitAsyncSequence`\ncreate a temporary flat list and then sort it by start time before\nemitting.\n\nAlthough we weren't actually blocked since there was some CPU time that\nwas able to proceed to get to 3. So maybe the second one is actually\nbetter. If we wanted that consistently we'd have to figure out what the\nintersection was.\n\n---------\n\nCo-authored-by: Hendrik Liebau <mail@hendrik-liebau.de>",
                "verified_at": "2025-06-10T15:03:22Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/56408a5b12fa4099e9dbbeca7f6bc59e1307e507",
        "html_url": "https://github.com/facebook/react/commit/56408a5b12fa4099e9dbbeca7f6bc59e1307e507",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/56408a5b12fa4099e9dbbeca7f6bc59e1307e507/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "c38e26897848374c34ac6b651fce4a9088ed4dd0",
                "url": "https://api.github.com/repos/facebook/react/commits/c38e26897848374c34ac6b651fce4a9088ed4dd0",
                "html_url": "https://github.com/facebook/react/commit/c38e26897848374c34ac6b651fce4a9088ed4dd0"
            }
        ]
    },
    {
        "sha": "c38e26897848374c34ac6b651fce4a9088ed4dd0",
        "node_id": "C_kwDOAJy2KtoAKGMzOGUyNjg5Nzg0ODM3NGMzNGFjNmI2NTFmY2U0YTkwODhlZDRkZDA",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-09T23:37:49Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-09T23:37:49Z"
            },
            "message": "[Fiber] Fix hydration of useId in SuspenseList (#33491)\n\nIncludes #31412.\n\nThe issue is that `pushTreeFork` stores some global state when reconcile\nchildren. This gets popped by `popTreeContext` in `completeWork`.\nNormally `completeWork` returns its own `Fiber` again if it wants to do\na second pass which will call `pushTreeFork` again in the next pass.\nHowever, `SuspenseList` doesn't return itself, it returns the next child\nto work on.\n\nThe fix is to keep track of the count and push it again it when we\nreturn the next child to attempt.\n\nThere are still some outstanding issues with hydration. Like the\nbackwards test still has the wrong behavior in it because it hydrates\nbackwards and so it picks up the DOM nodes in reverse order.\n`tail=\"hidden\"` also doesn't work correctly.\n\nThere's also another issue with `useId` and `AsyncIterable` in\nSuspenseList when there's an unknown number of children. We don't\nsupport those showing one at a time yet though so it's not an issue yet.\nTo fix it we need to add variable total count to the `useId` algorithm.\nE.g. by falling back to varint encoding.\n\n---------\n\nCo-authored-by: Rick Hanlon <rickhanlonii@fb.com>\nCo-authored-by: Ricky <rickhanlonii@gmail.com>",
            "tree": {
                "sha": "ab47062c9ff28c9a4066dcf26dc0e6346be68655",
                "url": "https://api.github.com/repos/facebook/react/git/trees/ab47062c9ff28c9a4066dcf26dc0e6346be68655"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/c38e26897848374c34ac6b651fce4a9088ed4dd0",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoR3BNCRC1aQ7uu5UhlAAAn1AQAHde3L3YklTkxVsha3IbMwqn\nFg60cpx6/lu7IlAoPYGYd7PRng3yT3AJ72cOmLy9RBQAuJhlQNfzyDCMIDqyY+Bt\nA5bK7ppzY7SjTeAIXfiOrHt1nB377zg1jSJeDcfo0MFEVBhZPnf2225CLmCe7n9d\nx4+Ca4VGszn6ugvV/vzKBDucZJfaPeiAszYMqHtRdwfroiBbb+AI6NK0bl+EsQaD\nC0uQl0ZCz4apITkAwVEVJmfeg6qh/2fKzNTS52IdNBpko2K7Sbi9Txb49XpdC5G/\nKBNXpDsm4MjQaz/zszfE8GsUc+F/bqO1Nb4iceuNV9eoZ4KZpISWRAuYfmdFkYnZ\ngTtCrKd+us2ESL5MIKsblgrUrbuGGyFM4mPAHL92hk/Pbix9i5Aep4lo228n7nse\n84wJDg/Pnrj29g2jGX9KtvsQvGXX9WxOm1cC3N57muu463H+iHBV4JFliZOq3A3A\nEZ4gmPQ4kDNfFUJPVN2N+keOohFTWMngmXKIgWSatqK5q56siu28jxFyBXV2FVPz\n5PTnvl32+WaUknyLbWC+McTi990/6GkvJqFwWiXBrZRIvIEZKoXL8lFJnH5wD32T\nMtPbOyucHyrW5XKaKExhS/z+MTAh3gGDzNjghbFUPeb3goL+8aIY58HJZti5ARPz\niiJrAwdGV3N6T5c2j+j6\n=UU14\n-----END PGP SIGNATURE-----\n",
                "payload": "tree ab47062c9ff28c9a4066dcf26dc0e6346be68655\nparent 80c03eb7e0f05da5e0de6faebbe8dbb434455454\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749512269 -0400\ncommitter GitHub <noreply@github.com> 1749512269 -0400\n\n[Fiber] Fix hydration of useId in SuspenseList (#33491)\n\nIncludes #31412.\n\nThe issue is that `pushTreeFork` stores some global state when reconcile\nchildren. This gets popped by `popTreeContext` in `completeWork`.\nNormally `completeWork` returns its own `Fiber` again if it wants to do\na second pass which will call `pushTreeFork` again in the next pass.\nHowever, `SuspenseList` doesn't return itself, it returns the next child\nto work on.\n\nThe fix is to keep track of the count and push it again it when we\nreturn the next child to attempt.\n\nThere are still some outstanding issues with hydration. Like the\nbackwards test still has the wrong behavior in it because it hydrates\nbackwards and so it picks up the DOM nodes in reverse order.\n`tail=\"hidden\"` also doesn't work correctly.\n\nThere's also another issue with `useId` and `AsyncIterable` in\nSuspenseList when there's an unknown number of children. We don't\nsupport those showing one at a time yet though so it's not an issue yet.\nTo fix it we need to add variable total count to the `useId` algorithm.\nE.g. by falling back to varint encoding.\n\n---------\n\nCo-authored-by: Rick Hanlon <rickhanlonii@fb.com>\nCo-authored-by: Ricky <rickhanlonii@gmail.com>",
                "verified_at": "2025-06-09T23:37:52Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/c38e26897848374c34ac6b651fce4a9088ed4dd0",
        "html_url": "https://github.com/facebook/react/commit/c38e26897848374c34ac6b651fce4a9088ed4dd0",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/c38e26897848374c34ac6b651fce4a9088ed4dd0/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "80c03eb7e0f05da5e0de6faebbe8dbb434455454",
                "url": "https://api.github.com/repos/facebook/react/commits/80c03eb7e0f05da5e0de6faebbe8dbb434455454",
                "html_url": "https://github.com/facebook/react/commit/80c03eb7e0f05da5e0de6faebbe8dbb434455454"
            }
        ]
    },
    {
        "sha": "80c03eb7e0f05da5e0de6faebbe8dbb434455454",
        "node_id": "C_kwDOAJy2KtoAKDgwYzAzZWI3ZTBmMDVkYTVlMGRlNmZhZWJiZThkYmI0MzQ0NTU0NTQ",
        "commit": {
            "author": {
                "name": "Ruslan Lesiutin",
                "email": "rdlesyutin@gmail.com",
                "date": "2025-06-09T17:25:19Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-09T17:25:19Z"
            },
            "message": "refactor[devtools]: update css for settings and support css variables in shadow dom scnenario (#33487)\n\n## Summary\n\nMinor changes around css and styling of Settings dialog.\n\n1. `:root` selector was updated to `:is(:root, :host)` to make css\nvariables available on Shadow Root\n2. CSS tweaks around Settings dialog: removed references to deleted\nstyles, removed unused styles, ironed out styling for cases when input\nstyles are enhanced by user agent stylesheet\n\n<!--\nExplain the **motivation** for making this change. What existing problem\ndoes the pull request solve?\n-->\n\n## How did you test this change?\n\n| Before | After |\n|--------|--------|\n| ![Screenshot 2025-06-09 at 15 35\n55](https://github.com/user-attachments/assets/1ac5d002-744b-4b10-9501-d4f2a7c827d2)\n| ![Screenshot 2025-06-09 at 15 26\n12](https://github.com/user-attachments/assets/8cc07cda-99a5-4930-973b-b139b193e349)\n|\n| ![Screenshot 2025-06-09 at 15 36\n02](https://github.com/user-attachments/assets/1af4257c-928d-4ec6-a614-801cc1936f4b)\n| ![Screenshot 2025-06-09 at 15 26\n25](https://github.com/user-attachments/assets/7a3a0f7c-5f3d-4567-a782-dd37368a15ae)\n|\n| ![Screenshot 2025-06-09 at 15 36\n05](https://github.com/user-attachments/assets/a1e00381-2901-4e22-b1c6-4a3f66ba78c9)\n| ![Screenshot 2025-06-09 at 15 26\n30](https://github.com/user-attachments/assets/bdefce68-cbb5-4b88-b44c-a74f28533f7d)\n|\n| ![Screenshot 2025-06-09 at 15 36\n12](https://github.com/user-attachments/assets/4eda6234-0ef0-40ca-ad9d-5990a2b1e8b4)\n| ![Screenshot 2025-06-09 at 15 26\n37](https://github.com/user-attachments/assets/5cac305e-fd29-460c-b0b8-30e477b8c26e)\n|",
            "tree": {
                "sha": "05d847425064f36e8f784c2c59f0ab5d3e4b9937",
                "url": "https://api.github.com/repos/facebook/react/git/trees/05d847425064f36e8f784c2c59f0ab5d3e4b9937"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/80c03eb7e0f05da5e0de6faebbe8dbb434455454",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoRxj/CRC1aQ7uu5UhlAAAwXgQAKY13LMvQogveW5UoZzPcZyU\neeVOZwnMO78ut60Ws3+OFya/8LeUJfppNVZKVRo6JkoD3mioqzoIaMV4WPAEUcKw\nPXNCvscfa0JJwnNqe6CzsmMVnQr+76M7iKxgFbVeBlSLVF1Uqs3mAo+Wnqoto65w\ncf+KmUFoPxGMfZDbAj3wPkFgdk0QGy8PM0KYSMBapYk1hH1mL1PhwRSjMMpVJo/6\nam1MQn4QSarQ8xJEiFnoiycWiGbl65JsEOi898ZVH+nbTGVNjuO0MSHVhIYZWaG6\n8ccdu32ggWv+4MiG6RJzAgZhDgnz0afaYRFrvgIl7mAAMa0v7IuebEp4ffvtacZs\n36U/2pugWpLt0PzJWQd4HDUZgwnfwQPCKrB9dhLj9kSMiUWyfwWYtz57Ig0qnXeL\noM3nmbYZIKpOyKG3cuFCx2LGLdJKViMraf0wnThZANhkPIX+7IqyX8yCAFBXNVJs\n3mToapZSYOYj2CY/tqGEIAW6P/NyJ2kTSf4LC6rWTaSZX5hb+moncz2CfXHiYltC\nmlZ5si3QUm1n/7aHjwh8hH+rDqLVGHpt0wz9+fq3q0JaueBGrc5qPM+KeSNjEp2t\nYpeWsc3H+UuZOSdtWzOLxex03edgjvO4Zj4ZdAXLzfg4PWUe04nvdFx+0XM7pmFq\nt27UF4OdoV0jFLltBt90\n=Fgds\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 05d847425064f36e8f784c2c59f0ab5d3e4b9937\nparent b6c0aa88140bba2a61c1de16bda2505c89b26235\nauthor Ruslan Lesiutin <rdlesyutin@gmail.com> 1749489919 +0100\ncommitter GitHub <noreply@github.com> 1749489919 +0100\n\nrefactor[devtools]: update css for settings and support css variables in shadow dom scnenario (#33487)\n\n## Summary\n\nMinor changes around css and styling of Settings dialog.\n\n1. `:root` selector was updated to `:is(:root, :host)` to make css\nvariables available on Shadow Root\n2. CSS tweaks around Settings dialog: removed references to deleted\nstyles, removed unused styles, ironed out styling for cases when input\nstyles are enhanced by user agent stylesheet\n\n<!--\nExplain the **motivation** for making this change. What existing problem\ndoes the pull request solve?\n-->\n\n## How did you test this change?\n\n| Before | After |\n|--------|--------|\n| ![Screenshot 2025-06-09 at 15 35\n55](https://github.com/user-attachments/assets/1ac5d002-744b-4b10-9501-d4f2a7c827d2)\n| ![Screenshot 2025-06-09 at 15 26\n12](https://github.com/user-attachments/assets/8cc07cda-99a5-4930-973b-b139b193e349)\n|\n| ![Screenshot 2025-06-09 at 15 36\n02](https://github.com/user-attachments/assets/1af4257c-928d-4ec6-a614-801cc1936f4b)\n| ![Screenshot 2025-06-09 at 15 26\n25](https://github.com/user-attachments/assets/7a3a0f7c-5f3d-4567-a782-dd37368a15ae)\n|\n| ![Screenshot 2025-06-09 at 15 36\n05](https://github.com/user-attachments/assets/a1e00381-2901-4e22-b1c6-4a3f66ba78c9)\n| ![Screenshot 2025-06-09 at 15 26\n30](https://github.com/user-attachments/assets/bdefce68-cbb5-4b88-b44c-a74f28533f7d)\n|\n| ![Screenshot 2025-06-09 at 15 36\n12](https://github.com/user-attachments/assets/4eda6234-0ef0-40ca-ad9d-5990a2b1e8b4)\n| ![Screenshot 2025-06-09 at 15 26\n37](https://github.com/user-attachments/assets/5cac305e-fd29-460c-b0b8-30e477b8c26e)\n|",
                "verified_at": "2025-06-09T17:25:21Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/80c03eb7e0f05da5e0de6faebbe8dbb434455454",
        "html_url": "https://github.com/facebook/react/commit/80c03eb7e0f05da5e0de6faebbe8dbb434455454",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/80c03eb7e0f05da5e0de6faebbe8dbb434455454/comments",
        "author": {
            "login": "hoxyq",
            "id": 28902667,
            "node_id": "MDQ6VXNlcjI4OTAyNjY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/28902667?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hoxyq",
            "html_url": "https://github.com/hoxyq",
            "followers_url": "https://api.github.com/users/hoxyq/followers",
            "following_url": "https://api.github.com/users/hoxyq/following{/other_user}",
            "gists_url": "https://api.github.com/users/hoxyq/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hoxyq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hoxyq/subscriptions",
            "organizations_url": "https://api.github.com/users/hoxyq/orgs",
            "repos_url": "https://api.github.com/users/hoxyq/repos",
            "events_url": "https://api.github.com/users/hoxyq/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hoxyq/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "b6c0aa88140bba2a61c1de16bda2505c89b26235",
                "url": "https://api.github.com/repos/facebook/react/commits/b6c0aa88140bba2a61c1de16bda2505c89b26235",
                "html_url": "https://github.com/facebook/react/commit/b6c0aa88140bba2a61c1de16bda2505c89b26235"
            }
        ]
    },
    {
        "sha": "b6c0aa88140bba2a61c1de16bda2505c89b26235",
        "node_id": "C_kwDOAJy2KtoAKGI2YzBhYTg4MTQwYmJhMmE2MWMxZGUxNmJkYTI1MDVjODliMjYyMzU",
        "commit": {
            "author": {
                "name": "Wesley LeMahieu",
                "email": "wlemahieu@users.noreply.github.com",
                "date": "2025-06-09T15:40:27Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-09T15:40:27Z"
            },
            "message": "[compiler]: fix link compiler & 4 broken tests from path containing spaces (#33409)\n\n## Summary\n\nProblem #1: Running the `link-compiler.sh` bash script via `\"prebuild\"`\nscript fails if a developer has cloned the `react` repo into a folder\nthat contains _any_ spaces. 3 tests fail because of this.\n\n<img width=\"1003\" alt=\"fail-1\"\nsrc=\"https://github.com/user-attachments/assets/1fbfa9ce-4f84-48d7-b49c-b6e967b8c7ca\"\n/>\n<img width=\"1011\" alt=\"fail-2\"\nsrc=\"https://github.com/user-attachments/assets/0a8c6371-a2df-4276-af98-38f4784cf0da\"\n/>\n<img width=\"1027\" alt=\"fail-3\"\nsrc=\"https://github.com/user-attachments/assets/1c4f4429-800c-4b44-b3da-a59ac85a16b9\"\n/>\n\nFor example, my current folder is:\n`/Users/wes/Development/Open Source Contributions/react`\n\nThe link compiler error returns:\n`./scripts/react-compiler/link-compiler.sh: line 15: cd:\n/Users/wes/Development/Open: No such file or directory`\n\nProblem #2: 1 test in `ReactChildren-test.js` fails due the existing\nstack trace regex which should be lightly revised.\n\n`([^(\\[\\n]+)[^\\n]*/g` is more robust for stack traces: it captures the\nfunction/class name (with dots) and does not break on spaces in file\npaths.\n`([\\S]+)[^\\n]*/g` is simpler but breaks if there are spaces and doesn't\nhandle dotted names well.\n\nAdditionally, we trim the whitespace off the name to resolve extra\nspaces breaking this test as well:\n\n```\n-     in div (at **)\n+     in div  (at **)\n```\n\n<img width=\"987\" alt=\"fail-4\"\nsrc=\"https://github.com/user-attachments/assets/56a673bc-513f-4458-95b2-224129c77144\"\n/>\n\nAll of the above tests pass if I hyphenate my local folder:\n`/Users/wes/Development/Open-Source-Contributions/react`\n\nI selfishly want to keep spaces in my folder names. \ud83e\udee3\n\n## How did you test this change?\n\n**npx yarn prebuild**\n\nBefore:\n<img width=\"896\" alt=\"Screenshot at Jun 01 11-42-56\"\nsrc=\"https://github.com/user-attachments/assets/4692775c-1e5c-4851-9bd7-e12ed5455e47\"\n/>\n\nAfter:\n<img width=\"420\" alt=\"Screenshot at Jun 01 11-43-42\"\nsrc=\"https://github.com/user-attachments/assets/4e303c00-02b7-4540-ba19-927b2d7034fb\"\n/>\n\n**npx yarn test**\n**npx yarn test\n./packages/react/src/\\_\\_tests\\_\\_/ReactChildren-test.js**\n**npx yarn test -r=xplat --env=development --variant=true --ci\n--shard=3/5**\n\nBefore:\n<img width=\"438\" alt=\"before\"\nsrc=\"https://github.com/user-attachments/assets/f5eedb22-18c3-4124-a04b-daa95c0f7652\"\n/>\n\nAfter:\n<img width=\"439\" alt=\"after\"\nsrc=\"https://github.com/user-attachments/assets/a94218ba-7c6a-4f08-85d3-57540e9d0029\"\n/>\n\n<img width=\"650\" alt=\"Screenshot at Jun 02 18-03-39\"\nsrc=\"https://github.com/user-attachments/assets/3eae993c-a56b-46c8-ae02-d249cb053fe7\"\n/>\n\n<img width=\"685\" alt=\"Screenshot at Jun 03 12-53-47\"\nsrc=\"https://github.com/user-attachments/assets/5b2caa33-d3dc-4804-981d-52cb10b6226f\"\n/>",
            "tree": {
                "sha": "35957b82a722076355da3f8f571c3e8e7bb6f73d",
                "url": "https://api.github.com/repos/facebook/react/git/trees/35957b82a722076355da3f8f571c3e8e7bb6f73d"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b6c0aa88140bba2a61c1de16bda2505c89b26235",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoRwBrCRC1aQ7uu5UhlAAArukQAJB30EjrLh+vPosrZI+6VK2U\nu9bN29R2tATb214dxQhJmysWrRChsDECaHUtl+YU44poWNsajtU0InDFnsjZvnAy\nSr8Te2gMQC5jXRX8kZp8McldhQ+vGUP0FMBuJtJ/WILL3xnkEH6Sz4Fxl0a3S3hy\ntZedznrjUvAHAPrJ+JlBbQuzRUrbCM1952vEv8b5/i5PHX2T8jdOepqE9ENvMKt6\n8ABxsj2gBqAlbqkm4W1IlBBhqlD0EM44rBOZg70yqX0C3S+nHLXT3gFKkSr7dwiG\nMptvUcGa1fsWtucC9vGE/jF+UZ11UrSb0qbCZNCsOI3wC/eisYucucCyDaV+PY+H\nAi1y3v3bWUdfq/BI+VMAbLotwV9EMlap1GGxRiYvBLOtszRa5IQMBtuuhwMv3qPQ\n28li/U9Max3UZl1XY85/LzlBR6jGl/MseRfScLmqNZsRR8Qge1+cSN7M3nNm/whN\nKoDGLQqPNzXKepmUgwcsPJP3TM5j7Y53OXwfCY3EW/34gxrNdH0aUt6zlmUQPLJp\nOF0X2IkmRGBq4rv5huRzj2dB6wrmGmh24xqqfW3Ipl0Xus79cHgJSqN0mBgr3S+H\n7JpObrUhTB5mABzzU8lxYvFf4b4kxlvXyGtP15ca5ehiz35WNzi1hM+JJ237V93p\nY6zMFAUCzsHmFl+S2lcR\n=xueV\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 35957b82a722076355da3f8f571c3e8e7bb6f73d\nparent 428ab8200128d9421828dbe644c3448d21ea8c45\nauthor Wesley LeMahieu <wlemahieu@users.noreply.github.com> 1749483627 -0700\ncommitter GitHub <noreply@github.com> 1749483627 -0700\n\n[compiler]: fix link compiler & 4 broken tests from path containing spaces (#33409)\n\n## Summary\n\nProblem #1: Running the `link-compiler.sh` bash script via `\"prebuild\"`\nscript fails if a developer has cloned the `react` repo into a folder\nthat contains _any_ spaces. 3 tests fail because of this.\n\n<img width=\"1003\" alt=\"fail-1\"\nsrc=\"https://github.com/user-attachments/assets/1fbfa9ce-4f84-48d7-b49c-b6e967b8c7ca\"\n/>\n<img width=\"1011\" alt=\"fail-2\"\nsrc=\"https://github.com/user-attachments/assets/0a8c6371-a2df-4276-af98-38f4784cf0da\"\n/>\n<img width=\"1027\" alt=\"fail-3\"\nsrc=\"https://github.com/user-attachments/assets/1c4f4429-800c-4b44-b3da-a59ac85a16b9\"\n/>\n\nFor example, my current folder is:\n`/Users/wes/Development/Open Source Contributions/react`\n\nThe link compiler error returns:\n`./scripts/react-compiler/link-compiler.sh: line 15: cd:\n/Users/wes/Development/Open: No such file or directory`\n\nProblem #2: 1 test in `ReactChildren-test.js` fails due the existing\nstack trace regex which should be lightly revised.\n\n`([^(\\[\\n]+)[^\\n]*/g` is more robust for stack traces: it captures the\nfunction/class name (with dots) and does not break on spaces in file\npaths.\n`([\\S]+)[^\\n]*/g` is simpler but breaks if there are spaces and doesn't\nhandle dotted names well.\n\nAdditionally, we trim the whitespace off the name to resolve extra\nspaces breaking this test as well:\n\n```\n-     in div (at **)\n+     in div  (at **)\n```\n\n<img width=\"987\" alt=\"fail-4\"\nsrc=\"https://github.com/user-attachments/assets/56a673bc-513f-4458-95b2-224129c77144\"\n/>\n\nAll of the above tests pass if I hyphenate my local folder:\n`/Users/wes/Development/Open-Source-Contributions/react`\n\nI selfishly want to keep spaces in my folder names. \ud83e\udee3\n\n## How did you test this change?\n\n**npx yarn prebuild**\n\nBefore:\n<img width=\"896\" alt=\"Screenshot at Jun 01 11-42-56\"\nsrc=\"https://github.com/user-attachments/assets/4692775c-1e5c-4851-9bd7-e12ed5455e47\"\n/>\n\nAfter:\n<img width=\"420\" alt=\"Screenshot at Jun 01 11-43-42\"\nsrc=\"https://github.com/user-attachments/assets/4e303c00-02b7-4540-ba19-927b2d7034fb\"\n/>\n\n**npx yarn test**\n**npx yarn test\n./packages/react/src/\\_\\_tests\\_\\_/ReactChildren-test.js**\n**npx yarn test -r=xplat --env=development --variant=true --ci\n--shard=3/5**\n\nBefore:\n<img width=\"438\" alt=\"before\"\nsrc=\"https://github.com/user-attachments/assets/f5eedb22-18c3-4124-a04b-daa95c0f7652\"\n/>\n\nAfter:\n<img width=\"439\" alt=\"after\"\nsrc=\"https://github.com/user-attachments/assets/a94218ba-7c6a-4f08-85d3-57540e9d0029\"\n/>\n\n<img width=\"650\" alt=\"Screenshot at Jun 02 18-03-39\"\nsrc=\"https://github.com/user-attachments/assets/3eae993c-a56b-46c8-ae02-d249cb053fe7\"\n/>\n\n<img width=\"685\" alt=\"Screenshot at Jun 03 12-53-47\"\nsrc=\"https://github.com/user-attachments/assets/5b2caa33-d3dc-4804-981d-52cb10b6226f\"\n/>",
                "verified_at": "2025-06-09T15:40:29Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b6c0aa88140bba2a61c1de16bda2505c89b26235",
        "html_url": "https://github.com/facebook/react/commit/b6c0aa88140bba2a61c1de16bda2505c89b26235",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b6c0aa88140bba2a61c1de16bda2505c89b26235/comments",
        "author": {
            "login": "wlemahieu",
            "id": 9045737,
            "node_id": "MDQ6VXNlcjkwNDU3Mzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9045737?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wlemahieu",
            "html_url": "https://github.com/wlemahieu",
            "followers_url": "https://api.github.com/users/wlemahieu/followers",
            "following_url": "https://api.github.com/users/wlemahieu/following{/other_user}",
            "gists_url": "https://api.github.com/users/wlemahieu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wlemahieu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wlemahieu/subscriptions",
            "organizations_url": "https://api.github.com/users/wlemahieu/orgs",
            "repos_url": "https://api.github.com/users/wlemahieu/repos",
            "events_url": "https://api.github.com/users/wlemahieu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wlemahieu/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "428ab8200128d9421828dbe644c3448d21ea8c45",
                "url": "https://api.github.com/repos/facebook/react/commits/428ab8200128d9421828dbe644c3448d21ea8c45",
                "html_url": "https://github.com/facebook/react/commit/428ab8200128d9421828dbe644c3448d21ea8c45"
            }
        ]
    },
    {
        "sha": "428ab8200128d9421828dbe644c3448d21ea8c45",
        "node_id": "C_kwDOAJy2KtoAKDQyOGFiODIwMDEyOGQ5NDIxODI4ZGJlNjQ0YzM0NDhkMjFlYThjNDU",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-09T14:04:40Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-09T14:04:40Z"
            },
            "message": "[Flight] Simulate fetch to third party in fixture (#33484)\n\nThis adds some I/O to go get the third party thing to test how it\noverlaps.\n\nWith #33482, this is what it looks like. The await gets cut off when the\nthird party component starts rendering. I.e. after the latency to start.\n\n<img width=\"735\" alt=\"Screenshot 2025-06-08 at 5 42 46\u202fPM\"\nsrc=\"https://github.com/user-attachments/assets/f68d9a84-05a1-4125-b3f0-8f3e4eaaa5c1\"\n/>\n\nThis doesn't fully simulate everything because it should actually also\nsimulate each chunk of the stream coming back too. We could wrap the\nReadableStream to simulate that. In that scenario, it would probably get\nsome awaits on the chunks at the end too.",
            "tree": {
                "sha": "b4e6131f06eb1f8abce38cfe7604e7e78a56e3a3",
                "url": "https://api.github.com/repos/facebook/react/git/trees/b4e6131f06eb1f8abce38cfe7604e7e78a56e3a3"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/428ab8200128d9421828dbe644c3448d21ea8c45",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoRun4CRC1aQ7uu5UhlAAA4FkQADD+lnKbEfz7pt/m26WQgHjI\nXxTKHTYyZIIWKpBtdtZv59RezngnO5Z9EAWjIvV/iyDcWXcQLMIC3OCnmrz3n43O\nSspexTBC1HwvUys1I3718Xbh/uXUz8xrMIiM9ZLMIQMIsQJKwDHmXDkWd5+gP9xK\n0/vZk3XVaNCu9n89IJnwjRXyUTGqfY5XPJHi3II/huB4mZ6R61tpCpG/yy5rTVCn\noCTjErPiJ9imcBSx74uIaoeK5LAXdwHfjUWPebPYOalbBgYV9MxC7OxnlWxDfLVp\nGGD6tq5Sw7nplE5ula6yywaCWppmiu2zx6Ca0Dck3z8iGahp8Q2iVi6FwNB9Ye/p\n1PfAqWpnY59B55RE7yYbgminJCJEryjnZuMpxO2HBzZxp618qS+WHWYqPoV0aEzi\nbLG02yx1Puxh9Eu+p2fETIYTDRBTzwTUIJWdRvtveCGETmiYk/gq82xsaOqLf9GI\nNos9A/EPLVsnTe4VJGTcLfUmmhVItZF66OHGoosXRYuyJLFbubeJXoXiXXc0Uyxn\nZS5yC1gIhgaGH+i/BJhv8eW9lZOfcNaboYOlSgQ7NXlbt9F2RY7x0lbHhFVH68NO\nOq104sam3FupuV+OE25kvDTJCGQjxECAQg0ybjJF8/Ib4eUDaK0+REYgL2Eqp3jO\n6YCj1FWAch7m2Hbd8Z7d\n=89ux\n-----END PGP SIGNATURE-----\n",
                "payload": "tree b4e6131f06eb1f8abce38cfe7604e7e78a56e3a3\nparent 4df098c4c2c51a033592ebc84abc47cc49a6bfb2\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749477880 -0400\ncommitter GitHub <noreply@github.com> 1749477880 -0400\n\n[Flight] Simulate fetch to third party in fixture (#33484)\n\nThis adds some I/O to go get the third party thing to test how it\noverlaps.\n\nWith #33482, this is what it looks like. The await gets cut off when the\nthird party component starts rendering. I.e. after the latency to start.\n\n<img width=\"735\" alt=\"Screenshot 2025-06-08 at 5 42 46\u202fPM\"\nsrc=\"https://github.com/user-attachments/assets/f68d9a84-05a1-4125-b3f0-8f3e4eaaa5c1\"\n/>\n\nThis doesn't fully simulate everything because it should actually also\nsimulate each chunk of the stream coming back too. We could wrap the\nReadableStream to simulate that. In that scenario, it would probably get\nsome awaits on the chunks at the end too.",
                "verified_at": "2025-06-09T14:04:43Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/428ab8200128d9421828dbe644c3448d21ea8c45",
        "html_url": "https://github.com/facebook/react/commit/428ab8200128d9421828dbe644c3448d21ea8c45",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/428ab8200128d9421828dbe644c3448d21ea8c45/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "4df098c4c2c51a033592ebc84abc47cc49a6bfb2",
                "url": "https://api.github.com/repos/facebook/react/commits/4df098c4c2c51a033592ebc84abc47cc49a6bfb2",
                "html_url": "https://github.com/facebook/react/commit/4df098c4c2c51a033592ebc84abc47cc49a6bfb2"
            }
        ]
    },
    {
        "sha": "4df098c4c2c51a033592ebc84abc47cc49a6bfb2",
        "node_id": "C_kwDOAJy2KtoAKDRkZjA5OGM0YzJjNTFhMDMzNTkyZWJjODRhYmM0N2NjNDlhNmJmYjI",
        "commit": {
            "author": {
                "name": "Jordan Brown",
                "email": "jmbrown@meta.com",
                "date": "2025-06-09T13:26:45Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-09T13:26:45Z"
            },
            "message": "[compiler] Don't include useEffectEvent values in autodeps (#33450)\n\nSummary: useEffectEvent values are not meant to be added to the dep\narray",
            "tree": {
                "sha": "61b74537c711bcd35755686496294e9672121ac4",
                "url": "https://api.github.com/repos/facebook/react/git/trees/61b74537c711bcd35755686496294e9672121ac4"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/4df098c4c2c51a033592ebc84abc47cc49a6bfb2",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoRuEVCRC1aQ7uu5UhlAAA+5sQAHbatIV4tytsY9SOdCLo/jZE\ndH0RlxaXrFaWavUGCyiGAAKKQYm8+xf7RnZhC7N9qF6IsiIf57F2+zf/Q9tcol7h\nQb9xdz2kiiuTdqEyIVYa8iF2E4a4r5pfTN8GI7rlRb6aNH0jTJWYXqZpsQ0KGnpt\nErZ84SF7BzusR1KHexWO69bmBh+FtBfptbuaU7UYJmnjr43Err6TYS8+TZbUOBTM\nB0ZKpdEeIA8n+SwNr+7Ww0ctFRPid0Wby/huzu7UWF80riebNJmjUSKLDEut0H3w\nsZSQdXVpgQUhBr/xVuLpXC6t9Uvv3wGX5H10CZ/ded6ZO9nFvnAKA1J4XGOS08Ed\n3sTdV8jnZ6V2t5tQJcqNxjrLjD0p4TdZ8caSaTpn4R6BNABUPEs/eiADO0JUiu0L\niAIZZvL3z0YQdmvFnbffCSSQdDLbZWQb9meyaNE/ciAFX+dYw35g6XOsV43Sr9Px\ntNSCanAziAMz0SDkCw0m53vVflG4lDSS8h+XD7bF5PLJtVPzgnIQ8uUpp6kiRAXk\nGHp2V13rq3xYQt3tyovCbemft4gjqe6Ite06PgMz2rZ7RldLvRxkiLbpPY+e1FHW\nKYYwOT1K5Ct3AQyuox/IsipgG84vihHG17smbN/KlaODC8fiNMkP/eUPFDxt5K0F\nUCKIXUJ6/n8vc3OoJHzD\n=fhul\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 61b74537c711bcd35755686496294e9672121ac4\nparent 95bcf87e6b29f4efee26d0a79cbdc84776180cce\nauthor Jordan Brown <jmbrown@meta.com> 1749475605 -0400\ncommitter GitHub <noreply@github.com> 1749475605 -0400\n\n[compiler] Don't include useEffectEvent values in autodeps (#33450)\n\nSummary: useEffectEvent values are not meant to be added to the dep\narray",
                "verified_at": "2025-06-09T13:26:47Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/4df098c4c2c51a033592ebc84abc47cc49a6bfb2",
        "html_url": "https://github.com/facebook/react/commit/4df098c4c2c51a033592ebc84abc47cc49a6bfb2",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/4df098c4c2c51a033592ebc84abc47cc49a6bfb2/comments",
        "author": {
            "login": "jbrown215",
            "id": 8551887,
            "node_id": "MDQ6VXNlcjg1NTE4ODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8551887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jbrown215",
            "html_url": "https://github.com/jbrown215",
            "followers_url": "https://api.github.com/users/jbrown215/followers",
            "following_url": "https://api.github.com/users/jbrown215/following{/other_user}",
            "gists_url": "https://api.github.com/users/jbrown215/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jbrown215/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jbrown215/subscriptions",
            "organizations_url": "https://api.github.com/users/jbrown215/orgs",
            "repos_url": "https://api.github.com/users/jbrown215/repos",
            "events_url": "https://api.github.com/users/jbrown215/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jbrown215/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "95bcf87e6b29f4efee26d0a79cbdc84776180cce",
                "url": "https://api.github.com/repos/facebook/react/commits/95bcf87e6b29f4efee26d0a79cbdc84776180cce",
                "html_url": "https://github.com/facebook/react/commit/95bcf87e6b29f4efee26d0a79cbdc84776180cce"
            }
        ]
    },
    {
        "sha": "95bcf87e6b29f4efee26d0a79cbdc84776180cce",
        "node_id": "C_kwDOAJy2KtoAKDk1YmNmODdlNmIyOWY0ZWZlZTI2ZDBhNzljYmRjODQ3NzYxODBjY2U",
        "commit": {
            "author": {
                "name": "Hendrik Liebau",
                "email": "mail@hendrik-liebau.de",
                "date": "2025-06-09T11:42:10Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-09T11:42:10Z"
            },
            "message": "Format `ReactNativeAttributePayloadFabric.js` with Prettier (#33486)\n\nThe prettier check for this file is currently failing on `main`, after\n#32119 was merged.",
            "tree": {
                "sha": "a7910bf6b958b6206c4df53b792e346caeabb060",
                "url": "https://api.github.com/repos/facebook/react/git/trees/a7910bf6b958b6206c4df53b792e346caeabb060"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/95bcf87e6b29f4efee26d0a79cbdc84776180cce",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoRsiSCRC1aQ7uu5UhlAAAgjEQAE8sljaeBrWBWLgF505iOEPY\ncEd+btLEBKaobzr8ylt/VlzLlUjRDCFBJZB8njPrvQptV0+5bV3EooAQZvzAFQMj\n5t1yASHER2bd54eWYiiz5vApTSQh7e619ibfCapwV1AYBSNc7+M04Iv9Tx9/z/bK\njSfhFNTWHQkRFJFOh7rM5rdqXGk9kLNvByyLXVGXB9Vq2UriM4GrXft4XfDgp/YM\nuRtciY0tNuP05RH7vH6B9vAXd7s+Y1CAN09vdk8u4z/vL1yD0ick+V0xvRxjD05t\nWftfCZkt6WTdYtdJK7hoZt0b1e3vlgXQeT4Ntt8JDim5vhqtt9ZiLyReSyAxZr4r\nzO/7BlRiAusvWKSa3JJtV0Wy1CQqBqdMf9ys9vAz6lyvvX3sPlJlaMhdSLXHsYu9\n037K1LGLN6FjVs6DMSRAFzqNy4y9+6bZJ2cX+zuQciF7FokcJXiozIhOHbLTlJmg\nPM+ZkpYejIiyiL6Sybsg13pLc1Q6xPkzKB8daUc1y3BEHEwRn6GqFbm5D/oK8/9L\nLZGWN8kanVEF6mL1stchgUpvm5cNS8TB3QHw5dyRQl2wUZ9mXohda0L2KLvw5yUm\n2RwAJs04oKvtPiKvLWOCbU0ci3n8X4ZnQ6l78BW6JORTycbQqb78zJt4++KXHCgj\nYLtreZkZqE5swOrEenu4\n=QWek\n-----END PGP SIGNATURE-----\n",
                "payload": "tree a7910bf6b958b6206c4df53b792e346caeabb060\nparent 911dbd9e34048b21e96f24acb837b926687aa939\nauthor Hendrik Liebau <mail@hendrik-liebau.de> 1749469330 +0200\ncommitter GitHub <noreply@github.com> 1749469330 +0100\n\nFormat `ReactNativeAttributePayloadFabric.js` with Prettier (#33486)\n\nThe prettier check for this file is currently failing on `main`, after\n#32119 was merged.",
                "verified_at": "2025-06-09T11:42:13Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/95bcf87e6b29f4efee26d0a79cbdc84776180cce",
        "html_url": "https://github.com/facebook/react/commit/95bcf87e6b29f4efee26d0a79cbdc84776180cce",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/95bcf87e6b29f4efee26d0a79cbdc84776180cce/comments",
        "author": {
            "login": "unstubbable",
            "id": 761683,
            "node_id": "MDQ6VXNlcjc2MTY4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/761683?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/unstubbable",
            "html_url": "https://github.com/unstubbable",
            "followers_url": "https://api.github.com/users/unstubbable/followers",
            "following_url": "https://api.github.com/users/unstubbable/following{/other_user}",
            "gists_url": "https://api.github.com/users/unstubbable/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/unstubbable/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/unstubbable/subscriptions",
            "organizations_url": "https://api.github.com/users/unstubbable/orgs",
            "repos_url": "https://api.github.com/users/unstubbable/repos",
            "events_url": "https://api.github.com/users/unstubbable/events{/privacy}",
            "received_events_url": "https://api.github.com/users/unstubbable/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "911dbd9e34048b21e96f24acb837b926687aa939",
                "url": "https://api.github.com/repos/facebook/react/commits/911dbd9e34048b21e96f24acb837b926687aa939",
                "html_url": "https://github.com/facebook/react/commit/911dbd9e34048b21e96f24acb837b926687aa939"
            }
        ]
    },
    {
        "sha": "911dbd9e34048b21e96f24acb837b926687aa939",
        "node_id": "C_kwDOAJy2KtoAKDkxMWRiZDllMzQwNDhiMjFlOTZmMjRhY2I4MzdiOTI2Njg3YWE5Mzk",
        "commit": {
            "author": {
                "name": "Hanno J. G\u00f6decke",
                "email": "die.drei99@yahoo.de",
                "date": "2025-06-09T09:55:28Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-09T09:55:28Z"
            },
            "message": "feat(ReactNative): prioritize attribute config `process` function to allow processing function props (#32119)\n\n## Summary\n\nIn react-native props that are passed as function get converted to a\nboolean (`true`). This is the default pattern for event handlers in\nreact-native.\nHowever, there are reasons for why you might want to opt-out of this\nbehavior, and instead, pass along the actual function as the prop.\nRight now, there is no way to do this, and props that are functions\nalways get set to `true`.\nThe `ViewConfig` attributes already have the API for a `process`\nfunction. I simply moved the check for the process function up, so if a\nViewConfig's prop attribute configured a process function this is always\ncalled first.\nThis provides an API to opt out of the default behavior. \n\nThis is the accompanied PR for react-native:\n\n- https://github.com/facebook/react-native/pull/48777\n\n## How did you test this change?\n\n<!--\nDemonstrate the code is solid. Example: The exact commands you ran and\ntheir output, screenshots / videos if the pull request changes the user\ninterface.\nHow exactly did you verify that your PR solves the issue you wanted to\nsolve?\n  If you leave this empty, your PR will very likely be closed.\n-->\n\nI modified the code manually in a template react-native app and\nconfirmed its working. This is a code path you only need in very special\ncases, thus it's a bit hard to provide a test for this. I recorded a\nvideo where you can see that the changes are active and the prop is\nbeing passed as native value.\n\nFor this I created a custom native component with a view config that\nlooked like this:\n\n```js\nconst viewConfig = {\n  uiViewClassName: 'CustomView',\n  bubblingEventTypes: {},\n  directEventTypes: {},\n  validAttributes: {\n    nativeProp: {\n      process: (nativeProp) => {\n\t\t// Identity function that simply returns the prop function callback\n        // to opt out of this prop being set to `true` as its a function\n        return nativeProp\n      },\n    },\n  },\n}\n```\n\n\n\nhttps://github.com/user-attachments/assets/493534b2-a508-4142-a760-0b1b24419e19\n\nAdditionally I made sure that this doesn't conflict with any existing\nview configs in react native. In general, this shouldn't be a breaking\nchange, as for existing view configs it didn't made a difference if you\nsimply set `myProp: true` or `myProp: { process: () => {...} }` because\nas soon as it was detected that the prop is a function the config\nwouldn't be used (which is what this PR fixes).\nProbably everyone, including the react-native core components use\n`myProp: true` for callback props, so this change should be fine.",
            "tree": {
                "sha": "47c4e899f88ade5e34ee4e3c4fbf557f88f8690b",
                "url": "https://api.github.com/repos/facebook/react/git/trees/47c4e899f88ade5e34ee4e3c4fbf557f88f8690b"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/911dbd9e34048b21e96f24acb837b926687aa939",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoRq+QCRC1aQ7uu5UhlAAAIwUQACjYeRnlBYkj0RP6XqzjSkTH\nZZYNnrcz7jM0zowF4np9Rt9mMNa5ZLNQ4IIJn9wzZdgXzUnzu+fg4ZiLnrXjyAGQ\nRhl4e3LwNFhMMaTfTemPZTdTkddRoOeHpeis7uaML3obB7A+tkeZmmgJ1TYT+ftX\nPU8YL+diQwSfM+Se6HP+7kcnDmdOAx9kQANcnfFQHUT7AW1QODW1w8ERF6FBYwyT\n6g3Ua1GKT2rHSoGwjAz0gAHC+Ctmrqfskk5aPCo8W8UdI/DwnHRCIdJV926Vkb2D\nJ6b3VEgrWpH+TKPV2bYfeZMTV4UbdPmSqJBzwWdJgjZcUDNd0HkBguLunVAtVl8Z\nEx7Iy6KjUlJLK2lfzMvZm9277TrKE8SvytXbG35ccwkwe3KFcT5Osvb8dkn1JOBa\nE8++exYgEWbKeR1PSCEp1FFtLPMOypStIVTOwA2jV7takwpvGiIjHdb64rEXTWns\nIItTomMlQHln33ihU8b/N87A6HMV0VPB0MJGXkyb6tJDDsGRybPTTvgkCtQJIMWZ\n4lZbjcw4iWIZLED32fzUu7kwTdhzw8gDgXQ6KhFSNrSkzTxgP+G1zwC3TSiG7H6s\nV2phILx7iqGMX0R8zhp+sfxoe4TjR+RIrxOBrjTJhjkNXII+RQYPUUHncTpSK7Ye\nz51E7uBxIsHY7n2CdBdY\n=+TcG\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 47c4e899f88ade5e34ee4e3c4fbf557f88f8690b\nparent c0b5a0cad32cbf237d4c0134bef702d6ba3e393c\nauthor Hanno J. G\u00f6decke <die.drei99@yahoo.de> 1749462928 +0200\ncommitter GitHub <noreply@github.com> 1749462928 +0100\n\nfeat(ReactNative): prioritize attribute config `process` function to allow processing function props (#32119)\n\n## Summary\n\nIn react-native props that are passed as function get converted to a\nboolean (`true`). This is the default pattern for event handlers in\nreact-native.\nHowever, there are reasons for why you might want to opt-out of this\nbehavior, and instead, pass along the actual function as the prop.\nRight now, there is no way to do this, and props that are functions\nalways get set to `true`.\nThe `ViewConfig` attributes already have the API for a `process`\nfunction. I simply moved the check for the process function up, so if a\nViewConfig's prop attribute configured a process function this is always\ncalled first.\nThis provides an API to opt out of the default behavior. \n\nThis is the accompanied PR for react-native:\n\n- https://github.com/facebook/react-native/pull/48777\n\n## How did you test this change?\n\n<!--\nDemonstrate the code is solid. Example: The exact commands you ran and\ntheir output, screenshots / videos if the pull request changes the user\ninterface.\nHow exactly did you verify that your PR solves the issue you wanted to\nsolve?\n  If you leave this empty, your PR will very likely be closed.\n-->\n\nI modified the code manually in a template react-native app and\nconfirmed its working. This is a code path you only need in very special\ncases, thus it's a bit hard to provide a test for this. I recorded a\nvideo where you can see that the changes are active and the prop is\nbeing passed as native value.\n\nFor this I created a custom native component with a view config that\nlooked like this:\n\n```js\nconst viewConfig = {\n  uiViewClassName: 'CustomView',\n  bubblingEventTypes: {},\n  directEventTypes: {},\n  validAttributes: {\n    nativeProp: {\n      process: (nativeProp) => {\n\t\t// Identity function that simply returns the prop function callback\n        // to opt out of this prop being set to `true` as its a function\n        return nativeProp\n      },\n    },\n  },\n}\n```\n\n\n\nhttps://github.com/user-attachments/assets/493534b2-a508-4142-a760-0b1b24419e19\n\nAdditionally I made sure that this doesn't conflict with any existing\nview configs in react native. In general, this shouldn't be a breaking\nchange, as for existing view configs it didn't made a difference if you\nsimply set `myProp: true` or `myProp: { process: () => {...} }` because\nas soon as it was detected that the prop is a function the config\nwouldn't be used (which is what this PR fixes).\nProbably everyone, including the react-native core components use\n`myProp: true` for callback props, so this change should be fine.",
                "verified_at": "2025-06-09T09:55:30Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/911dbd9e34048b21e96f24acb837b926687aa939",
        "html_url": "https://github.com/facebook/react/commit/911dbd9e34048b21e96f24acb837b926687aa939",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/911dbd9e34048b21e96f24acb837b926687aa939/comments",
        "author": {
            "login": "hannojg",
            "id": 16821682,
            "node_id": "MDQ6VXNlcjE2ODIxNjgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16821682?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hannojg",
            "html_url": "https://github.com/hannojg",
            "followers_url": "https://api.github.com/users/hannojg/followers",
            "following_url": "https://api.github.com/users/hannojg/following{/other_user}",
            "gists_url": "https://api.github.com/users/hannojg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hannojg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hannojg/subscriptions",
            "organizations_url": "https://api.github.com/users/hannojg/orgs",
            "repos_url": "https://api.github.com/users/hannojg/repos",
            "events_url": "https://api.github.com/users/hannojg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hannojg/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "c0b5a0cad32cbf237d4c0134bef702d6ba3e393c",
                "url": "https://api.github.com/repos/facebook/react/commits/c0b5a0cad32cbf237d4c0134bef702d6ba3e393c",
                "html_url": "https://github.com/facebook/react/commit/c0b5a0cad32cbf237d4c0134bef702d6ba3e393c"
            }
        ]
    },
    {
        "sha": "c0b5a0cad32cbf237d4c0134bef702d6ba3e393c",
        "node_id": "C_kwDOAJy2KtoAKGMwYjVhMGNhZDMyY2JmMjM3ZDRjMDEzNGJlZjcwMmQ2YmEzZTM5M2M",
        "commit": {
            "author": {
                "name": "Hendrik Liebau",
                "email": "mail@hendrik-liebau.de",
                "date": "2025-06-08T04:33:25Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-08T04:33:25Z"
            },
            "message": "[Flight] Use Web Streams APIs for 3rd-party component in Flight fixture (#33481)",
            "tree": {
                "sha": "4a69cb34d3485e0023129860970ac372c7c776fa",
                "url": "https://api.github.com/repos/facebook/react/git/trees/4a69cb34d3485e0023129860970ac372c7c776fa"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/c0b5a0cad32cbf237d4c0134bef702d6ba3e393c",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoRRKVCRC1aQ7uu5UhlAAABCUQAAQwHR3MuoZlZy/hN3536EA3\ny8qBHQh8eoMifVmy9aEyLrpA6vqQkEUkub5EKnr3kWqN9UWffm72gE/cEd3hLNI4\ni06qhgEFGzbCEH3oc4XJ/PD84V1Xzeg9jGLrwd7343X/63bJkD42qcQrnIT7jFIk\nLSQw2ri1T0kaqybQ/yynaewUbJEaPcYTNNTJLILVwYLqOTcJir1nkRtvMgHVyeMr\nLj0sIfq/YZ7sILJ3NMB8SAj7iWMGAFG5j2zObntfvj5H19VGURG85uKcYsNIAxzl\nu6vtg7pZApvdUF34n3rnXwtXZTLVXVSWsW5vnK5a4OP5NB/+e69S/jIyxeIdAxM0\nmCaScAzfxtGYu75QnMyhdBK2npHT+A+URLP4Te3fGvpPR0g0fF1C3vlB6TujXgZV\nKNyqALnBpmBu3U+k8kgPlCXEMFyPo6nxlDaZDGgDsiV6veobfanvJIW/cH7PZjms\nV/9aPbnfzD9BSZAqac6gmhF+VWNVwCK+lkWMHURr3fpqlth0+YLh63/5LIs3XD3l\nfxGGEDi35/1lKuyE2vp7kQbCv8URRdy23XzS7zUTtfFYDRe2Zi4BHK0bXfT8Rj3D\nwjlRkHhsBc8BhgJRDbOLw697xzOl7qLQ1YktAYzb4nX1ZagcRmrKtxVcmfT7aK3d\nvWkaqeojrCzjL7gPHtJp\n=DI7c\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 4a69cb34d3485e0023129860970ac372c7c776fa\nparent e4b88ae4c6c30791b6c1c2794d5a8e32ed19c931\nauthor Hendrik Liebau <mail@hendrik-liebau.de> 1749357205 +0200\ncommitter GitHub <noreply@github.com> 1749357205 +0200\n\n[Flight] Use Web Streams APIs for 3rd-party component in Flight fixture (#33481)\n\n",
                "verified_at": "2025-06-08T04:33:27Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/c0b5a0cad32cbf237d4c0134bef702d6ba3e393c",
        "html_url": "https://github.com/facebook/react/commit/c0b5a0cad32cbf237d4c0134bef702d6ba3e393c",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/c0b5a0cad32cbf237d4c0134bef702d6ba3e393c/comments",
        "author": {
            "login": "unstubbable",
            "id": 761683,
            "node_id": "MDQ6VXNlcjc2MTY4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/761683?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/unstubbable",
            "html_url": "https://github.com/unstubbable",
            "followers_url": "https://api.github.com/users/unstubbable/followers",
            "following_url": "https://api.github.com/users/unstubbable/following{/other_user}",
            "gists_url": "https://api.github.com/users/unstubbable/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/unstubbable/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/unstubbable/subscriptions",
            "organizations_url": "https://api.github.com/users/unstubbable/orgs",
            "repos_url": "https://api.github.com/users/unstubbable/repos",
            "events_url": "https://api.github.com/users/unstubbable/events{/privacy}",
            "received_events_url": "https://api.github.com/users/unstubbable/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "e4b88ae4c6c30791b6c1c2794d5a8e32ed19c931",
                "url": "https://api.github.com/repos/facebook/react/commits/e4b88ae4c6c30791b6c1c2794d5a8e32ed19c931",
                "html_url": "https://github.com/facebook/react/commit/e4b88ae4c6c30791b6c1c2794d5a8e32ed19c931"
            }
        ]
    },
    {
        "sha": "e4b88ae4c6c30791b6c1c2794d5a8e32ed19c931",
        "node_id": "C_kwDOAJy2KtoAKGU0Yjg4YWU0YzZjMzA3OTFiNmMxYzI3OTRkNWE4ZTMyZWQxOWM5MzE",
        "commit": {
            "author": {
                "name": "Hendrik Liebau",
                "email": "mail@hendrik-liebau.de",
                "date": "2025-06-07T21:39:25Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-07T21:39:25Z"
            },
            "message": "[Flight] Add Web Streams APIs to unbundled Node entries for Webpack (#33480)",
            "tree": {
                "sha": "db3ec838ea396bfa124ae994049b73390233e813",
                "url": "https://api.github.com/repos/facebook/react/git/trees/db3ec838ea396bfa124ae994049b73390233e813"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/e4b88ae4c6c30791b6c1c2794d5a8e32ed19c931",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoRLGNCRC1aQ7uu5UhlAAAbWQQAArJP9vGW5wNVWXz3a0LVYZV\nQdVvpqkUnbIG2e0cqXU7yevRhdxjo6DBEDIl9lBG8pknKN7zUkil1EMsNrU8l/1Y\nuK2lwfndYryQhUwOLdVJzoo+6xPDNHKeS47RwlA0AnbK9nl1yQvvF1/6jnN/myxt\nUX1kT9TtxN+QxIK2SqY9MfHbwaW6j8R58LUf/AI5GzXWL/apQVSxkL8rp/ugBiEl\n5URfYcQMC5+xkkrd/QUX5ZHiZ8i8teOdkPxN7S4w/VcC4x4kogia4u66gWo/z7iA\nwuSqdS54Mf6vW7Jxucf901/N3ZSghyKzX0+wIOpn2zHMA76bVhCKLvrEFpPd3ZLn\nhB3V5oWhFROgqI8n6pGoYZ6/SlOTHKtu0f/MaCPDZQHFOV3Q4+ch9K9DMZye9OHI\nzyQsE/Y6iNrfzlSXdh2YHisvYaqu/vuYXqANoqZH72fJK19pxeFTBqEfTg+IargW\n5g4HNxJwC75ovcmFm8zY8OAu4fO12M1Pl4DNavTuwPB9cvXb7FS1BIowI8Hrz+IJ\n0o/zv0f+O89RLPq6gz5G/82f1GSjbmgtGCYQC67KThlw+w2+xgPjhORYscgdpkhu\n4ylosEiQ+lXZOuohRuaao+kpaP8jfXzJzinTicOxHrCNJmn/sR6gn8JdBOarB7V0\nnmSH1joc71R90HLhRtUc\n=0FGi\n-----END PGP SIGNATURE-----\n",
                "payload": "tree db3ec838ea396bfa124ae994049b73390233e813\nparent 6c8bcdaf1b0c3340150e174a342429d94e729fbb\nauthor Hendrik Liebau <mail@hendrik-liebau.de> 1749332365 +0200\ncommitter GitHub <noreply@github.com> 1749332365 +0200\n\n[Flight] Add Web Streams APIs to unbundled Node entries for Webpack (#33480)\n\n",
                "verified_at": "2025-06-07T21:39:28Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/e4b88ae4c6c30791b6c1c2794d5a8e32ed19c931",
        "html_url": "https://github.com/facebook/react/commit/e4b88ae4c6c30791b6c1c2794d5a8e32ed19c931",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/e4b88ae4c6c30791b6c1c2794d5a8e32ed19c931/comments",
        "author": {
            "login": "unstubbable",
            "id": 761683,
            "node_id": "MDQ6VXNlcjc2MTY4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/761683?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/unstubbable",
            "html_url": "https://github.com/unstubbable",
            "followers_url": "https://api.github.com/users/unstubbable/followers",
            "following_url": "https://api.github.com/users/unstubbable/following{/other_user}",
            "gists_url": "https://api.github.com/users/unstubbable/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/unstubbable/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/unstubbable/subscriptions",
            "organizations_url": "https://api.github.com/users/unstubbable/orgs",
            "repos_url": "https://api.github.com/users/unstubbable/repos",
            "events_url": "https://api.github.com/users/unstubbable/events{/privacy}",
            "received_events_url": "https://api.github.com/users/unstubbable/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "6c8bcdaf1b0c3340150e174a342429d94e729fbb",
                "url": "https://api.github.com/repos/facebook/react/commits/6c8bcdaf1b0c3340150e174a342429d94e729fbb",
                "html_url": "https://github.com/facebook/react/commit/6c8bcdaf1b0c3340150e174a342429d94e729fbb"
            }
        ]
    },
    {
        "sha": "6c8bcdaf1b0c3340150e174a342429d94e729fbb",
        "node_id": "C_kwDOAJy2KtoAKDZjOGJjZGFmMWIwYzMzNDAxNTBlMTc0YTM0MjQyOWQ5NGU3MjlmYmI",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-07T21:26:36Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-07T21:26:36Z"
            },
            "message": "[Flight] Clarify Semantics for Awaiting Cached Data (#33438)\n\nTechnically the async call graph spans basically all the way back to the\nstart of the app potentially, but we don't want to include everything.\nSimilarly we don't want to include everything from previous components\nin every child component. So we need some heuristics for filtering out\ndata.\n\nWe roughly want to be able to inspect is what might contribute to a\nSuspense loading sequence even if it didn't this time e.g. due to a race\ncondition.\n\nOne flaw with the previous approach was that awaiting a cached promise\nin a sibling that happened to finish after another sibling would be\nexcluded. However, in a different race condition that might end up being\nused so I wanted to include an empty \"await\" in that scenario to have\nsome association from that component.\n\nHowever, for data that resolved fully before the request even started,\nit's a little different. This can be things that are part of the start\nup sequence of the app or externally cached data. We decided that this\nshould be excluded because it doesn't contribute to the loading sequence\nin the expected scenario. I.e. if it's cached. Things that end up being\ncache misses would still be included. If you want to test externally\ncached data misses, then it's up to you or the framework to simulate\nthose. E.g. by dropping the cache. This also helps free up some noise\nsince static / cached data can be excluded in visualizations.\n\nI also apply this principle to forwarding debug info. If you reuse a\ncached RSC payload, then the Server Component render time and its awaits\ngets clamped to the caller as if it has zero render/await time. The I/O\nentry is still back dated but if it was fully resolved before we started\nthen it's completely excluded.",
            "tree": {
                "sha": "92efa396bd0f0fa00f8e7645e0c8e03fc2ad7a8b",
                "url": "https://api.github.com/repos/facebook/react/git/trees/92efa396bd0f0fa00f8e7645e0c8e03fc2ad7a8b"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/6c8bcdaf1b0c3340150e174a342429d94e729fbb",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoRK6MCRC1aQ7uu5UhlAAARXUQAESwks49MKdXWGjAW6XyCr/+\n5gkY7QckmLXe8T2B33eOR9rXGpV1SUKaUyVAflJlsE9m/gibrVzBjVs4vg7BAkUp\n+VhE2xrdbii1V9tZU+IFRYZl56uRuyKuid/Mshwc39lxBrANk6rvs493MqGankk1\nHCRbA41fiu6hl+9iOepOdWjuM/66uwbWzQJw6v+Tl0zJKAdbJXq9dP7AyyiHvRjH\nMwkLrbjzJ7V9xGcwJfZ1P8yKwCBqqetj0R6N7q+FF5qRNvnvVbjOJN7omLcJjB41\nZYt+tiXWK5Pqs2W9m/fLceHC0NIPUavJnH5bv+uJKslSyPuMkbMXg4oLYy5apXo6\niSTLzvxqcoh9/U05aiPq1kDDdbAFZ0nK1m+uR0O1r3V6Tx08lDTFFD99+JO9/c9D\nb3OXGonGDFjvViBVLNtyx/CsOeSMHVtXln6/p5HmywTd/JvR3+6wzkHxACdSQ/1n\nuZ3rk4QVVeFaG46wul2nxE3o66gCJEpbC3nubLAffE1YE+z7FMxeHRZM6iAHY2QO\nHS0Y03k/CuEutUw6l8nxnCD9t3lvf/M4iZ0ppPoNLzasnujmv8hh/1EX3QK0vpmU\numEwNqq6KgT2PYrmrrpfGAcyCNfMYsPcYagUnsJb6NZ2LbpY448b8jN18CbtoOat\n2OZ06lS5bcbpKrZkkwlp\n=A2xL\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 92efa396bd0f0fa00f8e7645e0c8e03fc2ad7a8b\nparent b367b60927dd85239852bfee60715034c7ca97ba\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749331596 -0400\ncommitter GitHub <noreply@github.com> 1749331596 -0400\n\n[Flight] Clarify Semantics for Awaiting Cached Data (#33438)\n\nTechnically the async call graph spans basically all the way back to the\nstart of the app potentially, but we don't want to include everything.\nSimilarly we don't want to include everything from previous components\nin every child component. So we need some heuristics for filtering out\ndata.\n\nWe roughly want to be able to inspect is what might contribute to a\nSuspense loading sequence even if it didn't this time e.g. due to a race\ncondition.\n\nOne flaw with the previous approach was that awaiting a cached promise\nin a sibling that happened to finish after another sibling would be\nexcluded. However, in a different race condition that might end up being\nused so I wanted to include an empty \"await\" in that scenario to have\nsome association from that component.\n\nHowever, for data that resolved fully before the request even started,\nit's a little different. This can be things that are part of the start\nup sequence of the app or externally cached data. We decided that this\nshould be excluded because it doesn't contribute to the loading sequence\nin the expected scenario. I.e. if it's cached. Things that end up being\ncache misses would still be included. If you want to test externally\ncached data misses, then it's up to you or the framework to simulate\nthose. E.g. by dropping the cache. This also helps free up some noise\nsince static / cached data can be excluded in visualizations.\n\nI also apply this principle to forwarding debug info. If you reuse a\ncached RSC payload, then the Server Component render time and its awaits\ngets clamped to the caller as if it has zero render/await time. The I/O\nentry is still back dated but if it was fully resolved before we started\nthen it's completely excluded.",
                "verified_at": "2025-06-07T21:26:37Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/6c8bcdaf1b0c3340150e174a342429d94e729fbb",
        "html_url": "https://github.com/facebook/react/commit/6c8bcdaf1b0c3340150e174a342429d94e729fbb",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/6c8bcdaf1b0c3340150e174a342429d94e729fbb/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "b367b60927dd85239852bfee60715034c7ca97ba",
                "url": "https://api.github.com/repos/facebook/react/commits/b367b60927dd85239852bfee60715034c7ca97ba",
                "html_url": "https://github.com/facebook/react/commit/b367b60927dd85239852bfee60715034c7ca97ba"
            }
        ]
    },
    {
        "sha": "b367b60927dd85239852bfee60715034c7ca97ba",
        "node_id": "C_kwDOAJy2KtoAKGIzNjdiNjA5MjdkZDg1MjM5ODUyYmZlZTYwNzE1MDM0YzdjYTk3YmE",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-07T15:28:57Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-07T15:28:57Z"
            },
            "message": "[Flight] Add \"use ...\" boundary after the change instead of before it (#33478)\n\nI noticed that the ThirdPartyComponent in the fixture was showing the\nwrong stack and the `\"use third-party\"` is in the wrong location.\n\n<img width=\"628\" alt=\"Screenshot 2025-06-06 at 11 22 11\u202fPM\"\nsrc=\"https://github.com/user-attachments/assets/f0013380-d79e-4765-b371-87fd61b3056b\"\n/>\n\nWhen creating the initial JSX inside the third party server, we should\nmake sure that it has no owner. In a real cross-server environment you\nget this by default by just executing in different context. But since\nthe fixture example is inside the same AsyncLocalStorage as the parent\nit already has an owner which gets transferred. So we should make sure\nthat were we create the JSX has no owner to simulate this.\n\nWhen we then parse a null owner on the receiving side, we replace its\nowner/stack with the owner/stack of the call to `createFrom...` to\nconnect them. This worked fine with only two environments. The bug was\nthat when we did this and then transferred the result to a third\nenvironment we took the original parsed stack trace. We should instead\nparse a new one from the replaced stack in the current environment.\n\nThe second bug was that the `\"use third-party\"` badge ends up in the\nwrong place when we do this kind of thing. Because the stack of the\nthing entering the new environment is the call to `createFrom...` which\nis in the old environment even though the component itself executes in\nthe new environment. So to see if there's a change we should be\ncomparing the current environment of the task to the owner's environment\ninstead of the next environment after the task.\n\nAfter:\n\n<img width=\"494\" alt=\"Screenshot 2025-06-07 at 1 13 28\u202fAM\"\nsrc=\"https://github.com/user-attachments/assets/e2e870ba-f125-4526-a853-bd29f164cf09\"\n/>",
            "tree": {
                "sha": "60ead10c4437d8d896e41dbc126cb6693be5ea14",
                "url": "https://api.github.com/repos/facebook/react/git/trees/60ead10c4437d8d896e41dbc126cb6693be5ea14"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b367b60927dd85239852bfee60715034c7ca97ba",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoRFq5CRC1aQ7uu5UhlAAA5IsQAEDsJKuhvHkIf1CyP8jWeUTb\nkFAlNymR2KtCEC8cHGUrSQrSY33a9eauk2u+lhIDEkyj4vZOjMi0iaZorY/oAnYc\nLAlc/dW6O4MUOyhkhj5x8NI7be3qCwL51ymCQhtBIErGDjomfXFCDyG5H7VNeQK8\nUrXajXjTOpAelK63xzgWt1xin22dGxe6UibZhLRnhKrekohghGRn/Daypp66YdKl\nBvLiqg7o5BhSTNWDpf+KQZFI/PTXnCkwIMoGI3rx7JJHNG6yFycmdUUMX2RtcQ4x\n5sA5Go3N7gwqk9+pTEJbPgddtso12kiVviSc0zbFKybmwpWSfnL1MZeVer/dvAYT\nPYmz9D2BTogXnU22i/5SMuwQYbOgTtRlv2HtuCSaIIKqViMBTGyEWT3XZVJDFSta\ns6HNQ/6YLFFPRR0dfnGfAsSQqLRGhAtnh3jkNhgAsgcIKi6lYZuo5BHME9V/9x1+\nur2ZFL+N8jC5j8SswbFVNRi3KiPS9+ZcTr0lKPw8pf+byVc9+8iQNW36Qln6EjY0\n/c0HNOVl0XuPROwTZVHKY572W3QgrvW+b8+i8GLlHVbMxb8UPRzdHbedRmGjWSsE\nzyfco75pf2N2TZKleiYOGS9DZWGhbENOBw2BNyJtBgQiQf/dXzhhbqTPU0qe3j1H\n2plrqiUe8gAWcMz3LL6K\n=vtug\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 60ead10c4437d8d896e41dbc126cb6693be5ea14\nparent 9666605abfee7e525a22931ce38d40bb29ddc8a5\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749310137 -0400\ncommitter GitHub <noreply@github.com> 1749310137 -0400\n\n[Flight] Add \"use ...\" boundary after the change instead of before it (#33478)\n\nI noticed that the ThirdPartyComponent in the fixture was showing the\nwrong stack and the `\"use third-party\"` is in the wrong location.\n\n<img width=\"628\" alt=\"Screenshot 2025-06-06 at 11 22 11\u202fPM\"\nsrc=\"https://github.com/user-attachments/assets/f0013380-d79e-4765-b371-87fd61b3056b\"\n/>\n\nWhen creating the initial JSX inside the third party server, we should\nmake sure that it has no owner. In a real cross-server environment you\nget this by default by just executing in different context. But since\nthe fixture example is inside the same AsyncLocalStorage as the parent\nit already has an owner which gets transferred. So we should make sure\nthat were we create the JSX has no owner to simulate this.\n\nWhen we then parse a null owner on the receiving side, we replace its\nowner/stack with the owner/stack of the call to `createFrom...` to\nconnect them. This worked fine with only two environments. The bug was\nthat when we did this and then transferred the result to a third\nenvironment we took the original parsed stack trace. We should instead\nparse a new one from the replaced stack in the current environment.\n\nThe second bug was that the `\"use third-party\"` badge ends up in the\nwrong place when we do this kind of thing. Because the stack of the\nthing entering the new environment is the call to `createFrom...` which\nis in the old environment even though the component itself executes in\nthe new environment. So to see if there's a change we should be\ncomparing the current environment of the task to the owner's environment\ninstead of the next environment after the task.\n\nAfter:\n\n<img width=\"494\" alt=\"Screenshot 2025-06-07 at 1 13 28\u202fAM\"\nsrc=\"https://github.com/user-attachments/assets/e2e870ba-f125-4526-a853-bd29f164cf09\"\n/>",
                "verified_at": "2025-06-07T15:29:00Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b367b60927dd85239852bfee60715034c7ca97ba",
        "html_url": "https://github.com/facebook/react/commit/b367b60927dd85239852bfee60715034c7ca97ba",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b367b60927dd85239852bfee60715034c7ca97ba/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "9666605abfee7e525a22931ce38d40bb29ddc8a5",
                "url": "https://api.github.com/repos/facebook/react/commits/9666605abfee7e525a22931ce38d40bb29ddc8a5",
                "html_url": "https://github.com/facebook/react/commit/9666605abfee7e525a22931ce38d40bb29ddc8a5"
            }
        ]
    },
    {
        "sha": "9666605abfee7e525a22931ce38d40bb29ddc8a5",
        "node_id": "C_kwDOAJy2KtoAKDk2NjY2MDVhYmZlZTdlNTI1YTIyOTMxY2UzOGQ0MGJiMjlkZGM4YTU",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-07T14:40:09Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-07T14:40:09Z"
            },
            "message": "[Flight] Add Web Stream support to the Flight Server in Node (#33474)\n\nThis needs some tweaks to the implementation and a conversion but simple\nenough.\n\n---------\n\nCo-authored-by: Hendrik Liebau <mail@hendrik-liebau.de>",
            "tree": {
                "sha": "97011c3e807a3f26cd94d162a1c76685d5c084ef",
                "url": "https://api.github.com/repos/facebook/react/git/trees/97011c3e807a3f26cd94d162a1c76685d5c084ef"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/9666605abfee7e525a22931ce38d40bb29ddc8a5",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoRE9JCRC1aQ7uu5UhlAAAvqoQAEi1HoyJNleQne+NYlzDzHnA\nOBmASMFhnRT+EhccIgpgAsej0GA2rG+1FMQwPBCphIBdLJVEuK06ovUxC7JMsmqL\nn3ubkbP1HKKi6mPhIieGs5Pd1I6PNJx2KwkrhHrCvcLGmCUINIGC+oGpfb7S/xyH\nT1mVqr+B5Ihdq66mgyowHOqZXiB8/X3/wYpybm6T9RA2eJzlm2a4kpLFgxhBJYFp\n3EF6G5IfniO0kUZ4Qk4ZAIPW1VDOqwLrTfCtlxtCL2Wgd9B7VJ4Lef9H5RAEc7Zv\nA+jEe9wFAvcsFDQDjoQ2Y8Vl2qqTWOHAnS+hoRPq3i2v35QIvDAwWglL7nAlsJzU\n5brojRx2RS3FTuQ1dL1+UKofzExFUvbpitD0wjei6db8q4rNYg1a1JBIZ4b5P51+\npW/lJB3EidBfVRTsyTIW97anBHxAzQcmgo+CbRoV0VEEQVzA0E+0pfEaU1QugQyi\nNC5ET3KldhnfXkflC9jyCzmuArCJmcia1PSFygCV76pIoYXLp+ymDWHkCv4gCCvR\n03c8PNMxfocT0Ii/EAitEHLiWuTXPKmZwt+MXDvJEK78VlahwuVzpgyp9HRyReR9\nWeSop1rccVdle7hiShqv966C9kFQSH4H88mc7OoWOo6lXwrk9LmVLGVOkUBzzt1M\nj10V4R+sIT61hs64dKDk\n=HJVL\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 97011c3e807a3f26cd94d162a1c76685d5c084ef\nparent 65ec57df3781d2c62456bb136c7f160f7e834492\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749307209 -0400\ncommitter GitHub <noreply@github.com> 1749307209 -0400\n\n[Flight] Add Web Stream support to the Flight Server in Node (#33474)\n\nThis needs some tweaks to the implementation and a conversion but simple\nenough.\n\n---------\n\nCo-authored-by: Hendrik Liebau <mail@hendrik-liebau.de>",
                "verified_at": "2025-06-07T14:40:11Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/9666605abfee7e525a22931ce38d40bb29ddc8a5",
        "html_url": "https://github.com/facebook/react/commit/9666605abfee7e525a22931ce38d40bb29ddc8a5",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/9666605abfee7e525a22931ce38d40bb29ddc8a5/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "65ec57df3781d2c62456bb136c7f160f7e834492",
                "url": "https://api.github.com/repos/facebook/react/commits/65ec57df3781d2c62456bb136c7f160f7e834492",
                "html_url": "https://github.com/facebook/react/commit/65ec57df3781d2c62456bb136c7f160f7e834492"
            }
        ]
    },
    {
        "sha": "65ec57df3781d2c62456bb136c7f160f7e834492",
        "node_id": "C_kwDOAJy2KtoAKDY1ZWM1N2RmMzc4MWQyYzYyNDU2YmIxMzZjN2YxNjBmN2U4MzQ0OTI",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-07T00:16:43Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-07T00:16:43Z"
            },
            "message": "[Fizz] Add Web Streams to Fizz Node entry point (#33475)\n\nNew take on #33441.\n\nThis uses a wrapper instead of a separate bundle.",
            "tree": {
                "sha": "28ae180bfd0ded6f067c1185b434b32cffd145b3",
                "url": "https://api.github.com/repos/facebook/react/git/trees/28ae180bfd0ded6f067c1185b434b32cffd145b3"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/65ec57df3781d2c62456bb136c7f160f7e834492",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQ4TrCRC1aQ7uu5UhlAAA1BYQAILs+2UdQ6pfO/8+jg6bbfyc\nj5hkg5f3GhG9FGMObkHBWmzIuDpmhvk9NZTZ9EtINQOUkgddYRvg/S5QojbTUu/x\nKNJ9WsYh0lmCoNXf50kbFv3wY+TRZ6eNE4OYOBSQ7H843l6fQ6flgbzDOERHI1pN\ny/Hpz2H9qKMW6ZDgeyg5FPc5isyolvdg8G1P4H6cqUIoxma57pvGmbW7X85bJz/H\nzmVy3zQVWIefY8rPxqfdvo+ZUgz0taCNdfU4MQ8Af/UgbfACmiXHIHpS1Vn4Adgl\nRiRij6Ntct0MDzPihb2EY6VoxvqrEM2V7ZgW/Iru0LqPbnQ95yaBsnBtXyny2cQY\noPo1z0bEHReOqz5ePbZ6Xsqq1XmXK2HbV1z3tz1IcK6wJfzNT/et2gNSAvqaUUyK\nEYh9W931wea8v3exPxUO7ya6nioD+n1z55L1c4Dj5ZkhhuXhvIyIMVU4ip+YWjr+\nAlNXqsi/jEhXnlwZyjvFacxSIsgGBhos1iL1oCBHkeCa/Y4tUtC5E0+ViOLP1wpB\nmqg16PBsUWKWTp8Kc5plbDRrfY6gGhEcc9rLIYtC/Wx2IxuVbCnXisagQ7ilfOUp\nNyLTW6+C3asu3vL8xYXJqIlZRaPxeaha9A6kD1Lp36MtfGMFzY3lmP3zxvOcFEgS\ntCL8qzYCUlSmCw8DCHz8\n=350U\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 28ae180bfd0ded6f067c1185b434b32cffd145b3\nparent b3d5e9078685c000e7e9ee3668a7a4b4f3256b1f\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749255403 -0400\ncommitter GitHub <noreply@github.com> 1749255403 -0400\n\n[Fizz] Add Web Streams to Fizz Node entry point (#33475)\n\nNew take on #33441.\n\nThis uses a wrapper instead of a separate bundle.",
                "verified_at": "2025-06-07T00:16:46Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/65ec57df3781d2c62456bb136c7f160f7e834492",
        "html_url": "https://github.com/facebook/react/commit/65ec57df3781d2c62456bb136c7f160f7e834492",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/65ec57df3781d2c62456bb136c7f160f7e834492/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "b3d5e9078685c000e7e9ee3668a7a4b4f3256b1f",
                "url": "https://api.github.com/repos/facebook/react/commits/b3d5e9078685c000e7e9ee3668a7a4b4f3256b1f",
                "html_url": "https://github.com/facebook/react/commit/b3d5e9078685c000e7e9ee3668a7a4b4f3256b1f"
            }
        ]
    },
    {
        "sha": "b3d5e9078685c000e7e9ee3668a7a4b4f3256b1f",
        "node_id": "C_kwDOAJy2KtoAKGIzZDVlOTA3ODY4NWMwMDBlN2U5ZWUzNjY4YTdhNGI0ZjMyNTZiMWY",
        "commit": {
            "author": {
                "name": "Sebastian \"Sebbie\" Silbermann",
                "email": "sebastian.silbermann@vercel.com",
                "date": "2025-06-07T00:11:33Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-07T00:11:33Z"
            },
            "message": "[Fizz] Include unit of threshold in rel=expect deopt error (#33476)",
            "tree": {
                "sha": "7757cb25018a98700d3704801a71ec1c36e3d200",
                "url": "https://api.github.com/repos/facebook/react/git/trees/7757cb25018a98700d3704801a71ec1c36e3d200"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b3d5e9078685c000e7e9ee3668a7a4b4f3256b1f",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQ4O1CRC1aQ7uu5UhlAAAya8QAHBo+J0SQj2aKJBRXR5DwSEg\nmLRuXaVV5l506IgwBC3iUGsPoaHmDGM+TOR9y+tGy4SdbMhyfNAGOFl7qycl/Smg\nA2RhQMmTaDKy/MxLCJgKkuzJMPkgj0ftKh0ZN+8kn8r5HXbwihk/WCIl2pG5apqf\nvSS30/T5kYusmwqPX4Rclx8FJQs4g646QhiDl2d0EhKYaqCWMOAEjQNeX2xzbIN5\n7M1lfVYO2ka012vicWekGvSSQNEcR13Y486Ra2AzZzxxx98m7rVqkgX3RFwnEg5G\nGhmYQWYZvM6ixazBISla1dPTrUzFzHqogTdg17l7GU8ENuEFlYm2+nhFgDhssKxI\noAPmMMajNrrH/4wAJ7GJyrSwy8W7ItjZqeOVHy+k0Oq7rtQvAUVlBVOGbVjAoDf0\ngaPirJvw06I3nfstTzOB5TTXNeUuvmVTLBRVB8XfpYC49f9OBFDZ26L6X8vLdYe4\nOCJ+sJvRb3MrK9JFV82+MuIJiYfjFANp6qS7gVmQNFPFrjMBtAY16+QzagYLz3sh\nMl6MeEbECuPPmuYyEenBOs4KiWkrJ5umj41u9hJhzFYolmjumCWtJIjydZq5VaAm\nGC5lgNvKfIcuNZFPvhHZNkPYZCtoKv5+IdsaAvc7DU90h1t4YbogeZyES9sFWnKD\nLYuvpBzSbyDMEfuHb9Ce\n=3BdJ\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 7757cb25018a98700d3704801a71ec1c36e3d200\nparent 280ff6fed2a84b6ad7588c72d3e66b20f0f3c91a\nauthor Sebastian \"Sebbie\" Silbermann <sebastian.silbermann@vercel.com> 1749255093 +0200\ncommitter GitHub <noreply@github.com> 1749255093 +0200\n\n[Fizz] Include unit of threshold in rel=expect deopt error (#33476)\n\n",
                "verified_at": "2025-06-07T00:11:35Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b3d5e9078685c000e7e9ee3668a7a4b4f3256b1f",
        "html_url": "https://github.com/facebook/react/commit/b3d5e9078685c000e7e9ee3668a7a4b4f3256b1f",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b3d5e9078685c000e7e9ee3668a7a4b4f3256b1f/comments",
        "author": {
            "login": "eps1lon",
            "id": 12292047,
            "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/12292047?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eps1lon",
            "html_url": "https://github.com/eps1lon",
            "followers_url": "https://api.github.com/users/eps1lon/followers",
            "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
            "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
            "organizations_url": "https://api.github.com/users/eps1lon/orgs",
            "repos_url": "https://api.github.com/users/eps1lon/repos",
            "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eps1lon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "280ff6fed2a84b6ad7588c72d3e66b20f0f3c91a",
                "url": "https://api.github.com/repos/facebook/react/commits/280ff6fed2a84b6ad7588c72d3e66b20f0f3c91a",
                "html_url": "https://github.com/facebook/react/commit/280ff6fed2a84b6ad7588c72d3e66b20f0f3c91a"
            }
        ]
    },
    {
        "sha": "280ff6fed2a84b6ad7588c72d3e66b20f0f3c91a",
        "node_id": "C_kwDOAJy2KtoAKDI4MGZmNmZlZDJhODRiNmFkNzU4OGM3MmQzZTY2YjIwZjBmM2M5MWE",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-06T21:14:15Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-06T21:14:15Z"
            },
            "message": "[Flight] Add Web Stream support to the Flight Client in Node (#33473)\n\nThis effectively lets us consume Web Streams in a Node build. In fact\nthe Node entry point is now just adding Node stream APIs.\n\nFor the client, this is simple because the configs are not actually\nstream type specific. The server is a little trickier.",
            "tree": {
                "sha": "2edfedb7459c20f6bf08850fdd8601cf3d440d54",
                "url": "https://api.github.com/repos/facebook/react/git/trees/2edfedb7459c20f6bf08850fdd8601cf3d440d54"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/280ff6fed2a84b6ad7588c72d3e66b20f0f3c91a",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQ1onCRC1aQ7uu5UhlAAAIhoQAEkIUATWZgE0H30SqD9vHRRp\ndPpNetIZT4q5sbTB15QkuepM4ljZtFsDyP4Y9mAvHjH47FvVNHReyHUASN/LCBs1\n4zt0nwrll3tPsAF43tdEcV3g9myU++hpZWjazJ8hTdLg/ADqup/4gt6BVa//aP9u\nYhp9LZFMToJTil8YkJ9IHFmpYO+EzpqbT3WtZlWuS2v4rVsHLh/T+GjOsaWvXX4w\nWKO/7+cLK8hHbB67OjJaTBDdldUCzKHYs2abdim4EjCx1UxYP97joEgNjUaWZgXa\njdgMqw6GfmtjMZwGLKQ8AmOsPMHxZmORGQxapcqOpg6nFKnXfqDRH/BCdvrUbjB1\nwPx3OtxhVDNsn3zw7b3+u2klMfYsP18BXqMp9UvzpjRPC9MIS0elpjO6XC/IMpFz\no/KUt8dKHC1fKS3L9wg6VERmWnSOiEeKGDpAjLy5hD0XPxKzZm9saCeNZb3qew+u\nHmuRMh8A8mpvtIY7azqxy1VhJy6wHndypRBTic0USzQjSPkE5Q0bsd+TeyjQukEp\nxx5vM3lq4e33fc0uzsZfTPxyMLUWmlbzUtn4Q9clnVy4C4yIkf3GpkLU1ADd/xP3\nuwEjGpO5yFuTADP+i70DbNQQmDn4FWUZOzgMK7Yx/NoDSefPciLvvnU9YfxdQcN3\nIgms64XBQyMqeizFg3L0\n=ARnB\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 2edfedb7459c20f6bf08850fdd8601cf3d440d54\nparent 82f3684c63fd60fdacbe4d536214596ffd7a465f\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749244455 -0400\ncommitter GitHub <noreply@github.com> 1749244455 -0400\n\n[Flight] Add Web Stream support to the Flight Client in Node (#33473)\n\nThis effectively lets us consume Web Streams in a Node build. In fact\nthe Node entry point is now just adding Node stream APIs.\n\nFor the client, this is simple because the configs are not actually\nstream type specific. The server is a little trickier.",
                "verified_at": "2025-06-06T21:14:18Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/280ff6fed2a84b6ad7588c72d3e66b20f0f3c91a",
        "html_url": "https://github.com/facebook/react/commit/280ff6fed2a84b6ad7588c72d3e66b20f0f3c91a",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/280ff6fed2a84b6ad7588c72d3e66b20f0f3c91a/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "82f3684c63fd60fdacbe4d536214596ffd7a465f",
                "url": "https://api.github.com/repos/facebook/react/commits/82f3684c63fd60fdacbe4d536214596ffd7a465f",
                "html_url": "https://github.com/facebook/react/commit/82f3684c63fd60fdacbe4d536214596ffd7a465f"
            }
        ]
    },
    {
        "sha": "82f3684c63fd60fdacbe4d536214596ffd7a465f",
        "node_id": "C_kwDOAJy2KtoAKDgyZjM2ODRjNjNmZDYwZmRhY2JlNGQ1MzYyMTQ1OTZmZmQ3YTQ2NWY",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-06T20:26:36Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-06T20:26:36Z"
            },
            "message": "Revert Node Web Streams (#33472)\n\nReverts #33457, #33456 and #33442.\n\nThere are too many issues with wrappers, lazy init, stateful modules,\nduplicate instantiation of async_hooks and duplication of code.\n\nInstead, we'll just do a wrapper polyfill that uses Node Streams\ninternally.\n\nI kept the client indirection files that I added for consistency with\nthe server though.",
            "tree": {
                "sha": "ababe91a13002ccce5917ccf414f05452ee78d13",
                "url": "https://api.github.com/repos/facebook/react/git/trees/ababe91a13002ccce5917ccf414f05452ee78d13"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/82f3684c63fd60fdacbe4d536214596ffd7a465f",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQ078CRC1aQ7uu5UhlAAAAdoQAFfii73z7PTiRP4Rc72FFl/g\n/uYgj/c+NPiQaD0IbYEdkSYBqzWVJDM+4X1gHYXiuUrpYnf5fpDGZd5N3NgDo4AQ\nin08pYUHRk4p8dBwV40xSPUwapgW/9W6wxFgumLzAN861JMQ/vBrJ2+YpSSeY+X1\nOD36IrDRw4lxLVarpRlpSYeW2IayEWlxS7upfvxOOawP/zgI3CiN9/nY6RDHG4y3\n5M9nVUXp5mQ7NBbJ6/6u1g7JQcwJb0QLtalyo8yrdITfC8ssuFB0/L5/YKPs8Mhq\nXV8GbhKFVcGTh9pfKLhZQrG8i+BvuKeXYvW6D+Ah5hbWjjOeDQBh+LO6U9TTIfaU\nJ/OCMPwMqHGsOImTvwgGM3eP2w54hXiAotXaK8IBIKfTFbR8LDP6tDIbb/Nxl128\npp7lPjPukUVoREABuTMpAy+V9IL2MnYmiXHeR/NzaEdugAdDjMbH6k9uq89XNi3n\n9cGWLtBeM9u72NEjXd+Ml8sDpxAtKkBOVmFUeN9xGkS8hmXle/gEpRkQ132YhCV2\nqyuAL5jDwuCBumfBoumMWUTxuTwyqrdZQ0rnrx27bn8cms9pcdfyIAd4XNk8eC/N\nFzi+ZEQta4HIM78J98jVfuRar9KdVymf6ylUtpL4fA0urB1R/GE8iEvfuAWtWO/3\nhdq2K5miknpiWXyWrXcO\n=Ol88\n-----END PGP SIGNATURE-----\n",
                "payload": "tree ababe91a13002ccce5917ccf414f05452ee78d13\nparent 142aa0744d0e73dc5390bc19d4d41dd8aeda2b19\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749241596 -0400\ncommitter GitHub <noreply@github.com> 1749241596 -0400\n\nRevert Node Web Streams (#33472)\n\nReverts #33457, #33456 and #33442.\n\nThere are too many issues with wrappers, lazy init, stateful modules,\nduplicate instantiation of async_hooks and duplication of code.\n\nInstead, we'll just do a wrapper polyfill that uses Node Streams\ninternally.\n\nI kept the client indirection files that I added for consistency with\nthe server though.",
                "verified_at": "2025-06-06T20:26:38Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/82f3684c63fd60fdacbe4d536214596ffd7a465f",
        "html_url": "https://github.com/facebook/react/commit/82f3684c63fd60fdacbe4d536214596ffd7a465f",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/82f3684c63fd60fdacbe4d536214596ffd7a465f/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "142aa0744d0e73dc5390bc19d4d41dd8aeda2b19",
                "url": "https://api.github.com/repos/facebook/react/commits/142aa0744d0e73dc5390bc19d4d41dd8aeda2b19",
                "html_url": "https://github.com/facebook/react/commit/142aa0744d0e73dc5390bc19d4d41dd8aeda2b19"
            }
        ]
    },
    {
        "sha": "142aa0744d0e73dc5390bc19d4d41dd8aeda2b19",
        "node_id": "C_kwDOAJy2KtoAKDE0MmFhMDc0NGQwZTczZGM1MzkwYmMxOWQ0ZDQxZGQ4YWVkYTJiMTk",
        "commit": {
            "author": {
                "name": "Josh Story",
                "email": "story@hey.com",
                "date": "2025-06-06T18:59:15Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-06T18:59:15Z"
            },
            "message": "[Fizz] Support deeply nested Suspense inside fallback (#33467)\n\nWhen deeply nested Suspense boundaries inside a fallback of another\nboundary resolve it is possible to encounter situations where you either\nattempt to flush an aborted Segment or you have a boundary without any\nroot segment. We intended for both of these conditions to be impossible\nto arrive at legitimately however it turns out in this situation you\ncan. The fix is two-fold\n\n1. allow flushing aborted segments by simply skipping them. This does\nremove some protection against future misconfiguraiton of React because\nit is no longer an invariant that you hsould never attempt to flush an\naborted segment but there are legitimate cases where this can come up\nand simply omitting the segment is fine b/c we know that the user will\nnever observe this. A semantically better solution would be to avoid\nflushing boudaries inside an unneeded fallback but to do this we would\nneed to track all boundaries inside a fallback or create back pointers\nwhich add to memory overhead and possibly make GC harder to do\nefficiently. By flushing extra we're maintaining status quo and only\nsuffer in performance not with broken semantics.\n\n2. when queuing completed segments allow for queueing aborted segments\nand if we are eliding the enqueued segment allow for child segments that\nare errored to be enqueued too. This will mean that we can maintain the\ninvariant that a boundary must have a root segment the first time we\nflush it, it just might be aborted (see point 1 above).\n\nThis change has two seemingly similar test cases to exercise this fix.\nThe reason we need both is that when you have empty segments you hit\ndifferent code paths within Fizz and so each one (without this fix)\ntriggers a different error pathway.\n\nThis change also includes a fix to our tests where we were not\nappropriately setting CSPnonce back to null at the start of each test so\nin some contexts scripts would not run for some tests",
            "tree": {
                "sha": "6fb60bb0af2ab872993599379abeab581945a564",
                "url": "https://api.github.com/repos/facebook/react/git/trees/6fb60bb0af2ab872993599379abeab581945a564"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/142aa0744d0e73dc5390bc19d4d41dd8aeda2b19",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQzqDCRC1aQ7uu5UhlAAAX2cQAJsYOG39i3dmkdpfLPJCLDXw\noTbsvZuDBnGlTWmaEHM0ZKBhBmi233VvSD4383PyjJpHf5v7lAmseTaOiPYkcPij\n6HUW4Rixpz/fcoAmMfAKFo045wdGyzWip0L1QqhACLrqUWoJxnRizNQt75rDs6wV\nEwxlaG7xEOpPb/IQqmG+2CK2ruwpLxbutzUi3IlgexPLg+s4krhlp3Sk4rCpUMi0\nuIQ6UxH62+Oqm3liHWBBuLtJUXH7qr9/wfm/k5hSZvhrKyJ0ckOvCdS7K/Rbjg3U\nJtiVlZDfmyByY9K/lSQhXnHkcmifNm7IYQ42G7wX6S1A7oXY3D+Uo/TnKY99aaZg\nTC/ELaaogWCvEHdm4DPszfrD0wo7k5HfKP5XcliCX8xrDbiS5F97Fee9/2i2htkX\nkSOEIXCYMoNsaDsq+n52mCSyeI/2QmxGRlIQi2wJnlZG6x4x0kerLgAaeYaSXUF/\nDo6tNgJsNZ4wIt3RNtzdr7ziVC+rJ92gYZbv+yQBn1r+B8qrIg67PSUOYYSKJwGI\n4Y3mHG3SnGqi1WlW0SCfgu6WQ/s/WnzmXjTz2QIIwp8o4RJG1AiPSygJuaLd32Ig\njkMvOEAtv44woz5+5BBqwB2M2J08rc25JVKKE/Pb65eitPTFoaGHr+IEea9/nvt8\nN6Rekaq1NvQGnAYYYobA\n=IPGM\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 6fb60bb0af2ab872993599379abeab581945a564\nparent 6ccf328499f06c140ffe96a096744c22319394cc\nauthor Josh Story <story@hey.com> 1749236355 -0700\ncommitter GitHub <noreply@github.com> 1749236355 -0700\n\n[Fizz] Support deeply nested Suspense inside fallback (#33467)\n\nWhen deeply nested Suspense boundaries inside a fallback of another\nboundary resolve it is possible to encounter situations where you either\nattempt to flush an aborted Segment or you have a boundary without any\nroot segment. We intended for both of these conditions to be impossible\nto arrive at legitimately however it turns out in this situation you\ncan. The fix is two-fold\n\n1. allow flushing aborted segments by simply skipping them. This does\nremove some protection against future misconfiguraiton of React because\nit is no longer an invariant that you hsould never attempt to flush an\naborted segment but there are legitimate cases where this can come up\nand simply omitting the segment is fine b/c we know that the user will\nnever observe this. A semantically better solution would be to avoid\nflushing boudaries inside an unneeded fallback but to do this we would\nneed to track all boundaries inside a fallback or create back pointers\nwhich add to memory overhead and possibly make GC harder to do\nefficiently. By flushing extra we're maintaining status quo and only\nsuffer in performance not with broken semantics.\n\n2. when queuing completed segments allow for queueing aborted segments\nand if we are eliding the enqueued segment allow for child segments that\nare errored to be enqueued too. This will mean that we can maintain the\ninvariant that a boundary must have a root segment the first time we\nflush it, it just might be aborted (see point 1 above).\n\nThis change has two seemingly similar test cases to exercise this fix.\nThe reason we need both is that when you have empty segments you hit\ndifferent code paths within Fizz and so each one (without this fix)\ntriggers a different error pathway.\n\nThis change also includes a fix to our tests where we were not\nappropriately setting CSPnonce back to null at the start of each test so\nin some contexts scripts would not run for some tests",
                "verified_at": "2025-06-06T18:59:18Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/142aa0744d0e73dc5390bc19d4d41dd8aeda2b19",
        "html_url": "https://github.com/facebook/react/commit/142aa0744d0e73dc5390bc19d4d41dd8aeda2b19",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/142aa0744d0e73dc5390bc19d4d41dd8aeda2b19/comments",
        "author": {
            "login": "gnoff",
            "id": 2716369,
            "node_id": "MDQ6VXNlcjI3MTYzNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2716369?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gnoff",
            "html_url": "https://github.com/gnoff",
            "followers_url": "https://api.github.com/users/gnoff/followers",
            "following_url": "https://api.github.com/users/gnoff/following{/other_user}",
            "gists_url": "https://api.github.com/users/gnoff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gnoff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gnoff/subscriptions",
            "organizations_url": "https://api.github.com/users/gnoff/orgs",
            "repos_url": "https://api.github.com/users/gnoff/repos",
            "events_url": "https://api.github.com/users/gnoff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gnoff/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "6ccf328499f06c140ffe96a096744c22319394cc",
                "url": "https://api.github.com/repos/facebook/react/commits/6ccf328499f06c140ffe96a096744c22319394cc",
                "html_url": "https://github.com/facebook/react/commit/6ccf328499f06c140ffe96a096744c22319394cc"
            }
        ]
    },
    {
        "sha": "6ccf328499f06c140ffe96a096744c22319394cc",
        "node_id": "C_kwDOAJy2KtoAKDZjY2YzMjg0OTlmMDZjMTQwZmZlOTZhMDk2NzQ0YzIyMzE5Mzk0Y2M",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-06T18:01:15Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-06T18:01:15Z"
            },
            "message": "[Fizz] Shorten throttle to hit a specific target metric (#33463)\n\nAdding throttling or delaying on images, can obviously impact metrics.\nHowever, it's all in the name of better actual user experience overall.\n(Note that it's not strictly worse even for metric. Often it's actually\nstrictly better due to less work being done overall thanks to batching.)\n\nMetrics can impact things like search ranking but I believe this is on a\ncurve. If you're already pretty good, then a slight delay won't suddenly\nmake you rank in a completely different category. Similarly, if you're\nalready pretty bad then a slight delay won't make it suddenly way worse.\nIt's still in the same realm. It's just one weight of many. I don't\nthink this will make a meaningful practical impact and if it does,\nthat's probably a bug in the weights that will get fixed.\n\nHowever, because there's a race to try to \"make everything green\" in\nterms of web vitals, if you go from green to yellow only because of some\nthrottling or suspensey images, it can feel bad. Therefore this\nimplements a heuristic where if the only reason we'd miss a specific\ntarget is because of throttling or suspensey images, then we shorten the\ntimeout to hit the metric. This is a worse user experience because it\ncan lead to extra flashing but feeling good about \"green\" matters too.\n\nIf you then have another reveal that happens to be the largest\ncontentful paint after that, then that's throttled again so that it\ndoesn't become flashy after that. If you've already missed the deadline\nthen you're not going to hit your metric target anyway. It can affect\naverage but not median.\n\nThis is mainly about LCP. It doesn't affect FCP since that doesn't have\na throttle. If your LCP is the same as your FCP then it also doesn't\nmatter.\n\nWe assume that `performance.now()`'s zero point starts at the \"start of\nthe navigation\" which makes this simple. Even if we used the\n`PerformanceNavigationTiming` API it would just tell us the same thing.\n\nThis only implements for Fizz since these metrics tend to currently only\nby tracked for initial loads, but with soft navs tracking we could\nconsider implementing the same for Fiber throttles.",
            "tree": {
                "sha": "cde3a807dd34169200f7a9462417a643afe2a969",
                "url": "https://api.github.com/repos/facebook/react/git/trees/cde3a807dd34169200f7a9462417a643afe2a969"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/6ccf328499f06c140ffe96a096744c22319394cc",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQyzrCRC1aQ7uu5UhlAAA5isQAAjfsW4PB9y4FSLUgFUWFZ1J\n0O5qI7DwKUPD5ybZozSnlRNgpV+HWHDL7C3uhs4RHQHCC6YBRbKBv9z1XyY38Vys\nw2+wpXrR7mtJB3fJFgQZibMaf+igQXiq7czFtHmJ2tOBxvYam2VaEwfeofJT1Q5C\nb0ZBcRAJ+WSYDxJA6qsZF1BxdDHXM0eKzk6IYS9Xd2E7hZ4ZjLo3hU7tsrdP37jP\n0ox8Pd84HH2xN3UK34+QR7DnUdVqKcoZFEKoaDNo4W58nwR2s0yIVUm4NQJhEq4p\nzB2CAXB9iQkrIxN/vhWX+PP+n7wxEwL3ENgb1xk12NRDSZj56bgiRSLGdEyV+adI\nwS46ifhND5zR2/3+YAZl0oClAeht41DvedF1SMWDIVTfoRNM0pmMsCPm7YPvdq+Q\nJLDrYry4DCEthp3prDtLVCjsioz/tbw6wVezeDqPq1ahq6Pz2ZjnAv6fw6uD7Fny\nxlM8mWN5TGOzswVWrv9EkzWrxJK3/VnTLH67XfNHxaZZisMAA7XFAo6rkgfcVXnS\ngLvuL2PfY8IBL/SzXQOtD+rTflg3CojWaUq+F8aWYQRF/K96/xEzS4v1QBf9UXSc\nztVlE2nn1u1jAfhOM4LBfXI+JG/zak7+avaF6ngv2kc2JfPMN1VLe720jvFeTR+3\nWgMtH4j35WoIKCppXUnB\n=PGzc\n-----END PGP SIGNATURE-----\n",
                "payload": "tree cde3a807dd34169200f7a9462417a643afe2a969\nparent a374e0ec87ec1d45a94b69e26c747529ea5dbab0\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749232875 -0400\ncommitter GitHub <noreply@github.com> 1749232875 -0400\n\n[Fizz] Shorten throttle to hit a specific target metric (#33463)\n\nAdding throttling or delaying on images, can obviously impact metrics.\nHowever, it's all in the name of better actual user experience overall.\n(Note that it's not strictly worse even for metric. Often it's actually\nstrictly better due to less work being done overall thanks to batching.)\n\nMetrics can impact things like search ranking but I believe this is on a\ncurve. If you're already pretty good, then a slight delay won't suddenly\nmake you rank in a completely different category. Similarly, if you're\nalready pretty bad then a slight delay won't make it suddenly way worse.\nIt's still in the same realm. It's just one weight of many. I don't\nthink this will make a meaningful practical impact and if it does,\nthat's probably a bug in the weights that will get fixed.\n\nHowever, because there's a race to try to \"make everything green\" in\nterms of web vitals, if you go from green to yellow only because of some\nthrottling or suspensey images, it can feel bad. Therefore this\nimplements a heuristic where if the only reason we'd miss a specific\ntarget is because of throttling or suspensey images, then we shorten the\ntimeout to hit the metric. This is a worse user experience because it\ncan lead to extra flashing but feeling good about \"green\" matters too.\n\nIf you then have another reveal that happens to be the largest\ncontentful paint after that, then that's throttled again so that it\ndoesn't become flashy after that. If you've already missed the deadline\nthen you're not going to hit your metric target anyway. It can affect\naverage but not median.\n\nThis is mainly about LCP. It doesn't affect FCP since that doesn't have\na throttle. If your LCP is the same as your FCP then it also doesn't\nmatter.\n\nWe assume that `performance.now()`'s zero point starts at the \"start of\nthe navigation\" which makes this simple. Even if we used the\n`PerformanceNavigationTiming` API it would just tell us the same thing.\n\nThis only implements for Fizz since these metrics tend to currently only\nby tracked for initial loads, but with soft navs tracking we could\nconsider implementing the same for Fiber throttles.",
                "verified_at": "2025-06-06T18:01:17Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/6ccf328499f06c140ffe96a096744c22319394cc",
        "html_url": "https://github.com/facebook/react/commit/6ccf328499f06c140ffe96a096744c22319394cc",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/6ccf328499f06c140ffe96a096744c22319394cc/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "a374e0ec87ec1d45a94b69e26c747529ea5dbab0",
                "url": "https://api.github.com/repos/facebook/react/commits/a374e0ec87ec1d45a94b69e26c747529ea5dbab0",
                "html_url": "https://github.com/facebook/react/commit/a374e0ec87ec1d45a94b69e26c747529ea5dbab0"
            }
        ]
    },
    {
        "sha": "a374e0ec87ec1d45a94b69e26c747529ea5dbab0",
        "node_id": "C_kwDOAJy2KtoAKGEzNzRlMGVjODdlYzFkNDVhOTRiNjllMjZjNzQ3NTI5ZWE1ZGJhYjA",
        "commit": {
            "author": {
                "name": "lauren",
                "email": "poteto@users.noreply.github.com",
                "date": "2025-06-06T17:32:51Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-06T17:32:51Z"
            },
            "message": "[ci] Fix missing permissions for stale job (#33466)\n\nMissed these the last time.",
            "tree": {
                "sha": "a980c57142f54aabd6b5e38a8d7feaa82674d43e",
                "url": "https://api.github.com/repos/facebook/react/git/trees/a980c57142f54aabd6b5e38a8d7feaa82674d43e"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/a374e0ec87ec1d45a94b69e26c747529ea5dbab0",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQyZDCRC1aQ7uu5UhlAAAi9kQAInQxH01jNZphAcUB4zuhY2x\nFcFGnK0I18O+Rq+PwFnRFjO2yEc89ItsuMKRzPg1Oy8rJiZrDYhpF9BptvqrIIyB\nMcBNfwVlAigyNM9t1QEkPsHItpNatNmi4k6vRbfBEwYByxs0uoE7h7PS6FSHYUjm\nlV6LTkzK9akqEf8LILWUQxPx3pFvZbHDdDalXEbg6ra5TzLBhmTugzz8U5mJ5Npz\np3FOltC9fCAAsMoDOzD9bB7VNbYbNOVizAa7sRAlw3xdmOsxy8jIsrVEbcM78wKr\nqLzFKz+AAroFjbxLK6gMZ/uFmUYMTiN5GlJPjtxQDJ4lnbCGJU+wZ4hKG0/7+WuM\nScWOqR6QD8AyrB+LM3vuvAgVaEm/lel93TincBsQ7Lf4CMvXWS/g5/3aSjrz9Imv\npsWv8tOfYZNpcWcs1NbUDK9ZigCTgG7iLRgAnmIHnf2vrhYhWJaX4Art0mysBeRZ\n10fxvHbNoKdgWDrWkoKjbyJUKWeH9lPofm6YLpCI5bpTrlq32P0/OUPCHN1Iohiy\nNAsQDGsFEx85hnyGBcWyhnnIbXdftwum1YX9/gHWiiOblRzJKmbmiJHuRgZ2YlW/\nywkayB7wQimn22kUxQ38pOQw8kY7KQUVTxUOumzAKRztIfXlHrxhU14LGBX3KkL/\n/QrsTEtycNBcHnJr/6Dy\n=2b8D\n-----END PGP SIGNATURE-----\n",
                "payload": "tree a980c57142f54aabd6b5e38a8d7feaa82674d43e\nparent ab859e31be5db56106161060033109c9f2d26eca\nauthor lauren <poteto@users.noreply.github.com> 1749231171 -0400\ncommitter GitHub <noreply@github.com> 1749231171 -0400\n\n[ci] Fix missing permissions for stale job (#33466)\n\nMissed these the last time.",
                "verified_at": "2025-06-06T17:32:53Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/a374e0ec87ec1d45a94b69e26c747529ea5dbab0",
        "html_url": "https://github.com/facebook/react/commit/a374e0ec87ec1d45a94b69e26c747529ea5dbab0",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/a374e0ec87ec1d45a94b69e26c747529ea5dbab0/comments",
        "author": {
            "login": "poteto",
            "id": 1390709,
            "node_id": "MDQ6VXNlcjEzOTA3MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1390709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/poteto",
            "html_url": "https://github.com/poteto",
            "followers_url": "https://api.github.com/users/poteto/followers",
            "following_url": "https://api.github.com/users/poteto/following{/other_user}",
            "gists_url": "https://api.github.com/users/poteto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/poteto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/poteto/subscriptions",
            "organizations_url": "https://api.github.com/users/poteto/orgs",
            "repos_url": "https://api.github.com/users/poteto/repos",
            "events_url": "https://api.github.com/users/poteto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/poteto/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "ab859e31be5db56106161060033109c9f2d26eca",
                "url": "https://api.github.com/repos/facebook/react/commits/ab859e31be5db56106161060033109c9f2d26eca",
                "html_url": "https://github.com/facebook/react/commit/ab859e31be5db56106161060033109c9f2d26eca"
            }
        ]
    },
    {
        "sha": "ab859e31be5db56106161060033109c9f2d26eca",
        "node_id": "C_kwDOAJy2KtoAKGFiODU5ZTMxYmU1ZGI1NjEwNjE2MTA2MDAzMzEwOWM5ZjJkMjZlY2E",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-06T15:07:40Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-06T15:07:40Z"
            },
            "message": "[Flight] Build Node.js Web Streams builds for Turbopack and Parcel (#33457)\n\nSame as #33456 and #33442 but for Turbopack and Parcel.",
            "tree": {
                "sha": "5c2a2c193614e464ed65d7599b236be10b693d7a",
                "url": "https://api.github.com/repos/facebook/react/git/trees/5c2a2c193614e464ed65d7599b236be10b693d7a"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/ab859e31be5db56106161060033109c9f2d26eca",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQwQ8CRC1aQ7uu5UhlAAAKOkQAKGsU1B1QM+UToZYHaPiKxET\nWROK53wQ7dsZpf5ZbpuCQDcqP3KzKNcbJ9Uod8MvOQhB4KDK/60nqyyMuzUJ3koQ\nzcc/sDLQI3rWt4H2qfgjFYdBhxOZLO5cPi4MkPEmRFSjpViVbXTQeLAA1ftpNvC+\nHwPKve+CmpWQeAkiu4tYAgnEkmDkEE/yE9cmMJcDErRJtXrs6fgHQl4M9r0/riZZ\nqE9cd6T/wpYxWvp1iQcBPbIMjaow4H9nfG/ymS/mmuqg6PKYvAqspU2+PLOhxJAO\nHi+fHVPpqQkUsJYiSPiTvIllDJwqVDkEiDOmIXc7nRydom26FMojJaYeZ9VHH9WC\n6pUdZE7K2L+Yxg0ewz/eYGSn6iwFPKkP2We+S5aTR69yDcwTewNlEeFptzDcwXWV\nGWfiwoih+LWc6z4ZEc+OE+VS0euqq0ue5Vabrd4PujZ+kUTIEoVDGL3aFFZaYT9G\nnabb8KrtHffJZiyaSd/9XSP9o9Qzqzy6KcwmS99huA39qB8CjYxezw+QlWMrIehw\nvOeoJdb9IgHr0rDZJTdiYsiq/xftvJn4mrLQRnQdeoYgB5BPTkHTYtRQS8AsCk1u\nvaQFPXsVqq5IhxUYBo84ANxlqHVge3vAlftQXC/w/9+UnckZc4Jlmo3cLc44EUdZ\naxtJ7SF2FgWMhvHgSv/u\n=haeK\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 5c2a2c193614e464ed65d7599b236be10b693d7a\nparent e8d15fa19efcd18f0947fe4189652f5b64f74256\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749222460 -0400\ncommitter GitHub <noreply@github.com> 1749222460 -0400\n\n[Flight] Build Node.js Web Streams builds for Turbopack and Parcel (#33457)\n\nSame as #33456 and #33442 but for Turbopack and Parcel.",
                "verified_at": "2025-06-06T15:07:42Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/ab859e31be5db56106161060033109c9f2d26eca",
        "html_url": "https://github.com/facebook/react/commit/ab859e31be5db56106161060033109c9f2d26eca",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/ab859e31be5db56106161060033109c9f2d26eca/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "e8d15fa19efcd18f0947fe4189652f5b64f74256",
                "url": "https://api.github.com/repos/facebook/react/commits/e8d15fa19efcd18f0947fe4189652f5b64f74256",
                "html_url": "https://github.com/facebook/react/commit/e8d15fa19efcd18f0947fe4189652f5b64f74256"
            }
        ]
    },
    {
        "sha": "e8d15fa19efcd18f0947fe4189652f5b64f74256",
        "node_id": "C_kwDOAJy2KtoAKGU4ZDE1ZmExOWVmY2QxOGYwOTQ3ZmU0MTg5NjUyZjViNjRmNzQyNTY",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-06T15:07:15Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-06T15:07:15Z"
            },
            "message": "[Flight] Build node-webstreams version of bundled webpack server (#33456)\n\nFollow up to #33442. This is the bundled version.\n\nTo keep type check passes from exploding and the maintainance of the\nannoying `paths: []` list small, this doesn't add this to flow type\nchecks. We might miss some config but every combination should already\nbe covered by other one passes.\n\nI also don't add any jest tests because to test these double export\nentry points we need conditional importing to cover builds and\nnon-builds which turns out to be difficult for the Flight builds so\nthese aren't covered by any basic build tests.\n\nThis approach is what I'm going for, for the other bundlers too.",
            "tree": {
                "sha": "e28e875a3ff1405250cc40e4f1adf2b91bdc9308",
                "url": "https://api.github.com/repos/facebook/react/git/trees/e28e875a3ff1405250cc40e4f1adf2b91bdc9308"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/e8d15fa19efcd18f0947fe4189652f5b64f74256",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQwQjCRC1aQ7uu5UhlAAAaxMQAJyrF9GAooa4PuhuYUDzYrR5\nFkJFFkpkLaNZYrORhGRbDzQxlskumDOg9nyOGs6SI7MgquQi8bloCsa43c7Ucag6\nn9Vz2rfA+Wfig657NQt85hcgTpkqNzKjckofTWpfvRbIqetqcODtPgOb+dquRDft\nEED9/UCIlkGa+j6K8pdapB7YuvMZIDFHrAWk7d1sULxqfxn1JOyHmz67Eo/u0fK8\nLgSB/eC438hEiUfuOAndjYPk3tkhwE/GId0L5QqnCpOhz2cx71cdi0EBi1V8v8g8\ncjkRzR6B/Kjti5QNhsgtYrCQNBR8UVlDpalmt34AYxbloHxhUP4TUM8+mrwcdGrJ\naBXEWccFV8+SkOYBae5F9eEf7CB0rhxAvn6Z9MDK0YyOFPC0h3SBaz7uOrj3yDuC\ntNa3NKRG1/d8zgTkKWPTj407PiYXQzkNrtrNeDueIz474UA9DyBcIxkX1yF+V1ge\nPmnB5wY5n/nThRksn010t4Tzzpe/H2oygRkcs+PNgVHWjPoJKDZd5bv95Bm0hnFH\ndQlYIAk7oweIzdCh2TV+VGyOkkQouUiNbDiJfAXI6Qpqoib5Ag4Ctvk2b92FCsS6\ng7R1PvzRylTYPo3fd0mbeTQRVqCgMb7RFP8JWrqhsxUg4plAt//OZvO9IKlZ5tjx\nnmzarGAbITcrqPqMpira\n=Quhz\n-----END PGP SIGNATURE-----\n",
                "payload": "tree e28e875a3ff1405250cc40e4f1adf2b91bdc9308\nparent d177272802b7f86a847312c23b7e60a6f56434de\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749222435 -0400\ncommitter GitHub <noreply@github.com> 1749222435 -0400\n\n[Flight] Build node-webstreams version of bundled webpack server (#33456)\n\nFollow up to #33442. This is the bundled version.\n\nTo keep type check passes from exploding and the maintainance of the\nannoying `paths: []` list small, this doesn't add this to flow type\nchecks. We might miss some config but every combination should already\nbe covered by other one passes.\n\nI also don't add any jest tests because to test these double export\nentry points we need conditional importing to cover builds and\nnon-builds which turns out to be difficult for the Flight builds so\nthese aren't covered by any basic build tests.\n\nThis approach is what I'm going for, for the other bundlers too.",
                "verified_at": "2025-06-06T15:07:18Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/e8d15fa19efcd18f0947fe4189652f5b64f74256",
        "html_url": "https://github.com/facebook/react/commit/e8d15fa19efcd18f0947fe4189652f5b64f74256",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/e8d15fa19efcd18f0947fe4189652f5b64f74256/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "d177272802b7f86a847312c23b7e60a6f56434de",
                "url": "https://api.github.com/repos/facebook/react/commits/d177272802b7f86a847312c23b7e60a6f56434de",
                "html_url": "https://github.com/facebook/react/commit/d177272802b7f86a847312c23b7e60a6f56434de"
            }
        ]
    },
    {
        "sha": "d177272802b7f86a847312c23b7e60a6f56434de",
        "node_id": "C_kwDOAJy2KtoAKGQxNzcyNzI4MDJiN2Y4NmE4NDczMTJjMjNiN2U2MGE2ZjU2NDM0ZGU",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-06T14:29:48Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-06T14:29:48Z"
            },
            "message": "[Fizz] Error and deopt from rel=expect for large documents without boundaries (#33454)\n\nWe want to make sure that we can block the reveal of a well designed\ncomplete shell reliably. In the Suspense model, client transitions don't\nhave any way to implicitly resolve. This means you need to use Suspense\nor SuspenseList to explicitly split the document. Relying on implicit\nwould mean you can't add a Suspense boundary later where needed. So we\nhighly encourage the use of them around large content.\n\nHowever, if you have constructed a too large shell (e.g. by not adding\nany Suspense boundaries at all) then that might take too long to render\non the client. We shouldn't punish users (or overzealous metrics\ntracking tools like search engines) in that scenario.\n\nThis opts out of render blocking if the shell ends up too large to be\nintentional and too slow to load. Instead it deopts to showing the\ncontent split up in arbitrary ways (browser default). It only does this\nfor SSR, and not client navs so it's not reliable.\n\nIn fact, we issue an error to `onError`. This error is recoverable in\nthat the document is still produced. It's up to your framework to decide\nif this errors the build or just surface it for action later.\n\nWhat should be the limit though? There's a trade off here. If this limit\nis too low then you can't fit a reasonably well built UI within it\nwithout getting errors. If it's too high then things that accidentally\nfall below it might take too long to load.\n\nI came up with 512kB of uncompressed shell HTML. See the comment in code\nfor the rationale for this number. TL;DR: Data and theory indicates that\nhaving this much content inside `rel=\"expect\"` doesn't meaningfully\nchange metrics. Research of above-the-fold content on various websites\nindicate that this can comfortable fit all of them which should be\nenough for any intentional initial paint.",
            "tree": {
                "sha": "1b5681933ca9398287820ec7f1864742c1d898c7",
                "url": "https://api.github.com/repos/facebook/react/git/trees/1b5681933ca9398287820ec7f1864742c1d898c7"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/d177272802b7f86a847312c23b7e60a6f56434de",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQvtcCRC1aQ7uu5UhlAAArnEQAJHSDMF1hhMlD3/QUcrRoOZt\ncXdTXcs0hpN9XT+z0iyl4N9630G0sK2b/lOCk6yVJLactrFCTTloGo4rTdq0a6F3\nIaePIVqhL/jk+l4x1msK5MhcaD7OpETkiBJ880owplsaVdjbpT+N8QoZhYwPdI9t\nSZS8VZxY0tCVhm2vjgFQP2IGvtXMl7kKFh/QFM0TfSZmmP0Tve7g/ApGE8JNJxkY\ni2CuWw2pzF5QxgAYdL0XWjlewzZbe3vNHsBRYfqwDQVne1FkDHGZwwCMlh0z1Upd\n6fhwbZa+Xp4FB35FO8TRzQq6/49mx5FSq34q+VX1dZ8KT+pU66IyvrP8V4uCmpMO\nztWrzYwSWAaO6TMUCW4qs08hRQMmRpYv7YC58x93DXWPNUaOJfpqXvVZlIQgld4M\n4t449qQVBmmmwYcAxmSI0dhZdkN05OuL5npZy1vyotCZ2mKjtTfqmhI9HqH3v0C3\nVjMN6VhQIC+DzZwKq310XgFT1CoEU+h8a+7AzzwYFJ/U77EuAcutKko7GDyHQVhe\nQgVh0/y97lO9An9XMnJt4irahgTqPtvyup0gGKRyMa4A4ZSNWLV+nbuuD8gHmaiv\nIogSoApralDxdWf5T67Qty5DCj+A2wmLELOA6UoTxzrgZ71kgUgLBNIKPfe1hIrN\nJHkKjjdrwgvlGx0+cbZW\n=yqFD\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 1b5681933ca9398287820ec7f1864742c1d898c7\nparent 22b929156c325eaf52c375f0c62801831951814a\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749220188 -0400\ncommitter GitHub <noreply@github.com> 1749220188 -0400\n\n[Fizz] Error and deopt from rel=expect for large documents without boundaries (#33454)\n\nWe want to make sure that we can block the reveal of a well designed\ncomplete shell reliably. In the Suspense model, client transitions don't\nhave any way to implicitly resolve. This means you need to use Suspense\nor SuspenseList to explicitly split the document. Relying on implicit\nwould mean you can't add a Suspense boundary later where needed. So we\nhighly encourage the use of them around large content.\n\nHowever, if you have constructed a too large shell (e.g. by not adding\nany Suspense boundaries at all) then that might take too long to render\non the client. We shouldn't punish users (or overzealous metrics\ntracking tools like search engines) in that scenario.\n\nThis opts out of render blocking if the shell ends up too large to be\nintentional and too slow to load. Instead it deopts to showing the\ncontent split up in arbitrary ways (browser default). It only does this\nfor SSR, and not client navs so it's not reliable.\n\nIn fact, we issue an error to `onError`. This error is recoverable in\nthat the document is still produced. It's up to your framework to decide\nif this errors the build or just surface it for action later.\n\nWhat should be the limit though? There's a trade off here. If this limit\nis too low then you can't fit a reasonably well built UI within it\nwithout getting errors. If it's too high then things that accidentally\nfall below it might take too long to load.\n\nI came up with 512kB of uncompressed shell HTML. See the comment in code\nfor the rationale for this number. TL;DR: Data and theory indicates that\nhaving this much content inside `rel=\"expect\"` doesn't meaningfully\nchange metrics. Research of above-the-fold content on various websites\nindicate that this can comfortable fit all of them which should be\nenough for any intentional initial paint.",
                "verified_at": "2025-06-06T14:29:50Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/d177272802b7f86a847312c23b7e60a6f56434de",
        "html_url": "https://github.com/facebook/react/commit/d177272802b7f86a847312c23b7e60a6f56434de",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/d177272802b7f86a847312c23b7e60a6f56434de/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "22b929156c325eaf52c375f0c62801831951814a",
                "url": "https://api.github.com/repos/facebook/react/commits/22b929156c325eaf52c375f0c62801831951814a",
                "html_url": "https://github.com/facebook/react/commit/22b929156c325eaf52c375f0c62801831951814a"
            }
        ]
    },
    {
        "sha": "22b929156c325eaf52c375f0c62801831951814a",
        "node_id": "C_kwDOAJy2KtoAKDIyYjkyOTE1NmMzMjVlYWY1MmMzNzVmMGM2MjgwMTgzMTk1MTgxNGE",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-06T14:14:13Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-06T14:14:13Z"
            },
            "message": "[Fizz] Suspensey Images for View Transition Reveals (#33433)\n\nBlock the view transition on suspensey images Up to 500ms just like the\nclient.\n\nWe can't use `decode()` because a bug in Chrome where those are blocked\non `startViewTransition` finishing we instead rely on sync decoding but\nalso that the image is live when it's animating in and we assume it\ndoesn't start visible.\n\nHowever, we can block the View Transition from starting on the `\"load\"`\nor `\"error\"` events.\n\nThe nice thing about blocking inside `startViewTransition` is that we\nhave already done the layout so we can only wait on images that are\nwithin the viewport at this point. We might want to do that in Fiber\ntoo. If many image doesn't have fixed size but need to load first, they\ncan all end up in the viewport. We might consider only doing this for\nimages that have a fixed size or only a max number that doesn't have a\nfixed size.",
            "tree": {
                "sha": "ed3aebc3110c6127e1bbb7fa244a1c3ba4f7ea80",
                "url": "https://api.github.com/repos/facebook/react/git/trees/ed3aebc3110c6127e1bbb7fa244a1c3ba4f7ea80"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/22b929156c325eaf52c375f0c62801831951814a",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQve1CRC1aQ7uu5UhlAAAshQQAD/lS2Js5wxscO3s2Wz5RjwA\nue4imzzRuEt5OrQ3Ft5sED7slV2FIYtxwoUlvaQFR0kfZxV0D+6E1MoY/knxWSzm\n3AXrW4tRs2u7f1PmXzfQ7WClg182x6MDBCUa8gxyc1NCN7Y8iWc4hKf/EpsYi9SU\ndttD17G78t9lrnuv25/aING7iyeP8YF/GF8UCZuw87cOr+vTPvECfWPgIxDyHMXh\nWfdSCW4/IjOyrnxNCxa5Kh0jsUGCFfbaV2yD6v6yJTsi6B+5+baSSPCrSwohlXFU\n1WXKcTSmOaZkK5qGObqYNOiUyqXvF0sbR75mtXz6/v5NPNhejSG6D4Wh62I00PPq\n9JAysXB0SSoSGMUN7xIR0SuR1XIigQmcpSkY8LO5CB+lhcRyosx7dt3Y4HVbdhan\nXBPm9AlOai3DTOsNUKw5XHtiwSGTfSAOrwVNSNFbdv0KRT5p7zyjdesQGf6jxlzu\nocNb5Yt1v9VvZeoLEo5PJknK1SjTlyKQ99jywdNpehqif00AvaQ9318hM2M2gQK4\n4o78HveaFSIl8mQYJ4CsjAzT3RacskADUZd6aL3FeEKzEPvq/SmeaGQhoRUntWVg\nsgKK4dD/ttjRdufeDp9XcHSSewSTR6iq8FerUHrXeSYnJCTJVgJoRWuTytBSmPMZ\n1jHOzeHV0bGqF9wRF4pa\n=o1VP\n-----END PGP SIGNATURE-----\n",
                "payload": "tree ed3aebc3110c6127e1bbb7fa244a1c3ba4f7ea80\nparent a3be6829c6425f306a8bef9f7dba72d1347a64b3\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749219253 -0400\ncommitter GitHub <noreply@github.com> 1749219253 -0400\n\n[Fizz] Suspensey Images for View Transition Reveals (#33433)\n\nBlock the view transition on suspensey images Up to 500ms just like the\nclient.\n\nWe can't use `decode()` because a bug in Chrome where those are blocked\non `startViewTransition` finishing we instead rely on sync decoding but\nalso that the image is live when it's animating in and we assume it\ndoesn't start visible.\n\nHowever, we can block the View Transition from starting on the `\"load\"`\nor `\"error\"` events.\n\nThe nice thing about blocking inside `startViewTransition` is that we\nhave already done the layout so we can only wait on images that are\nwithin the viewport at this point. We might want to do that in Fiber\ntoo. If many image doesn't have fixed size but need to load first, they\ncan all end up in the viewport. We might consider only doing this for\nimages that have a fixed size or only a max number that doesn't have a\nfixed size.",
                "verified_at": "2025-06-06T14:14:14Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/22b929156c325eaf52c375f0c62801831951814a",
        "html_url": "https://github.com/facebook/react/commit/22b929156c325eaf52c375f0c62801831951814a",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/22b929156c325eaf52c375f0c62801831951814a/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "a3be6829c6425f306a8bef9f7dba72d1347a64b3",
                "url": "https://api.github.com/repos/facebook/react/commits/a3be6829c6425f306a8bef9f7dba72d1347a64b3",
                "html_url": "https://github.com/facebook/react/commit/a3be6829c6425f306a8bef9f7dba72d1347a64b3"
            }
        ]
    },
    {
        "sha": "a3be6829c6425f306a8bef9f7dba72d1347a64b3",
        "node_id": "C_kwDOAJy2KtoAKGEzYmU2ODI5YzY0MjVmMzA2YThiZWY5ZjdkYmE3MmQxMzQ3YTY0YjM",
        "commit": {
            "author": {
                "name": "Ricky",
                "email": "rickhanlonii@gmail.com",
                "date": "2025-06-06T13:16:58Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-06T13:16:58Z"
            },
            "message": "[tests] remove pretest compiler script (#33452)\n\nThis shouldn't be needed now that the lint rule was move",
            "tree": {
                "sha": "37f3befd4b8a522bfa095f04f486ee6e5f86f2c3",
                "url": "https://api.github.com/repos/facebook/react/git/trees/37f3befd4b8a522bfa095f04f486ee6e5f86f2c3"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/a3be6829c6425f306a8bef9f7dba72d1347a64b3",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQupKCRC1aQ7uu5UhlAAAR84QADdVCBPj7MnjTdHPcApfKVev\nrF8cbpFAb0wVZuYpCTJ1klaqnL8bZZE9QM14as/Xcy9QClx9DgdAH56baurBTqpY\nA/zJqof1iUMCPaif5rB8W3KmmiK9ZXXn1BonIr7Rv1iaRvJCNfSVS6rcP3ePAE9s\n67jruZRUWs8DzCeRzJtdtUixp9ds6GlWL+zSOSryKsjikz+5WldaOzNM+3mrxpSj\nDgCLh7fh6Wj+R9hbnHVVYHN/OH463hC1KXjy/skZqcTSL9HvZXqgKmiBZwuZjGqn\n/TIn+Dav0aqppcWdcrliJbLqWGAY4s73al+l0mLTo815LwlJC17TsChTT2+rqz1P\n67aTMOqlsWRc1xPXidgABPoE7HzjjeZrMCyTjx1ze+xYdDGSXrWZQzE82ZD6jqYC\nnaM+9JlwsceqB/+oR7gV4eQ0VNl70los+Apd6Ez0G1EYWHKkDKK7bp6+iPT2xxOo\n7gRzwmqjTNAdIKo1v8/N7wzt096WeBHclzDJ0QCThZIBt5E9uROJjC1Q5rfN0OrH\n44Pv9+eJDnOVpHcBs9nM/QMb6op7X5/OxXPPHfO0AWy/KwSdP47pE+9j/DR96vg6\nfErWXAIronPAMYostpQGs4cBialVGAr9eH/VS1b4E3ojuGFzDwO20lKC5fRY4Ftb\n6LMO+YGSLRN0rjuDO+wj\n=OVOm\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 37f3befd4b8a522bfa095f04f486ee6e5f86f2c3\nparent b1759882c0b8045aff27fa9e41600534d396f69c\nauthor Ricky <rickhanlonii@gmail.com> 1749215818 -0400\ncommitter GitHub <noreply@github.com> 1749215818 -0400\n\n[tests] remove pretest compiler script (#33452)\n\nThis shouldn't be needed now that the lint rule was move",
                "verified_at": "2025-06-06T13:17:01Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/a3be6829c6425f306a8bef9f7dba72d1347a64b3",
        "html_url": "https://github.com/facebook/react/commit/a3be6829c6425f306a8bef9f7dba72d1347a64b3",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/a3be6829c6425f306a8bef9f7dba72d1347a64b3/comments",
        "author": {
            "login": "rickhanlonii",
            "id": 2440089,
            "node_id": "MDQ6VXNlcjI0NDAwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2440089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rickhanlonii",
            "html_url": "https://github.com/rickhanlonii",
            "followers_url": "https://api.github.com/users/rickhanlonii/followers",
            "following_url": "https://api.github.com/users/rickhanlonii/following{/other_user}",
            "gists_url": "https://api.github.com/users/rickhanlonii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rickhanlonii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rickhanlonii/subscriptions",
            "organizations_url": "https://api.github.com/users/rickhanlonii/orgs",
            "repos_url": "https://api.github.com/users/rickhanlonii/repos",
            "events_url": "https://api.github.com/users/rickhanlonii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rickhanlonii/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "b1759882c0b8045aff27fa9e41600534d396f69c",
                "url": "https://api.github.com/repos/facebook/react/commits/b1759882c0b8045aff27fa9e41600534d396f69c",
                "html_url": "https://github.com/facebook/react/commit/b1759882c0b8045aff27fa9e41600534d396f69c"
            }
        ]
    },
    {
        "sha": "b1759882c0b8045aff27fa9e41600534d396f69c",
        "node_id": "C_kwDOAJy2KtoAKGIxNzU5ODgyYzBiODA0NWFmZjI3ZmE5ZTQxNjAwNTM0ZDM5NmY2OWM",
        "commit": {
            "author": {
                "name": "Hendrik Liebau",
                "email": "mail@hendrik-liebau.de",
                "date": "2025-06-06T04:42:58Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-06T04:42:58Z"
            },
            "message": "[Flight] Bypass caches in Flight fixture if requested (#33445)",
            "tree": {
                "sha": "a532463361a66238bf91116ef376695b2fe52164",
                "url": "https://api.github.com/repos/facebook/react/git/trees/a532463361a66238bf91116ef376695b2fe52164"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b1759882c0b8045aff27fa9e41600534d396f69c",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQnHSCRC1aQ7uu5UhlAAAXfoQAEAEkYkwmpcb+GGEzlQjVRe5\nzcz1pYCbzvddC5HoN3a/5iTbPnsUpOC7qXwx6zWvjFf/CqZl8vKRSiVfjssi1hAs\nmSrMyZZdivnKmUkmZZ1JLkFQR+UKdfACvUOxlxtRfqLDNf++LbT7vqKpG+BU9M8D\nh+MjW96X8MQ/oFA2w3CQCE5lWobeHJdYQpk8FUBZRCQSI5Rt62Rr5t7jISWBod9a\nuZdmdvmGWLeT/aHg2EwqcJIm49XEFw5rilukgZUpPsWa7fADKRPr/c+e3WlDrCfT\nJcXGwrDm1a+yAMvmx3KC/85cqQ5z9FfPndhc/jRNshxFKWYZqlk7gstB2++K0ibJ\n3SB8YjLByQVPJKZ6huPtXgioP98KeD0LmFcARHpmp/ku5wQ4Ag3EtKLWN2fmj2ax\n0D2nIyLVvit8kOyP+48VTfL66992+OWRzuuozFG4GTILs2dColUyHgcTbFjJo6Ob\n/BC9byeAIBDClgIzDg0QBje15pgFsm5OZa+zkaa1/tyIjr5E2/4HAwJfk+rrZpjX\nlEttxsD/BMY2PXfHIselrytAiaRu/qEk4qe8ZpOL2DD3U/7NTcSe1jQL14fBkBr5\nr42NrrDVOXEkEAxibOtDoKpZyZF8zR3819OK2eKKHpm2/4kXGvjy2KYnyVJec9Vs\n6vB1Hr/cG6thB2kDyufQ\n=7lru\n-----END PGP SIGNATURE-----\n",
                "payload": "tree a532463361a66238bf91116ef376695b2fe52164\nparent dddcae7a11b8241cbd6e2de55f9e68881baea458\nauthor Hendrik Liebau <mail@hendrik-liebau.de> 1749184978 +0200\ncommitter GitHub <noreply@github.com> 1749184978 +0200\n\n[Flight] Bypass caches in Flight fixture if requested (#33445)\n\n",
                "verified_at": "2025-06-06T04:43:00Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b1759882c0b8045aff27fa9e41600534d396f69c",
        "html_url": "https://github.com/facebook/react/commit/b1759882c0b8045aff27fa9e41600534d396f69c",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b1759882c0b8045aff27fa9e41600534d396f69c/comments",
        "author": {
            "login": "unstubbable",
            "id": 761683,
            "node_id": "MDQ6VXNlcjc2MTY4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/761683?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/unstubbable",
            "html_url": "https://github.com/unstubbable",
            "followers_url": "https://api.github.com/users/unstubbable/followers",
            "following_url": "https://api.github.com/users/unstubbable/following{/other_user}",
            "gists_url": "https://api.github.com/users/unstubbable/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/unstubbable/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/unstubbable/subscriptions",
            "organizations_url": "https://api.github.com/users/unstubbable/orgs",
            "repos_url": "https://api.github.com/users/unstubbable/repos",
            "events_url": "https://api.github.com/users/unstubbable/events{/privacy}",
            "received_events_url": "https://api.github.com/users/unstubbable/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "dddcae7a11b8241cbd6e2de55f9e68881baea458",
                "url": "https://api.github.com/repos/facebook/react/commits/dddcae7a11b8241cbd6e2de55f9e68881baea458",
                "html_url": "https://github.com/facebook/react/commit/dddcae7a11b8241cbd6e2de55f9e68881baea458"
            }
        ]
    },
    {
        "sha": "dddcae7a11b8241cbd6e2de55f9e68881baea458",
        "node_id": "C_kwDOAJy2KtoAKGRkZGNhZTdhMTFiODI0MWNiZDZlMmRlNTVmOWU2ODg4MWJhZWE0NTg",
        "commit": {
            "author": {
                "name": "Timothy Yung",
                "email": "yungsters@meta.com",
                "date": "2025-06-05T21:22:35Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-05T21:22:35Z"
            },
            "message": "Enable the `enableEagerAlternateStateNodeCleanup` Feature Flag (#33447)\n\n## Summary\n\nEnables the `enableEagerAlternateStateNodeCleanup` feature flag for all\nvariants, while maintaining the `__VARIANT__` for the internal React\nNative flavor for backtesting reasons.\n\n## How did you test this change?\n\n```\n$ yarn test\n```",
            "tree": {
                "sha": "4833846fdf26f0c3fa1cd023511cb4c224ae5e2b",
                "url": "https://api.github.com/repos/facebook/react/git/trees/4833846fdf26f0c3fa1cd023511cb4c224ae5e2b"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/dddcae7a11b8241cbd6e2de55f9e68881baea458",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQgqbCRC1aQ7uu5UhlAAAws4QAC1PwuuWRLlqZI1RGomYS4e5\no8+XZi4MJVF3DNQ1GNPxA653X5EeY5nEOPAJ3ndc8vFeslM7TsvJ/IY42r2Ja5vv\nn0g3tKVNOh4u6on0Htr62ZrzTvfCyQ0V/ZXoCdZbTxB0ErFPJJ8DgDgyjAOXGBUG\np3aS6g5Ywft5g3uMxLA5/2MPUC+YfvPVO+g78SAJ/HypHwlMbxC1A+PS8fNfrJgg\n2+POWQqX4L7VSDQgVZeIUg5CIXtWMhsOakZD207VllrV0RW3K6V7kcrcBAlpGwge\nTev9HyofLUDPH+Qu7vw0WGAmyoZUfNvA43ajS0TD78EklI4NT7ljiOXAPIfOpfnu\nnfUIL/iE7h8NgpI5tpNdzBU9mK/njQq7SOdL1dF+6/izIsL0UU5dujqrfZ1KIK6x\nq/ZrVhMKh/HUnM2cALb5RPmjDS0242NbRPHpnR6Zm7iQSWlnf21W8UMJ3f4BTD1A\nxd78iC51CaJ8OF85euYOpIq5CyMGXN/U6mZxOzpnoqOi81EKAFDiT/tGeT7ugR6o\naOQnUW7FuJiHA20NAwIORY8TzmtnaQ8aY/86slu2ML5ABJCvlUg79I3OcDFtasZt\nCzVv2DO4T9hF71jqW+0W8jIbcYp8FDThswxuogeQej5J2Akqu7ZCKSW8GFqrQmcG\ndJyGaRx16R91If1MUK0t\n=1y7G\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 4833846fdf26f0c3fa1cd023511cb4c224ae5e2b\nparent 43714eb4e970d0200fdc5eac887691df7fae53d5\nauthor Timothy Yung <yungsters@meta.com> 1749158555 -0700\ncommitter GitHub <noreply@github.com> 1749158555 -0700\n\nEnable the `enableEagerAlternateStateNodeCleanup` Feature Flag (#33447)\n\n## Summary\n\nEnables the `enableEagerAlternateStateNodeCleanup` feature flag for all\nvariants, while maintaining the `__VARIANT__` for the internal React\nNative flavor for backtesting reasons.\n\n## How did you test this change?\n\n```\n$ yarn test\n```",
                "verified_at": "2025-06-05T21:22:37Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/dddcae7a11b8241cbd6e2de55f9e68881baea458",
        "html_url": "https://github.com/facebook/react/commit/dddcae7a11b8241cbd6e2de55f9e68881baea458",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/dddcae7a11b8241cbd6e2de55f9e68881baea458/comments",
        "author": {
            "login": "yungsters",
            "id": 55161,
            "node_id": "MDQ6VXNlcjU1MTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/55161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yungsters",
            "html_url": "https://github.com/yungsters",
            "followers_url": "https://api.github.com/users/yungsters/followers",
            "following_url": "https://api.github.com/users/yungsters/following{/other_user}",
            "gists_url": "https://api.github.com/users/yungsters/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yungsters/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yungsters/subscriptions",
            "organizations_url": "https://api.github.com/users/yungsters/orgs",
            "repos_url": "https://api.github.com/users/yungsters/repos",
            "events_url": "https://api.github.com/users/yungsters/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yungsters/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "43714eb4e970d0200fdc5eac887691df7fae53d5",
                "url": "https://api.github.com/repos/facebook/react/commits/43714eb4e970d0200fdc5eac887691df7fae53d5",
                "html_url": "https://github.com/facebook/react/commit/43714eb4e970d0200fdc5eac887691df7fae53d5"
            }
        ]
    },
    {
        "sha": "43714eb4e970d0200fdc5eac887691df7fae53d5",
        "node_id": "C_kwDOAJy2KtoAKDQzNzE0ZWI0ZTk3MGQwMjAwZmRjNWVhYzg4NzY5MWRmN2ZhZTUzZDU",
        "commit": {
            "author": {
                "name": "Hendrik Liebau",
                "email": "mail@hendrik-liebau.de",
                "date": "2025-06-05T19:08:57Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-05T19:08:57Z"
            },
            "message": "Do not notify Discord for draft pull requests (#33446)\n\nWhen I added the `ready_for_review` event in #32344, no notifications\nfor opened draft PRs were sent due to some other condition. This is not\nthe case anymore, so we need to exclude draft PRs from triggering a\nnotification when the workflow is run because of an `opened` event. This\nevent is still needed because the `ready_for_review` event only fires\nwhen an existing draft PR is converted to a non-draft state. It does not\ntrigger for pull requests that are opened directly as ready-for-review.",
            "tree": {
                "sha": "c150b6226f1dd81a47c75be4241e7cae7411b94c",
                "url": "https://api.github.com/repos/facebook/react/git/trees/c150b6226f1dd81a47c75be4241e7cae7411b94c"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/43714eb4e970d0200fdc5eac887691df7fae53d5",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQetJCRC1aQ7uu5UhlAAA1e8QAKygKdHH40AAMDnbpDvR3JXw\n/r3m8h+01uLf4UcNd3K2PB8rsi5PWGh/u8okv37Qa28blz+5YaI9Ya3XF8Ok12LH\ndTJLvvNsxhf6kg9qB5FSJE4LPlGRsEEWpVxvJIkevkuUIf48/hv5kCSqovk0rd4z\nbTMJ7xDLh/ze5Y2wtR17rgogITn+kF7rsOleoOkhMYQ0l9d0AykW60xi6mceFmzp\n+JsAtuTWfqzE+GSrmtPaeKt3/oQDurP0CCsPT/h9YFKxrgVG0hnFq0xS7tBRZd+N\nCNFcmlcojL4QhsdYZ+UMWiQGnjfP7r3lP/ubdcYsRjPMKdKU4EYGO5EnYnJ77m/m\n9vTRYKJmLUNsdNwbnV0Vmj+Ses2cZoZTCxgfn5+DPdxWlVCu5bbfph3fxp6vzGbp\nZmM0x9+/vrgkG+rbMreqyFf9clmpGOEGwEDY+W5rX/2F2oZY3cGqgWFzW+YZzsmw\njLwSzBk5Xqc7VTesQo7fooB2d9XU63FO+K/qbYKfavyp5R5FAuSghK/ZOsiNwP4e\nmd23LHe4opHp6UJ5wkj6y1ItXTsoJvilMz8jy8CsBpyCTHUFunZTNUs21tiYO2mb\npPi4e/S3zgzHHQY/0vLEKd1UucW7BXqBCdk8odsNXbhAMatca6j9Gm+oOXiFqmVh\n8haaYCL6p8XLmZ9ylIea\n=dxJ1\n-----END PGP SIGNATURE-----\n",
                "payload": "tree c150b6226f1dd81a47c75be4241e7cae7411b94c\nparent a5110b22f0a02cb87cd2bca5dc4527c73e2f281b\nauthor Hendrik Liebau <mail@hendrik-liebau.de> 1749150537 +0200\ncommitter GitHub <noreply@github.com> 1749150537 -0400\n\nDo not notify Discord for draft pull requests (#33446)\n\nWhen I added the `ready_for_review` event in #32344, no notifications\nfor opened draft PRs were sent due to some other condition. This is not\nthe case anymore, so we need to exclude draft PRs from triggering a\nnotification when the workflow is run because of an `opened` event. This\nevent is still needed because the `ready_for_review` event only fires\nwhen an existing draft PR is converted to a non-draft state. It does not\ntrigger for pull requests that are opened directly as ready-for-review.",
                "verified_at": "2025-06-05T19:09:00Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/43714eb4e970d0200fdc5eac887691df7fae53d5",
        "html_url": "https://github.com/facebook/react/commit/43714eb4e970d0200fdc5eac887691df7fae53d5",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/43714eb4e970d0200fdc5eac887691df7fae53d5/comments",
        "author": {
            "login": "unstubbable",
            "id": 761683,
            "node_id": "MDQ6VXNlcjc2MTY4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/761683?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/unstubbable",
            "html_url": "https://github.com/unstubbable",
            "followers_url": "https://api.github.com/users/unstubbable/followers",
            "following_url": "https://api.github.com/users/unstubbable/following{/other_user}",
            "gists_url": "https://api.github.com/users/unstubbable/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/unstubbable/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/unstubbable/subscriptions",
            "organizations_url": "https://api.github.com/users/unstubbable/orgs",
            "repos_url": "https://api.github.com/users/unstubbable/repos",
            "events_url": "https://api.github.com/users/unstubbable/events{/privacy}",
            "received_events_url": "https://api.github.com/users/unstubbable/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "a5110b22f0a02cb87cd2bca5dc4527c73e2f281b",
                "url": "https://api.github.com/repos/facebook/react/commits/a5110b22f0a02cb87cd2bca5dc4527c73e2f281b",
                "html_url": "https://github.com/facebook/react/commit/a5110b22f0a02cb87cd2bca5dc4527c73e2f281b"
            }
        ]
    },
    {
        "sha": "a5110b22f0a02cb87cd2bca5dc4527c73e2f281b",
        "node_id": "C_kwDOAJy2KtoAKGE1MTEwYjIyZjBhMDJjYjg3Y2QyYmNhNWRjNDUyN2M3M2UyZjI4MWI",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-05T18:29:02Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-05T18:29:02Z"
            },
            "message": "[Flight] Add a Node.js Web Streams bundle for unbundled client/server for Webpack (#33442)\n\nLike #33441 but for Flight.\n\nThis is just one of the many combinations needed. I'm just starting with\none.",
            "tree": {
                "sha": "d51f0bea5adfa967c567e49bf1b4ff904e6c9778",
                "url": "https://api.github.com/repos/facebook/react/git/trees/d51f0bea5adfa967c567e49bf1b4ff904e6c9778"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/a5110b22f0a02cb87cd2bca5dc4527c73e2f281b",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQeHuCRC1aQ7uu5UhlAAAq7sQAEcK1ZDPZ6D1gWO6u89YWnPH\n4DaYKSDrB/JUXb/zDoUCuBuRbouP2W4bIEDoJBZRCzTeA8BHbk9ItdNSCEQFa8cB\nLZmiGdJiNYqEK+kl7pleIMhFaHJZY6XhacWPnWbWXToIT3altuXXDaaNn9yZ9KhK\nDSMzN5TTzHEPNoMNsrf22JeImgsrCqIf+AvrJ92b/9GOKX4yUoLHYJz2BpVq/qdj\nJ5LLKV1Lfao6FDRd4NmraNGevaoJdxt/hJD0wcwamFPfVztMRECV4gZB+T6A8j4W\nHjMiDxgnMDps8NRxO3wPtZPO5xOrBoqWee9MM/WH0UDE1JOfur19nhhtaHjStfVf\n22PsuV+6rL0CNiq204ZySg6RNx/DVsdktAcTl3G3peIuNqglWmbVzKYhfsJU/pWv\nG3rI6QmJhySgQXE/1YUXhhJVfn0F3zBSWjhj/5wQsbslAfTdVevmKu48LBSFevYA\nSQtF/AJwlmBotpMsJx2/2zhqFewvvr5hg9cpSq0cBoZZ4aV4erejx7jJvVvatLhv\n6HgP5b/qalIMbIFm8lTaT87UaE0lIlc2rr9uGRaEvo014efhpxPL8/QMlgLIA3kp\nFYx/sjR8eUQAmtNLjRsFP7B3nEq4DUosb1qp0t6xVm61koOh9u9wlxYY69XfDWID\nBVXAfMKEaMrxK0nwW+P2\n=AHAE\n-----END PGP SIGNATURE-----\n",
                "payload": "tree d51f0bea5adfa967c567e49bf1b4ff904e6c9778\nparent b4477d3800ccb0bdf26670cd1f021d094159c38f\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749148142 -0400\ncommitter GitHub <noreply@github.com> 1749148142 -0400\n\n[Flight] Add a Node.js Web Streams bundle for unbundled client/server for Webpack (#33442)\n\nLike #33441 but for Flight.\n\nThis is just one of the many combinations needed. I'm just starting with\none.",
                "verified_at": "2025-06-05T18:29:04Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/a5110b22f0a02cb87cd2bca5dc4527c73e2f281b",
        "html_url": "https://github.com/facebook/react/commit/a5110b22f0a02cb87cd2bca5dc4527c73e2f281b",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/a5110b22f0a02cb87cd2bca5dc4527c73e2f281b/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "b4477d3800ccb0bdf26670cd1f021d094159c38f",
                "url": "https://api.github.com/repos/facebook/react/commits/b4477d3800ccb0bdf26670cd1f021d094159c38f",
                "html_url": "https://github.com/facebook/react/commit/b4477d3800ccb0bdf26670cd1f021d094159c38f"
            }
        ]
    },
    {
        "sha": "b4477d3800ccb0bdf26670cd1f021d094159c38f",
        "node_id": "C_kwDOAJy2KtoAKGI0NDc3ZDM4MDBjY2IwYmRmMjY2NzBjZDFmMDIxZDA5NDE1OWMzOGY",
        "commit": {
            "author": {
                "name": "Hendrik Liebau",
                "email": "mail@hendrik-liebau.de",
                "date": "2025-06-05T15:19:54Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-05T15:19:54Z"
            },
            "message": "[Flight] Add a cached 3rd-party component to the Flight fixture (#33443)\n\nThis should allow us to visualize what\nhttps://github.com/facebook/react/pull/33438 is trying to convey.\n\nAn uncached 3rd-party component is displayed like this in the dev tools:\n\n<img width=\"1072\" alt=\"Screenshot 2025-06-05 at 12 57 32\"\nsrc=\"https://github.com/user-attachments/assets/d418ae23-d113-4dc9-98b8-ab426710454a\"\n/>\n\nHowever, when the component is restored from a cache, it looks like\nthis:\n\n<img width=\"1072\" alt=\"Screenshot 2025-06-05 at 12 56 56\"\nsrc=\"https://github.com/user-attachments/assets/a0e34379-d8c0-4b14-8b54-b5c06211232b\"\n/>\n\nThe `Server Components \u269b` track is missing completely here, and the\n`Loading profile...` phase also took way longer than without caching the\n3rd-party component.\n\nOn `main`, the `Server Components \u269b` track is not missing:\n\n<img width=\"1072\" alt=\"Screenshot 2025-06-05 at 14 31 20\"\nsrc=\"https://github.com/user-attachments/assets/c35e405d-27ca-4b04-a34c-03bd959a7687\"\n/>\n\nThe cached 3rd-party component starts before the current render, and is\nalso not excluded here, which is of course expected without #33438.",
            "tree": {
                "sha": "b2b4fc5be520cbd8109b1a558c03017eb1f6f2b8",
                "url": "https://api.github.com/repos/facebook/react/git/trees/b2b4fc5be520cbd8109b1a558c03017eb1f6f2b8"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b4477d3800ccb0bdf26670cd1f021d094159c38f",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQbWaCRC1aQ7uu5UhlAAASsoQAIA+Opy9MxoHqkcmNTYvZSo+\nqq8otlXHkTGLQqOheAoRb4GVD+Pe33d46sxiFy/fjEaw2be9Ej18g7lu8QOsYVcL\nO6DlOGlIo2SlcQCC0LalqhxsnBqBbMLwnEtsN3bODij7Tii597Okf16zZK9i9aD2\nm4FGbMKK+crEBa2OfbiUyr8SGgm1YOlhYChL9ymCZXUmMGqJpYIqa5pvFabBb/lr\nyUQFEqv1skLTLu6x9b9l8Zt91SOghk5QAmMWiIFN5EZx5w9EP81cpEr5VH+FOGdM\nlCpmdiH/0jimyfrK/fGQyCskusbB+IIHOetmiPM6+1l84dCGQJIU5EbvxxmI+gaC\nMCXPzn7EKQELLugK30WjTZkzn1JYtVLz6dqYrTb+3q1elHZdaD6SGVgim/VXsp/R\nkAi+z+PHXGHCeScOFPvAeDWiTd0WEKaLeCcexF4ZuMLzdqqiev1LB/92Me4mNsMW\n6J8wNSucHjub0ONmgXgkI/ReqGbMGZJQszlvQs54ITjAoBTfYwRRQZRt12VaRMHy\nKNsdhi+2zqvekHVfO6GlDlpPhl4jdMGdVW5f1jgxKP3QLYFdCn8wrs2z/89Xstr3\nFhPv+64WrZkPdwS1G4xnoZActKFinKKFVM6jfMN/hM5hdOFI0F3Pn34ZC6Ku15aQ\nH+fGLTvCr73x/7MmZooQ\n=GU15\n-----END PGP SIGNATURE-----\n",
                "payload": "tree b2b4fc5be520cbd8109b1a558c03017eb1f6f2b8\nparent 93f1668045b924294f5832d5044fa049cd7af16e\nauthor Hendrik Liebau <mail@hendrik-liebau.de> 1749136794 +0200\ncommitter GitHub <noreply@github.com> 1749136794 +0200\n\n[Flight] Add a cached 3rd-party component to the Flight fixture (#33443)\n\nThis should allow us to visualize what\nhttps://github.com/facebook/react/pull/33438 is trying to convey.\n\nAn uncached 3rd-party component is displayed like this in the dev tools:\n\n<img width=\"1072\" alt=\"Screenshot 2025-06-05 at 12 57 32\"\nsrc=\"https://github.com/user-attachments/assets/d418ae23-d113-4dc9-98b8-ab426710454a\"\n/>\n\nHowever, when the component is restored from a cache, it looks like\nthis:\n\n<img width=\"1072\" alt=\"Screenshot 2025-06-05 at 12 56 56\"\nsrc=\"https://github.com/user-attachments/assets/a0e34379-d8c0-4b14-8b54-b5c06211232b\"\n/>\n\nThe `Server Components \u269b` track is missing completely here, and the\n`Loading profile...` phase also took way longer than without caching the\n3rd-party component.\n\nOn `main`, the `Server Components \u269b` track is not missing:\n\n<img width=\"1072\" alt=\"Screenshot 2025-06-05 at 14 31 20\"\nsrc=\"https://github.com/user-attachments/assets/c35e405d-27ca-4b04-a34c-03bd959a7687\"\n/>\n\nThe cached 3rd-party component starts before the current render, and is\nalso not excluded here, which is of course expected without #33438.",
                "verified_at": "2025-06-05T15:19:56Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b4477d3800ccb0bdf26670cd1f021d094159c38f",
        "html_url": "https://github.com/facebook/react/commit/b4477d3800ccb0bdf26670cd1f021d094159c38f",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b4477d3800ccb0bdf26670cd1f021d094159c38f/comments",
        "author": {
            "login": "unstubbable",
            "id": 761683,
            "node_id": "MDQ6VXNlcjc2MTY4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/761683?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/unstubbable",
            "html_url": "https://github.com/unstubbable",
            "followers_url": "https://api.github.com/users/unstubbable/followers",
            "following_url": "https://api.github.com/users/unstubbable/following{/other_user}",
            "gists_url": "https://api.github.com/users/unstubbable/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/unstubbable/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/unstubbable/subscriptions",
            "organizations_url": "https://api.github.com/users/unstubbable/orgs",
            "repos_url": "https://api.github.com/users/unstubbable/repos",
            "events_url": "https://api.github.com/users/unstubbable/events{/privacy}",
            "received_events_url": "https://api.github.com/users/unstubbable/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "93f1668045b924294f5832d5044fa049cd7af16e",
                "url": "https://api.github.com/repos/facebook/react/commits/93f1668045b924294f5832d5044fa049cd7af16e",
                "html_url": "https://github.com/facebook/react/commit/93f1668045b924294f5832d5044fa049cd7af16e"
            }
        ]
    },
    {
        "sha": "93f1668045b924294f5832d5044fa049cd7af16e",
        "node_id": "C_kwDOAJy2KtoAKDkzZjE2NjgwNDViOTI0Mjk0ZjU4MzJkNTA0NGZhMDQ5Y2Q3YWYxNmU",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-05T14:50:41Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-05T14:50:41Z"
            },
            "message": "[Fizz] Add Node Web Streams bundle for SSR (#33441)\n\nWe highly recommend using Node Streams in Node.js because it's much\nfaster and it is less likely to cause issues when chained in things like\ncompression algorithms that need explicit flushing which the Web Streams\necosystem doesn't have a good solution for. However, that said, people\nwant to be able to use the worse option for various reasons.\n\nThe `.edge` builds aren't technically intended for Node.js. A Node.js\nenvironments needs to be patched in various ways to support it. It's\nalso less optimal since it can't use [Node.js exclusive\nfeatures](https://github.com/facebook/react/pull/33388) and have to use\n[the lowest common\ndenominator](https://github.com/facebook/react/pull/27399) such as JS\nimplementations instead of native.\n\nThis adds a Web Streams build of Fizz but exclusively for Node.js so\nthat in it we can rely on Node.js modules. The main difference compared\nto Edge is that SSR now uses `createHash` from the `\"crypto\"` module and\nimports `TextEncoder` from `\"util\"`. We use `setImmediate` instead of\n`setTimeout`.\n\nThe public API is just `react-dom/server` which in Node.js automatically\nimports `react-dom/server.node` which re-exports the legacy bundle, Node\nStreams bundle and Node Web Streams bundle. The main downside is if your\nbundler isn't smart to DCE this barrel file.\n\nWith Flight the difference is larger but that's a bigger lift.",
            "tree": {
                "sha": "9c113f7db67ae2378d66f31d565d200abecb691c",
                "url": "https://api.github.com/repos/facebook/react/git/trees/9c113f7db67ae2378d66f31d565d200abecb691c"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/93f1668045b924294f5832d5044fa049cd7af16e",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQa7BCRC1aQ7uu5UhlAAAYrkQAKNJGYqNPHpN9CaDwm9A9Hpg\nfgpaazzjx1PzZRwK2Z4LBSehhn7lxhbhjKYq8tOZctkAY45D8rHe8O9ueLPLzTM0\nis1s5wjjjlDQtxewXniX/phT06SU3+H1UytLWv9hrXTZnGIF0jYX1hl+yWvTfJhC\nvivGLk3Y8zlD3ycvRIPCGeBRp4UupbtbRuwH/qZGALt63QnDGKiNpIUB2Q8Y4396\n4hIxfNglbPd5bx+7NmoU6u6b1ueFgoURZAE544XjyQXyVpJ1MM2CHPGNu8hCPPoM\nyyQZX2vLeCpijxaSwnHUmSDhRj6DoLsgrGI7/zaiwmHqcSUiE0qv5fO/MH2cV8LD\nsQOLb5GdAXYY2OnvBzCzLbl8blvoyzzmX0mLFco8Y6JkKAgTCVg/uQvPF+woyXKe\nQ2FCiV8L2OTOODE74o0GWse/p9sXDnlwh3uE/tOadrPmHbsqUekYeZxs3VIPn9Kq\nFWUR0sYwcC5sZOSQvJF2BD8CFXPPkGvubziEUD9jBVGfeLI+SjM+oDm+5sdXfQT5\nQ1R9dBzt/DVitfnolIDV66j6F4SUe/eUSI04A0ZqSKWC8nPqmq1VvMivjT3mssAQ\nrM6W1XKhBitlknQLmGOb7En82DLklsZ5tg1uFqs4DaDRppfIHXiCzlhwyUDwRyvg\nIVQ9u9JJzxX8SAqYV8au\n=LAM7\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 9c113f7db67ae2378d66f31d565d200abecb691c\nparent 37054867c15a7381abe0f73d98f3fecd06da52da\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749135041 -0400\ncommitter GitHub <noreply@github.com> 1749135041 -0400\n\n[Fizz] Add Node Web Streams bundle for SSR (#33441)\n\nWe highly recommend using Node Streams in Node.js because it's much\nfaster and it is less likely to cause issues when chained in things like\ncompression algorithms that need explicit flushing which the Web Streams\necosystem doesn't have a good solution for. However, that said, people\nwant to be able to use the worse option for various reasons.\n\nThe `.edge` builds aren't technically intended for Node.js. A Node.js\nenvironments needs to be patched in various ways to support it. It's\nalso less optimal since it can't use [Node.js exclusive\nfeatures](https://github.com/facebook/react/pull/33388) and have to use\n[the lowest common\ndenominator](https://github.com/facebook/react/pull/27399) such as JS\nimplementations instead of native.\n\nThis adds a Web Streams build of Fizz but exclusively for Node.js so\nthat in it we can rely on Node.js modules. The main difference compared\nto Edge is that SSR now uses `createHash` from the `\"crypto\"` module and\nimports `TextEncoder` from `\"util\"`. We use `setImmediate` instead of\n`setTimeout`.\n\nThe public API is just `react-dom/server` which in Node.js automatically\nimports `react-dom/server.node` which re-exports the legacy bundle, Node\nStreams bundle and Node Web Streams bundle. The main downside is if your\nbundler isn't smart to DCE this barrel file.\n\nWith Flight the difference is larger but that's a bigger lift.",
                "verified_at": "2025-06-05T14:50:44Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/93f1668045b924294f5832d5044fa049cd7af16e",
        "html_url": "https://github.com/facebook/react/commit/93f1668045b924294f5832d5044fa049cd7af16e",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/93f1668045b924294f5832d5044fa049cd7af16e/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "37054867c15a7381abe0f73d98f3fecd06da52da",
                "url": "https://api.github.com/repos/facebook/react/commits/37054867c15a7381abe0f73d98f3fecd06da52da",
                "html_url": "https://github.com/facebook/react/commit/37054867c15a7381abe0f73d98f3fecd06da52da"
            }
        ]
    },
    {
        "sha": "37054867c15a7381abe0f73d98f3fecd06da52da",
        "node_id": "C_kwDOAJy2KtoAKDM3MDU0ODY3YzE1YTczODFhYmUwZjczZDk4ZjNmZWNkMDZkYTUyZGE",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-04T04:49:03Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-04T04:49:03Z"
            },
            "message": "[Flight] Forward debugInfo from awaited instrumented Promises (#33415)\n\nStacked on #33403.\n\nWhen a Promise is coming from React such as when it's passed from\nanother environment, we should forward the debug information from that\nenvironment. We already do that when rendered as a child.\n\nThis makes it possible to also `await promise` and have the information\nfrom that instrumented promise carry through to the next render.\n\nThis is a bit tricky because the current protocol is that we have to\nread it from the Promise after it resolves so it has time to be assigned\nto the promise. `async_hooks` doesn't pass us the instance (even though\nit has it) when it gets resolved so we need to keep it around. However,\nwe have to be very careful because if we get this wrong it'll cause a\nmemory leak since we retain things by `asyncId` and then manually listen\nfor `destroy()` which can only be called once a Promise is GC:ed, which\nit can't be if we retain it. We have to therefore use a `WeakRef` in\ncase it never resolves, and then read the `_debugInfo` when it resolves.\nWe could maybe install a setter or something instead but that's also\nheavy.\n\nThe other issues is that we don't use native Promises in\nReactFlightClient so our instrumented promises aren't picked up by the\n`async_hooks` implementation and so we never get a handle to our\nthenable instance. To solve this we can create a native wrapper only in\nDEV.",
            "tree": {
                "sha": "7f615cb9286e4df04a3c0be38dfe9fcd5b00045f",
                "url": "https://api.github.com/repos/facebook/react/git/trees/7f615cb9286e4df04a3c0be38dfe9fcd5b00045f"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/37054867c15a7381abe0f73d98f3fecd06da52da",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoP9A/CRC1aQ7uu5UhlAAAas8QAHUYoto+zXJd7p6PEtbSbCam\nVLltDuG75ECsypMS8XUMgXKLlBFv50CBeAYSURcGas3b+zYCRCAUkQmR0rnwWVLk\nQkct06MHijXR2AkUt1Zz2d7XIOcZPN7R8wZsmVpw+V+szDAW5GPInQo0Df1AzUc4\niB05vl+E9kHaIu4mAq7Vh090f/kitGqNyVhFI7d3gnFu2k8A/xZYuG0gFwlEbtA5\nm5lhuNnfyV8CZ1Vn+dSsdNCtf62QqOLopfFLP0tpzXX4nlhmODX1BamrSUU8AYbr\n27YxS4eIJgffsKTvDUG6nvmFkIR6Sq6oLiJz4r1S9i+X3Ur4XWETl1ivsYffySk6\nm0mOwXtVWCGw3plXVzK/XslWNafBUopOwDcugJE0FwJWb7jH+MMTcXRITqNVrfs0\nq3RZOW/5uRbHOeALVUmIl0BrT5tpiXhvSlq9FipetK+a07HjuI49cSMGK2GyqtIh\nlNPfWfznfK6fs+hncS9Qrmf0Q1SEUo9E6AusLrl855gI1M16ttoD5ZIIEfD/fVVJ\n4+RrRclLyXdXGRrJDIVowSw59KCBFXGw2npUtmKI9e35x77pR43+D/E1el3Kp89i\n/CgU8afhi8kB8sMlKGEj2nIi93HZbNciO8+taHEUr3Q7tNeKHbiHofFLjwdASeI4\ndlBTmvZ3zXpFtqFmyRf2\n=8r4+\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 7f615cb9286e4df04a3c0be38dfe9fcd5b00045f\nparent d742611ce40545127032f4e221c78bf9f70eb437\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749012543 -0400\ncommitter GitHub <noreply@github.com> 1749012543 -0400\n\n[Flight] Forward debugInfo from awaited instrumented Promises (#33415)\n\nStacked on #33403.\n\nWhen a Promise is coming from React such as when it's passed from\nanother environment, we should forward the debug information from that\nenvironment. We already do that when rendered as a child.\n\nThis makes it possible to also `await promise` and have the information\nfrom that instrumented promise carry through to the next render.\n\nThis is a bit tricky because the current protocol is that we have to\nread it from the Promise after it resolves so it has time to be assigned\nto the promise. `async_hooks` doesn't pass us the instance (even though\nit has it) when it gets resolved so we need to keep it around. However,\nwe have to be very careful because if we get this wrong it'll cause a\nmemory leak since we retain things by `asyncId` and then manually listen\nfor `destroy()` which can only be called once a Promise is GC:ed, which\nit can't be if we retain it. We have to therefore use a `WeakRef` in\ncase it never resolves, and then read the `_debugInfo` when it resolves.\nWe could maybe install a setter or something instead but that's also\nheavy.\n\nThe other issues is that we don't use native Promises in\nReactFlightClient so our instrumented promises aren't picked up by the\n`async_hooks` implementation and so we never get a handle to our\nthenable instance. To solve this we can create a native wrapper only in\nDEV.",
                "verified_at": "2025-06-04T04:49:05Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/37054867c15a7381abe0f73d98f3fecd06da52da",
        "html_url": "https://github.com/facebook/react/commit/37054867c15a7381abe0f73d98f3fecd06da52da",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/37054867c15a7381abe0f73d98f3fecd06da52da/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "d742611ce40545127032f4e221c78bf9f70eb437",
                "url": "https://api.github.com/repos/facebook/react/commits/d742611ce40545127032f4e221c78bf9f70eb437",
                "html_url": "https://github.com/facebook/react/commit/d742611ce40545127032f4e221c78bf9f70eb437"
            }
        ]
    },
    {
        "sha": "d742611ce40545127032f4e221c78bf9f70eb437",
        "node_id": "C_kwDOAJy2KtoAKGQ3NDI2MTFjZTQwNTQ1MTI3MDMyZjRlMjIxYzc4YmY5ZjcwZWI0Mzc",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-03T21:40:30Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T21:40:30Z"
            },
            "message": "Replace Implicit Options on SuspenseList with Explicit Options (#33424)\n\nWe want to change the defaults for `revealOrder` and `tail` on\nSuspenseList. This is an intermediate step to allow experimental users\nto upgrade.\n\nTo explicitly specify these options I added `revealOrder=\"independent\"`\nand `tail=\"visible\"`.\n\nI then added warnings if `undefined` or `null` is passed. You must now\nalways explicitly specify them. However, semantics are still preserved\nfor now until the next step.\n\nWe also want to change the rendering order of the `children` prop for\n`revealOrder=\"backwards\"`. As an intermediate step I first added\n`revealOrder=\"unstable_legacy-backwards\"` option. This will only be\ntemporary until all users can switch to the new `\"backwards\"` semantics\nonce we flip it in the next step.\n\nI also clarified the types that the directional props requires iterable\nchildren but not iterable inside of those. Rows with multiple items can\nbe modeled as explicit fragments.",
            "tree": {
                "sha": "bea72f535827b32a08cbea099293ba7a9a9f81d1",
                "url": "https://api.github.com/repos/facebook/react/git/trees/bea72f535827b32a08cbea099293ba7a9a9f81d1"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/d742611ce40545127032f4e221c78bf9f70eb437",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoP2vOCRC1aQ7uu5UhlAAAVdMQAAy0l1CIK3sOWV29th8zpahV\nhA8Wm64Mc55FCRS5BbdcFWBxG8d7R1I8xzoKU6cBdieIcTvF+70+EvU3TK9bd7RK\n1GwJapNsrrhyHKye2xvX0VgGaXNcTHc1HBrVedeYyDQ0/sgyxzLYlm9QjKAVzQQq\n2r0WElQZbEpKDrNy7DJoSXtfRDnWcCcYt3POtQMqVTpj6ub3bZa19mOEA2GGhFCQ\nQbqhA7f9JETyJAJ2VpHQrp7HcCZL/cfFTWZGvX24072dWh4XIwxiLSAR+JR/2rh9\n78EhtNHDO4MXrKDLHeOOk5RliGHU34z4mdRPaV2KfHfbJ7+65PmK9NIO/qQxUbII\nWS8hQ76VwZsgl+mSFy1ofexlxhd0BgsxkslkkjpaqDDtuykjl7yzKUdoLce2CGZM\npDBd3o8slx1waVegnNnAAmjCBRHS9TE3dkV0na7Jp1m+tZRMWvE088RkvXbQhs0y\nDj0pO68mIfh17WSPDEIoMDyATQDW1NNGQNW3BJQNrV9ju4m2SNXSA/0i/puyuicl\nBBn2f/wg+iTKaUltMaUo+3UCCcAMzpoXMHns30Ff5CgbBXoAxPNs+Y/CXpMXOlHV\nKZ2Yeon0gfyy4CHv8/suE37swx6TYkbjqysJyy3H7OFQUjRES1P3Ie48kVnH038y\n48nQIAUUq1lVOSslXNJY\n=H558\n-----END PGP SIGNATURE-----\n",
                "payload": "tree bea72f535827b32a08cbea099293ba7a9a9f81d1\nparent 154008172573d64519ebbc23da611a27073b0a8c\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748986830 -0400\ncommitter GitHub <noreply@github.com> 1748986830 -0400\n\nReplace Implicit Options on SuspenseList with Explicit Options (#33424)\n\nWe want to change the defaults for `revealOrder` and `tail` on\nSuspenseList. This is an intermediate step to allow experimental users\nto upgrade.\n\nTo explicitly specify these options I added `revealOrder=\"independent\"`\nand `tail=\"visible\"`.\n\nI then added warnings if `undefined` or `null` is passed. You must now\nalways explicitly specify them. However, semantics are still preserved\nfor now until the next step.\n\nWe also want to change the rendering order of the `children` prop for\n`revealOrder=\"backwards\"`. As an intermediate step I first added\n`revealOrder=\"unstable_legacy-backwards\"` option. This will only be\ntemporary until all users can switch to the new `\"backwards\"` semantics\nonce we flip it in the next step.\n\nI also clarified the types that the directional props requires iterable\nchildren but not iterable inside of those. Rows with multiple items can\nbe modeled as explicit fragments.",
                "verified_at": "2025-06-03T21:40:33Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/d742611ce40545127032f4e221c78bf9f70eb437",
        "html_url": "https://github.com/facebook/react/commit/d742611ce40545127032f4e221c78bf9f70eb437",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/d742611ce40545127032f4e221c78bf9f70eb437/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "154008172573d64519ebbc23da611a27073b0a8c",
                "url": "https://api.github.com/repos/facebook/react/commits/154008172573d64519ebbc23da611a27073b0a8c",
                "html_url": "https://github.com/facebook/react/commit/154008172573d64519ebbc23da611a27073b0a8c"
            }
        ]
    },
    {
        "sha": "154008172573d64519ebbc23da611a27073b0a8c",
        "node_id": "C_kwDOAJy2KtoAKDE1NDAwODE3MjU3M2Q2NDUxOWViYmMyM2RhNjExYTI3MDczYjBhOGM",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-03T21:30:31Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T21:30:31Z"
            },
            "message": "[Flight] Encode Async I/O Tasks using the Enclosing Line/Column (#33403)\n\nStacked on #33402.\n\nThere's a bug in Chrome Performance tracking which uses the enclosing\nline/column instead of the callsite in stacks.\n\nFor our fake eval:ed functions that represents functions on the server,\nwe can position the enclosing function body at the position of the\ncallsite to simulate getting the right line.\n\nUnfortunately, that doesn't give us exactly the right callsite when it's\nused for other purposes that uses the callsite like console logs and\nerror reporting and stacks inside breakpoints. So I don't think we want\nto always do this.\n\nFor ReactAsyncInfo/ReactIOInfo, the only thing we're going to use the\nfake task for is the Performance tracking, so it doesn't have any\ndownsides until Chrome fixes the bug and we'd have to revert it.\nTherefore this PR uses that techniques only for those entries.\n\nWe could do this for Server Components too but we're going to use those\nfor other things too like console logs. I don't think it's worth\nduplicating the Task objects. That would also make it inconsistent with\nClient Components.\n\nFor Client Components, we could in theory also generate fake evals but\nthat would be way slower since there's so many of them and currently we\nrely on the native implementation for those. So doesn't seem worth\nfixing.\n\nBut since we can at least fix it for RSC I/O/awaits we can do this hack.",
            "tree": {
                "sha": "85842f5e878d8608c4535878b1b48c6ed425ef97",
                "url": "https://api.github.com/repos/facebook/react/git/trees/85842f5e878d8608c4535878b1b48c6ed425ef97"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/154008172573d64519ebbc23da611a27073b0a8c",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoP2l3CRC1aQ7uu5UhlAAAfFkQAFB+SLn6xSRodgi3Lx+RJliU\nvYSE9NiUTo0rlK5zST6jgecQ6mLQlTq0/uYzY74L0ejlXroxVnhrmpzWLmtgNBBN\nN0bsPyHSWMhY9q9fqOVDq/tcBDZX922kyztgbBeoUk0/6nLCRkrjJq8V31a/3Fsc\nmegl9QdQPa7EaI3uAm1C2S9wyr5/NBhWQynTgLSixBJmoAm3dIWmygE3T9d8SdsT\nQ2hTTZr0P4HdWzyY9UevoMYBK/d5Y7kPgCQB0xHK/sbycU8S3H+R0vLexQNO/8MX\nvcPAJATjbu1iNUNvm8UvU/qOlv8byrB9OcvpIG2c41DzwIwSd9J3h9QbBHlXFUBH\nNjYWONlRYcT9MTcLB1ULxP3R9RS9VZYX8VoN3uZO0aLHjZC1dITwnaVtW2Dc5FLe\nsilKq3thcap9P/Uua8BcuaWoHpbStYYINiwDPCdiMLJ5Q1LM93cAEkoV/bC+a7m1\nheYfVCkcPuWfmSNzOn5JCoVc6reHQoyDZplpZJhS4OM/OuYSmx+P1OZMhuLcA/aB\nX9VY9piquVOL37xlCT7JwOxjuCvD+UDgBrpdI2f4KvN3bqUGjGVEOxjb7PHaxerE\nAJDQUHGkm7lkRQhFJkWVOPG7Vb4LCmMeOXAaWo3H41+J29Gw0csidBkuAWCRE7qV\nyMeIEQN7NeZnFg47nulO\n=JR7J\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 85842f5e878d8608c4535878b1b48c6ed425ef97\nparent 9cc74fec749bcca2e0f5d1e41aa612b2135641ff\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748986231 -0400\ncommitter GitHub <noreply@github.com> 1748986231 -0400\n\n[Flight] Encode Async I/O Tasks using the Enclosing Line/Column (#33403)\n\nStacked on #33402.\n\nThere's a bug in Chrome Performance tracking which uses the enclosing\nline/column instead of the callsite in stacks.\n\nFor our fake eval:ed functions that represents functions on the server,\nwe can position the enclosing function body at the position of the\ncallsite to simulate getting the right line.\n\nUnfortunately, that doesn't give us exactly the right callsite when it's\nused for other purposes that uses the callsite like console logs and\nerror reporting and stacks inside breakpoints. So I don't think we want\nto always do this.\n\nFor ReactAsyncInfo/ReactIOInfo, the only thing we're going to use the\nfake task for is the Performance tracking, so it doesn't have any\ndownsides until Chrome fixes the bug and we'd have to revert it.\nTherefore this PR uses that techniques only for those entries.\n\nWe could do this for Server Components too but we're going to use those\nfor other things too like console logs. I don't think it's worth\nduplicating the Task objects. That would also make it inconsistent with\nClient Components.\n\nFor Client Components, we could in theory also generate fake evals but\nthat would be way slower since there's so many of them and currently we\nrely on the native implementation for those. So doesn't seem worth\nfixing.\n\nBut since we can at least fix it for RSC I/O/awaits we can do this hack.",
                "verified_at": "2025-06-03T21:30:33Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/154008172573d64519ebbc23da611a27073b0a8c",
        "html_url": "https://github.com/facebook/react/commit/154008172573d64519ebbc23da611a27073b0a8c",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/154008172573d64519ebbc23da611a27073b0a8c/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "9cc74fec749bcca2e0f5d1e41aa612b2135641ff",
                "url": "https://api.github.com/repos/facebook/react/commits/9cc74fec749bcca2e0f5d1e41aa612b2135641ff",
                "html_url": "https://github.com/facebook/react/commit/9cc74fec749bcca2e0f5d1e41aa612b2135641ff"
            }
        ]
    },
    {
        "sha": "9cc74fec749bcca2e0f5d1e41aa612b2135641ff",
        "node_id": "C_kwDOAJy2KtoAKDljYzc0ZmVjNzQ5YmNjYTJlMGY1ZDFlNDFhYTYxMmIyMTM1NjQxZmY",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-03T21:29:41Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T21:29:41Z"
            },
            "message": "[Flight] Emit the time we awaited something inside a Server Component (#33402)\n\nStacked on #33400. \n\n<img width=\"1261\" alt=\"Screenshot 2025-06-01 at 10 27 47\u202fPM\"\nsrc=\"https://github.com/user-attachments/assets/a5a73ee2-49e0-4851-84ac-e0df6032efb5\"\n/>\n\nThis is emitted with the start/end time and stack of the \"await\". Which\nmay be different than the thing that started the I/O.\n\nThese awaits aren't quite as simple as just every await since you can\nstart a sequence in parallel there can actually be multiple overlapping\nawaits and there can be CPU work interleaved with the await on the same\ncomponent.\n\n```js\nfunction getData() {\n  await fetch(...);\n  await fetch(...);\n}\nconst promise = getData();\ndoWork();\nawait promise;\n```\n\nThis has two \"I/O\" awaits but those are actually happening in parallel\nwith `doWork()`.\n\nSince these also could have started before we started rendering this\nsequence (e.g. a component) we have to clamp it so that we don't\nconsider awaits that start before the component.\n\nWhat we're conceptually trying to convey is the time this component was\nblocked due to that I/O resource. Whether it's blocked from completing\nthe last result or if it's blocked from issuing a waterfall request.",
            "tree": {
                "sha": "a7d0fb5c86a14debd88fffb70ef5cc3131889f4f",
                "url": "https://api.github.com/repos/facebook/react/git/trees/a7d0fb5c86a14debd88fffb70ef5cc3131889f4f"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/9cc74fec749bcca2e0f5d1e41aa612b2135641ff",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoP2lGCRC1aQ7uu5UhlAAAWNIQAGZcEI9ITd37agHpgpEBsYis\nUaOP5TESV6P+4zgxnLgSaduC0XEZGKilmzf6BeZXB74okPAoj6ag4671i5fLJqfQ\nZiqW5YVlVy+bPSKs613+7JJ1Hh3kpQaF7OuqzsMrny1UMBNR1BoV7TpOkBkyWs08\n1+BNQMpoA5FPL9KLJT3hI3STj5nlkbrEOgXvtHzuecawsxQDM2Ad5h1rHOoLuMUG\nNjfA4ni3Z/whr2/Wh9T2d79j6ySFbO8UIy+402wSzPYUjNHjpXmulk+TuqHfG9qc\nvwjY1jo+MqoxKFuAyzX/ROnGBn0GGR7R9hTUDRgLfwgf02Tl7CJfnsNDqHSSzthO\n2fZqhuhItpzE3zg9P00uwksx+Q2FLOVREsG/cQRpKawAhhYOkKa1QvblZ9woxWA0\nhEBhdgntCft70ZfwUnbSq/vLbzm7TDp28XkMeOalqkHefcNwn7FM2r/aDk3tFaZK\notgSXZC0d5jve6X3m9qapeaLrQa923XMlc7xMryjWNAEAHZfOsDEDTSbDV/LBDFR\nFZJ4PqFQ47Y5+IMZYsgICVilouOn3HHT9tk0k8HG6a1RQLvWgxcaXazeqWinoLLQ\nB6F7S2YgcNH+Y767qCTrFyT99WKi1DwyfjEfFGjxE+iEkI/CvEHzXW6+nBxXMroN\nPyJRfEp7Ymhl9cH0uGiy\n=r3ax\n-----END PGP SIGNATURE-----\n",
                "payload": "tree a7d0fb5c86a14debd88fffb70ef5cc3131889f4f\nparent 157ac578ded11352330dbdfb8cf339b28c6a16d6\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748986181 -0400\ncommitter GitHub <noreply@github.com> 1748986181 -0400\n\n[Flight] Emit the time we awaited something inside a Server Component (#33402)\n\nStacked on #33400. \n\n<img width=\"1261\" alt=\"Screenshot 2025-06-01 at 10 27 47\u202fPM\"\nsrc=\"https://github.com/user-attachments/assets/a5a73ee2-49e0-4851-84ac-e0df6032efb5\"\n/>\n\nThis is emitted with the start/end time and stack of the \"await\". Which\nmay be different than the thing that started the I/O.\n\nThese awaits aren't quite as simple as just every await since you can\nstart a sequence in parallel there can actually be multiple overlapping\nawaits and there can be CPU work interleaved with the await on the same\ncomponent.\n\n```js\nfunction getData() {\n  await fetch(...);\n  await fetch(...);\n}\nconst promise = getData();\ndoWork();\nawait promise;\n```\n\nThis has two \"I/O\" awaits but those are actually happening in parallel\nwith `doWork()`.\n\nSince these also could have started before we started rendering this\nsequence (e.g. a component) we have to clamp it so that we don't\nconsider awaits that start before the component.\n\nWhat we're conceptually trying to convey is the time this component was\nblocked due to that I/O resource. Whether it's blocked from completing\nthe last result or if it's blocked from issuing a waterfall request.",
                "verified_at": "2025-06-03T21:29:44Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/9cc74fec749bcca2e0f5d1e41aa612b2135641ff",
        "html_url": "https://github.com/facebook/react/commit/9cc74fec749bcca2e0f5d1e41aa612b2135641ff",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/9cc74fec749bcca2e0f5d1e41aa612b2135641ff/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "157ac578ded11352330dbdfb8cf339b28c6a16d6",
                "url": "https://api.github.com/repos/facebook/react/commits/157ac578ded11352330dbdfb8cf339b28c6a16d6",
                "html_url": "https://github.com/facebook/react/commit/157ac578ded11352330dbdfb8cf339b28c6a16d6"
            }
        ]
    },
    {
        "sha": "157ac578ded11352330dbdfb8cf339b28c6a16d6",
        "node_id": "C_kwDOAJy2KtoAKDE1N2FjNTc4ZGVkMTEzNTIzMzBkYmRmYjhjZjMzOWIyOGM2YTE2ZDY",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-03T21:28:46Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T21:28:46Z"
            },
            "message": "[Flight] Include env in ReactAsyncInfo and ReactIOInfo (#33400)\n\nStacked on #33395.\n\nThis lets us keep track of which environment this was fetched and\nawaited.\n\nCurrently the IO and await is in the same environment. It's just kept\nwhen forwarded. Once we support forwarding information from a Promise\nfetched from another environment and awaited in this environment then\nthe await can end up being in a different environment.\n\nThere's a question of when the await is inside Flight itself such as\nwhen you return a promise fetched from another environment whether that\nshould mean that the await is in the current environment. I don't think\nso since the original stack trace is the best stack trace. It's only if\nyou `await` it in user space in this environment first that this might\nhappen and even then it should only be considered if there wasn't a\nbetter await earlier or if reading from the other environment was itself\nI/O.\n\nThe timing of *when* we read `environmentName()` is a little interesting\nhere too.",
            "tree": {
                "sha": "8d5aaeb0109f8d6e4dd4960b4fdde0e751ecc10e",
                "url": "https://api.github.com/repos/facebook/react/git/trees/8d5aaeb0109f8d6e4dd4960b4fdde0e751ecc10e"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/157ac578ded11352330dbdfb8cf339b28c6a16d6",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoP2kOCRC1aQ7uu5UhlAAAfrYQAC7BoE/oZ0r7yGv1TqiwRwWF\nBtmbJdTks1aVAhbIAC/R1rWQ0vFaojYCYX5pMuba2dT6ddNtzxVW2nAh29U5ucwE\nkZOgUdeuL9+V1lswn5YzLQz7OSKt9xfvOx3nW/zKINHU3YT5Swcb9CiffFlB6OFA\nd3lp37VXP8YANzttSdL692FgaOVVib5XReU5YKZfvXyTZlES/kUmstW+b4hk+yv1\nf0vipAF7FGch+9vtRe1oK6Eo0ZTOkUiR4VHGzhK3+OJ/xh0T6/7pADUE3aorYKbC\nC9mlidLUSQGgfEb3HIxj2+qzvuLvxdVaziOF8sqY27wsPFFwEkGk6Dxycp9lY/TS\n3K1l4OFvrOx2/dWAtkgZ0mp/c9/Ll14OAEBlWXSqw0kpUe9v9DaI1wrhXHptvHq0\nPtjozck2YiIq5EaVDlEOEiuxYcaQ99BPtZeA7rBdszI7uCzAoLUnL4kmASXeekJO\nrPqpaSb/UeL3MP2q4KuxLhXOtDGU3E722yGXHVf3JC3WXjS8QU+sW5KCaO0Bhq+Y\n3AE31P/kYQqqYgdJIP2HR6H8tLIWq1PQJNfHTGux9E/X6VbnfxZjnaXpO6t2MVaR\nEupjCwojOLBTHOsZvo0x5I8mMOUOsP+bhgGS07e29G/U0GlhWo4OFNQk6fAJpt6R\nfiHiar8y0rgyTWbrygjU\n=0KYw\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 8d5aaeb0109f8d6e4dd4960b4fdde0e751ecc10e\nparent 45da4e055dc7a2b9de6abdae0709e242f8091636\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748986126 -0400\ncommitter GitHub <noreply@github.com> 1748986126 -0400\n\n[Flight] Include env in ReactAsyncInfo and ReactIOInfo (#33400)\n\nStacked on #33395.\n\nThis lets us keep track of which environment this was fetched and\nawaited.\n\nCurrently the IO and await is in the same environment. It's just kept\nwhen forwarded. Once we support forwarding information from a Promise\nfetched from another environment and awaited in this environment then\nthe await can end up being in a different environment.\n\nThere's a question of when the await is inside Flight itself such as\nwhen you return a promise fetched from another environment whether that\nshould mean that the await is in the current environment. I don't think\nso since the original stack trace is the best stack trace. It's only if\nyou `await` it in user space in this environment first that this might\nhappen and even then it should only be considered if there wasn't a\nbetter await earlier or if reading from the other environment was itself\nI/O.\n\nThe timing of *when* we read `environmentName()` is a little interesting\nhere too.",
                "verified_at": "2025-06-03T21:28:49Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/157ac578ded11352330dbdfb8cf339b28c6a16d6",
        "html_url": "https://github.com/facebook/react/commit/157ac578ded11352330dbdfb8cf339b28c6a16d6",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/157ac578ded11352330dbdfb8cf339b28c6a16d6/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "45da4e055dc7a2b9de6abdae0709e242f8091636",
                "url": "https://api.github.com/repos/facebook/react/commits/45da4e055dc7a2b9de6abdae0709e242f8091636",
                "html_url": "https://github.com/facebook/react/commit/45da4e055dc7a2b9de6abdae0709e242f8091636"
            }
        ]
    },
    {
        "sha": "45da4e055dc7a2b9de6abdae0709e242f8091636",
        "node_id": "C_kwDOAJy2KtoAKDQ1ZGE0ZTA1NWRjN2EyYjlkZTZhYmRhZTA3MDllMjQyZjgwOTE2MzY",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-03T20:12:26Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T20:12:26Z"
            },
            "message": "[Flight] Track Owner on AsyncInfo and IOInfo (#33395)\n\nStacked on #33394.\n\nThis lets us create async stack traces to the owner that was in context\nwhen the I/O was started or awaited.\n\n<img width=\"615\" alt=\"Screenshot 2025-06-01 at 12 31 52\u202fAM\"\nsrc=\"https://github.com/user-attachments/assets/6ff5a146-33d6-4a4b-84af-1b57e73047d4\"\n/>\n\nThis owner might not be the immediate closest parent where the I/O was\nawaited.",
            "tree": {
                "sha": "780965cb6d9b194abe4e0d03fad6d1db6f2eda4a",
                "url": "https://api.github.com/repos/facebook/react/git/trees/780965cb6d9b194abe4e0d03fad6d1db6f2eda4a"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/45da4e055dc7a2b9de6abdae0709e242f8091636",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoP1cqCRC1aQ7uu5UhlAAAu44QAF+ZWWPZPSCbM45pgJLe8Wkq\nBr43OX0rCIVx+GTb26gjeIrP+kCzYlZRAQavnhKB/RclmwnTD/MM8n78b/KqQaVe\nrS+RcTc1PAPWrgX4B30gEo3BpoW1jeNyVW/RiOykCONDzba5/iekunGg/cZZYc9L\nlGqoXZKv4LycuJt4j4J+HsL0RJsSxwi70ItuzzC950MYAv47WpRbrSTDZ5m0rCBj\ngCqEU986OST3XWJArqo6AQ6cChsgEYcoX7Blja98oOSv5Gfqdi6b09iqXrzXFfbj\nhf+EwOeXFTPnqzxOAlLVaPs2eI0xEcO1Cfckt3MCo1wJsmu0rVhaOVTXoznGpGYB\noTWdbeh4Z0xau84mMhorzrf1eOZWRSs1vWfzJrd1k4m9VIjvMvzgK87f0v6ZHiRu\nq7wXeW9KzUN6YqCVU2andxNGk19p1Qx+cNtGx9ZlOUvyRhCO5KjWx3mcFYGGywdp\nNGl7520WlOGHE8te7vwl94X8bhmANr/FxPcdoeZXOZNBsh1pHJI9+ys5tvtCY0jK\nHgmXyObaa/iUs7MStgBIsHgk0GwNxOAf0/PM/UB/8zddduufPGGHVk6UWXQdU8+q\nuPpTxsgnaAqgqaRfBjIZo77BOJD2XcazzYRVMej1fAj8Oxhpi2kcF57PhctZpJB3\nf5YL3grPrZExEMPQUoaS\n=5kR2\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 780965cb6d9b194abe4e0d03fad6d1db6f2eda4a\nparent d8919a0a6854715a4a77db24ed7a94a124487d86\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748981546 -0400\ncommitter GitHub <noreply@github.com> 1748981546 -0400\n\n[Flight] Track Owner on AsyncInfo and IOInfo (#33395)\n\nStacked on #33394.\n\nThis lets us create async stack traces to the owner that was in context\nwhen the I/O was started or awaited.\n\n<img width=\"615\" alt=\"Screenshot 2025-06-01 at 12 31 52\u202fAM\"\nsrc=\"https://github.com/user-attachments/assets/6ff5a146-33d6-4a4b-84af-1b57e73047d4\"\n/>\n\nThis owner might not be the immediate closest parent where the I/O was\nawaited.",
                "verified_at": "2025-06-03T20:12:29Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/45da4e055dc7a2b9de6abdae0709e242f8091636",
        "html_url": "https://github.com/facebook/react/commit/45da4e055dc7a2b9de6abdae0709e242f8091636",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/45da4e055dc7a2b9de6abdae0709e242f8091636/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "d8919a0a6854715a4a77db24ed7a94a124487d86",
                "url": "https://api.github.com/repos/facebook/react/commits/d8919a0a6854715a4a77db24ed7a94a124487d86",
                "html_url": "https://github.com/facebook/react/commit/d8919a0a6854715a4a77db24ed7a94a124487d86"
            }
        ]
    },
    {
        "sha": "d8919a0a6854715a4a77db24ed7a94a124487d86",
        "node_id": "C_kwDOAJy2KtoAKGQ4OTE5YTBhNjg1NDcxNWE0YTc3ZGIyNGVkN2E5NGExMjQ0ODdkODY",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-03T19:31:12Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T19:31:12Z"
            },
            "message": "[Flight] Log \"Server Requests\" Track (#33394)\n\nStacked on #33392.\n\nThis adds another track to the Performance Track called `\"Server\nRequests\"`.\n\n<img width=\"1015\" alt=\"Screenshot 2025-06-01 at 12 02 14\u202fAM\"\nsrc=\"https://github.com/user-attachments/assets/c4d164c4-cfdf-4e14-9a87-3f011f65fd20\"\n/>\n\nThis logs the flat list of I/O awaited on by Server Components. There\nwill be other views that are more focused on what data blocks a specific\nComponent or Suspense boundary but this is just the list of all the I/O\nbasically so you can get an overview of those waterfalls without the\nnoise of all the Component trees and rendering. It's similar to what the\n\"Network\" track is on the client.\n\nI've been going back and forth on what to call this track but I went\nwith `\"Server Requests\"` for now. The idea is that the name should\ncommunicate that this is something that happens on the server and is a\npairing with the `\"Server Components\"` track. Although we don't use that\nfeature, since it's missing granularity, it's also similar to \"Server\nTimings\".",
            "tree": {
                "sha": "73a1def673fff6d9d73d9057f94141f588508e71",
                "url": "https://api.github.com/repos/facebook/react/git/trees/73a1def673fff6d9d73d9057f94141f588508e71"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/d8919a0a6854715a4a77db24ed7a94a124487d86",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoP02ACRC1aQ7uu5UhlAAAPCIQAFWmMCitJDv0qM1IWd51pQM9\n+v/9VratxhQt2438aDJ+hlnXKoDfik7InUNFq7lxg8SdB60qEOx52YAAnUdrjDiq\nOUoErJ24Vl0YhSOLGGUqPvWNmEA0sw5toiAbSsLZU1yzEdksOsSZlT2nbN44MXdE\nVXHx8SjKYMP+AU3MwXCgcgHMvEM39CqtDA8gwP2LG8zXa3wTTSZsd20muxla4fkh\nUYrv7iNhobVcsHvUGlMa64DYxJHJ6wllwPljgDns11930wXVSfWtmw+UmTsq6CE4\n9HuPj3irC/7RccZ4jYngvNiPteCMQNtqCA6yfv6okOPFniTnOwFq9EsAbXCdpr3q\nOcnANrA7mTYJ6ghA1oNfXzkDsOAS5wQlRC0p8PgoE7u2E2WW8Xcn6OtsLT+CFl7A\nvr8H/3rjE/GJdiYn1mu/W530/VY45kLzM3Nhrzg8hUBc/soZVLU/9R5LzqoZDJ3x\nOGU0pvANrAJRsti0bXD9PeOmEsFuXnR01XQiV3fIqlvjBfNTauk+jjIL8iLug//s\nrQT+p1nfzWVhiwwxUrxJ/dXNNqQkqMKdJGf5/0nUVYz/tC1wHweE83KIwIY6QpBg\nbf418NWeijltXJJceK+VloIxapFHRMn/N4Mb78HuuTZ4DzkUcqnOTAFTTk01v/Ap\n1Im7o6A41chh+bV7CZLz\n=R9ic\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 73a1def673fff6d9d73d9057f94141f588508e71\nparent 2e9f8cd3e031212bc507e31e2888f8f96b1de138\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748979072 -0400\ncommitter GitHub <noreply@github.com> 1748979072 -0400\n\n[Flight] Log \"Server Requests\" Track (#33394)\n\nStacked on #33392.\n\nThis adds another track to the Performance Track called `\"Server\nRequests\"`.\n\n<img width=\"1015\" alt=\"Screenshot 2025-06-01 at 12 02 14\u202fAM\"\nsrc=\"https://github.com/user-attachments/assets/c4d164c4-cfdf-4e14-9a87-3f011f65fd20\"\n/>\n\nThis logs the flat list of I/O awaited on by Server Components. There\nwill be other views that are more focused on what data blocks a specific\nComponent or Suspense boundary but this is just the list of all the I/O\nbasically so you can get an overview of those waterfalls without the\nnoise of all the Component trees and rendering. It's similar to what the\n\"Network\" track is on the client.\n\nI've been going back and forth on what to call this track but I went\nwith `\"Server Requests\"` for now. The idea is that the name should\ncommunicate that this is something that happens on the server and is a\npairing with the `\"Server Components\"` track. Although we don't use that\nfeature, since it's missing granularity, it's also similar to \"Server\nTimings\".",
                "verified_at": "2025-06-03T19:31:14Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/d8919a0a6854715a4a77db24ed7a94a124487d86",
        "html_url": "https://github.com/facebook/react/commit/d8919a0a6854715a4a77db24ed7a94a124487d86",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/d8919a0a6854715a4a77db24ed7a94a124487d86/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "2e9f8cd3e031212bc507e31e2888f8f96b1de138",
                "url": "https://api.github.com/repos/facebook/react/commits/2e9f8cd3e031212bc507e31e2888f8f96b1de138",
                "html_url": "https://github.com/facebook/react/commit/2e9f8cd3e031212bc507e31e2888f8f96b1de138"
            }
        ]
    },
    {
        "sha": "2e9f8cd3e031212bc507e31e2888f8f96b1de138",
        "node_id": "C_kwDOAJy2KtoAKDJlOWY4Y2QzZTAzMTIxMmJjNTA3ZTMxZTI4ODhmOGY5NmIxZGUxMzg",
        "commit": {
            "author": {
                "name": "Sebastian \"Sebbie\" Silbermann",
                "email": "sebastian.silbermann@vercel.com",
                "date": "2025-06-03T19:10:13Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T19:10:13Z"
            },
            "message": "Clear bundler cache before bundling fixtures (#33426)",
            "tree": {
                "sha": "22594f4083c03ed003ad315e30ff9043bbff4c47",
                "url": "https://api.github.com/repos/facebook/react/git/trees/22594f4083c03ed003ad315e30ff9043bbff4c47"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/2e9f8cd3e031212bc507e31e2888f8f96b1de138",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoP0iVCRC1aQ7uu5UhlAAAsuwQAFJwPvDJeOI5aeQijARZJ8s/\nMeem2MF1Zkbc481j7IdmTlhiMpPKyPi4CbxwQj05Oz429O94AfEiOVj8dkcZbXob\n4EmUSTzASiDIw4WMM0Q26umWL0N86JohbEiaXdGN+RRWlTDrMhuba3lyubjvF2Ck\nCrf19tWSlWhIVjr0nos3ht27OpAQN3CMqQ5pQd8RPWWy+sBVXXEvrxe6uogSZK6N\nRKwn5lu8iD7xa1gCTEy4VzdtLV6W/ALTwKHTcoLvq+lSWkzK50TRl0dC9u2Eqk+7\nVh6u02cp8r16dWtxDfMCYBuDQqAaRO3gp7mrE5wjb1sBIxwfK3xfyg7ghZ6R8vHJ\nU35/lWf7eUOteVf6Aeji6QWdOovhg6OXvPZitDDYUwLSYY8B5Hns5k1o+14dHVYQ\nYPlSDN18PyvjOVR2b+9T56+yXNyFK3kxkpyl0NFrv748YNeLaqopnxPMUVms8kpD\n6DFEnU2JdM+Oor2+aBHPb98nf7pVseFux7sl3es1gOdBxBdSR5oJaE+c6HOJ8428\nnfJS8fwbauQ+Rd+0DPU9h8h1IeBCx78lmX2kACisP7etdiEfn0yNGSXjED7M7VxA\naqEYX5pDzK7tdcfGV6dieV8vcizsV1UgP++88rWBsXDda29EpCtDvhcKT1C7yTg2\nfWyfmQzV7qYBQg+DL7q0\n=Y5dw\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 22594f4083c03ed003ad315e30ff9043bbff4c47\nparent 65a46c7eebb731ba5c1602afef87365491beb75d\nauthor Sebastian \"Sebbie\" Silbermann <sebastian.silbermann@vercel.com> 1748977813 +0200\ncommitter GitHub <noreply@github.com> 1748977813 +0200\n\nClear bundler cache before bundling fixtures (#33426)\n\n",
                "verified_at": "2025-06-03T19:10:15Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/2e9f8cd3e031212bc507e31e2888f8f96b1de138",
        "html_url": "https://github.com/facebook/react/commit/2e9f8cd3e031212bc507e31e2888f8f96b1de138",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/2e9f8cd3e031212bc507e31e2888f8f96b1de138/comments",
        "author": {
            "login": "eps1lon",
            "id": 12292047,
            "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/12292047?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eps1lon",
            "html_url": "https://github.com/eps1lon",
            "followers_url": "https://api.github.com/users/eps1lon/followers",
            "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
            "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
            "organizations_url": "https://api.github.com/users/eps1lon/orgs",
            "repos_url": "https://api.github.com/users/eps1lon/repos",
            "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eps1lon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "65a46c7eebb731ba5c1602afef87365491beb75d",
                "url": "https://api.github.com/repos/facebook/react/commits/65a46c7eebb731ba5c1602afef87365491beb75d",
                "html_url": "https://github.com/facebook/react/commit/65a46c7eebb731ba5c1602afef87365491beb75d"
            }
        ]
    },
    {
        "sha": "65a46c7eebb731ba5c1602afef87365491beb75d",
        "node_id": "C_kwDOAJy2KtoAKDY1YTQ2YzdlZWJiNzMxYmE1YzE2MDJhZmVmODczNjU0OTFiZWI3NWQ",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-03T19:04:28Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T19:04:28Z"
            },
            "message": "[Flight] Track the function name that was called for I/O entries (#33392)\n\nStacked on #33390.\n\nThe stack trace doesn't include the thing you called when calling into\nignore listed content. We consider the ignore listed content\nconceptually the abstraction that you called that's interesting.\n\nThis extracts the name of the first ignore listed function that was\ncalled from user space. For example `\"fetch\"`. So we can know what kind\nof request this is.\n\nThis could be enhanced and tweaked with heuristics in the future. For\nexample, when you create a Promise yourself and call I/O inside of it\nlike my `delay` examples, then we use that Promise as the I/O node but\nits stack doesn't have the actual I/O performed. It might be better to\nuse the inner I/O node in that case. E.g. `setTimeout`. Currently I pick\nthe name from the first party code instead - in my example `delay`.\n\nAnother case that could be improved is the case where your whole\ncomponent is third-party. In that case we still log the I/O but it has\nno context about what kind of I/O since the whole stack is ignored it\njust gets the component name for example. We could for example look at\nthe first name that is in a different package than the package name of\nthe ignored listed component. So if\n`node_modules/my-component-library/index.js` calls into\n`node_modules/mysql/connection.js` then we could use the name from the\ninner.",
            "tree": {
                "sha": "77adb1d9d2fea3239480119a9e457da8788c33b9",
                "url": "https://api.github.com/repos/facebook/react/git/trees/77adb1d9d2fea3239480119a9e457da8788c33b9"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/65a46c7eebb731ba5c1602afef87365491beb75d",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoP0c8CRC1aQ7uu5UhlAAA7qYQADA/Tjq1f3Amj7q/9HVmj85h\n5phcCgs2YUcxkPPKawYsEovVE9cvOlhpxi/aZMoQ2DFNaWcx8kC4WmVyAz1sDuVq\nMb2eI6silYof7M3b5IPed8C4unuPH50GGVo4N+ymTAPoBcOXPz/j+KHw6bFxfyyl\noxOKqZNtCtzPVfQZM8HSVEsrVAnJuLPLiIYOzb04CIZeYrMLDzAvM2KO8ckhX7xy\n5co8+rSNSzbHwjrZK7k5gZWDT7fMvEySUBmMOQz9reuGS6GyJWmuWfF1P5Ednvsk\nQ+lo2ufxU+bzW0sjOoQwigSQ2TJqUVWV1cjKaGLOl13pnJK27aoLtvQoTRQsZJQa\nvYzq5IZ5Ka7mKnZ4BDUYv3PnQmyf5NqVufvQ1qoF8lYHc10W2GNbBlb+t1E8goSS\nohah2+of+tv/r0TyZKGGxrRt0qZ5INNLyllsLvF0dHBQYMgUc6KLFqEoGuVOzd+4\nPQQfLu02xRNt/XMIMt+5tY+/qDzfEtWPW2nbleXb9mGRSMCOB9QboFizzKX2rOYx\ng60+BBy+93AJN2EJMrKODJmZbp+1JxCoatmJVEBtrQZFZDMuUz+sRLmcofE2Gozc\nq4JA8ztm8+PYPryiVn0YM53gqHMXSV94YX81zI3Ty9xZOugIJawhHGgTsokIxwwO\n4a7BFfgKo88X33cvf0Kn\n=TT2A\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 77adb1d9d2fea3239480119a9e457da8788c33b9\nparent 3fb17d16a4838e132d0d6dbb08f91b7e7da691eb\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748977468 -0400\ncommitter GitHub <noreply@github.com> 1748977468 -0400\n\n[Flight] Track the function name that was called for I/O entries (#33392)\n\nStacked on #33390.\n\nThe stack trace doesn't include the thing you called when calling into\nignore listed content. We consider the ignore listed content\nconceptually the abstraction that you called that's interesting.\n\nThis extracts the name of the first ignore listed function that was\ncalled from user space. For example `\"fetch\"`. So we can know what kind\nof request this is.\n\nThis could be enhanced and tweaked with heuristics in the future. For\nexample, when you create a Promise yourself and call I/O inside of it\nlike my `delay` examples, then we use that Promise as the I/O node but\nits stack doesn't have the actual I/O performed. It might be better to\nuse the inner I/O node in that case. E.g. `setTimeout`. Currently I pick\nthe name from the first party code instead - in my example `delay`.\n\nAnother case that could be improved is the case where your whole\ncomponent is third-party. In that case we still log the I/O but it has\nno context about what kind of I/O since the whole stack is ignored it\njust gets the component name for example. We could for example look at\nthe first name that is in a different package than the package name of\nthe ignored listed component. So if\n`node_modules/my-component-library/index.js` calls into\n`node_modules/mysql/connection.js` then we could use the name from the\ninner.",
                "verified_at": "2025-06-03T19:04:30Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/65a46c7eebb731ba5c1602afef87365491beb75d",
        "html_url": "https://github.com/facebook/react/commit/65a46c7eebb731ba5c1602afef87365491beb75d",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/65a46c7eebb731ba5c1602afef87365491beb75d/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "3fb17d16a4838e132d0d6dbb08f91b7e7da691eb",
                "url": "https://api.github.com/repos/facebook/react/commits/3fb17d16a4838e132d0d6dbb08f91b7e7da691eb",
                "html_url": "https://github.com/facebook/react/commit/3fb17d16a4838e132d0d6dbb08f91b7e7da691eb"
            }
        ]
    },
    {
        "sha": "3fb17d16a4838e132d0d6dbb08f91b7e7da691eb",
        "node_id": "C_kwDOAJy2KtoAKDNmYjE3ZDE2YTQ4MzhlMTMyZDBkNmRiYjA4ZjkxYjdlN2RhNjkxZWI",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-03T18:16:34Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T18:16:34Z"
            },
            "message": "[Flight] Encode ReactIOInfo as its own row type (#33390)\n\nStacked on #33388.\n\nThis encodes the I/O entries as their own row type (`\"J\"`). This makes\nit possible to parse them directly without first parsing the debug info\nfor each component. E.g. if you're just interested in logging the I/O\nwithout all the places it was awaited.\n\nThis is not strictly necessary since the debug info is also readily\navailable without parsing the actual trees. (That's how the Server\nComponents Performance Track works.) However, we might want to exclude\nthis information in profiling builds while retaining some limited form\nof I/O tracking.\n\nIt also allows for logging side-effects that are not awaited if we\nwanted to.",
            "tree": {
                "sha": "7885f8a759273d63d1142479d13aced421cdc897",
                "url": "https://api.github.com/repos/facebook/react/git/trees/7885f8a759273d63d1142479d13aced421cdc897"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/3fb17d16a4838e132d0d6dbb08f91b7e7da691eb",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoPzwCCRC1aQ7uu5UhlAAAfAoQAADPgLwBiobs8oy8n2gCYk9H\nmnG6Nqi2qhA5oyqzXdX1ah1cb2WJFxIolm/XjRp1J5ECaoRgUhe4N8AFu5wQqMJs\nyhc9R+dRcjlsjYJLxuqtm1myUmUCn+rqPwl/Q6Fea/6kmaLyZgcxVmQlECz7oJqP\nUi2qkKqjoT4LftbGN0BZuZl6IFrPJMg9OKfBjxHgFFqE8c6nWG9cZptVz6ZnEBhe\n27bZLUlHgv0kmmf0IqZN1W0h32LH7mLolojebeA78mFud1V7IkXNrGcquENOKtny\nn+iVX/MyvA1B7lpwjpXO915w4LB4oOKoY0oKrWYyjIRZzy/1uNOvkHofcP15rgCJ\naqvRep/cSnNXKnJKdyrZcW/Tx7P9k8OhZLfOkswAlrC4t2/q5X8v0iJRI/CBTeNE\nhKK8fvZuLNAYrVto8e48X3Os9m6KWIXbxh69zoe3B5F4CUKROV/DbXjccuqiCkPi\n0QZTeKWP0+dOglaGYwyPK+L87VoEqdLAiiWvIVGwkAKHlkB4qC0puE79RBT6/fNn\nRopSRumEibgUXcxYU7khrUyxbL2IU0D0ayTfYpOtNAC9sytHNFChlMv9XNcEpoy1\nuITTFyhsqs8XLCInr5ZaLFlsl0Ggzm6kqcHKpyPS1fPUenyQssSFqfQ6PJ4DI5CX\nBZaVEcW8CiWPxH53OcW6\n=kN2t\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 7885f8a759273d63d1142479d13aced421cdc897\nparent acee65d6d031697ab8c71932a5b028351cbc3b03\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748974594 -0400\ncommitter GitHub <noreply@github.com> 1748974594 -0400\n\n[Flight] Encode ReactIOInfo as its own row type (#33390)\n\nStacked on #33388.\n\nThis encodes the I/O entries as their own row type (`\"J\"`). This makes\nit possible to parse them directly without first parsing the debug info\nfor each component. E.g. if you're just interested in logging the I/O\nwithout all the places it was awaited.\n\nThis is not strictly necessary since the debug info is also readily\navailable without parsing the actual trees. (That's how the Server\nComponents Performance Track works.) However, we might want to exclude\nthis information in profiling builds while retaining some limited form\nof I/O tracking.\n\nIt also allows for logging side-effects that are not awaited if we\nwanted to.",
                "verified_at": "2025-06-03T18:16:36Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/3fb17d16a4838e132d0d6dbb08f91b7e7da691eb",
        "html_url": "https://github.com/facebook/react/commit/3fb17d16a4838e132d0d6dbb08f91b7e7da691eb",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/3fb17d16a4838e132d0d6dbb08f91b7e7da691eb/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "acee65d6d031697ab8c71932a5b028351cbc3b03",
                "url": "https://api.github.com/repos/facebook/react/commits/acee65d6d031697ab8c71932a5b028351cbc3b03",
                "html_url": "https://github.com/facebook/react/commit/acee65d6d031697ab8c71932a5b028351cbc3b03"
            }
        ]
    },
    {
        "sha": "acee65d6d031697ab8c71932a5b028351cbc3b03",
        "node_id": "C_kwDOAJy2KtoAKGFjZWU2NWQ2ZDAzMTY5N2FiOGM3MTkzMmE1YjAyODM1MWNiYzNiMDM",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-03T18:14:40Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T18:14:40Z"
            },
            "message": "[Flight] Track Awaits on I/O as Debug Info (#33388)\n\nThis lets us track what data each Server Component depended on. This\nwill be used by Performance Track and React DevTools.\n\nWe use Node.js `async_hooks`. This has a number of downside. It is\nNode.js specific so this feature is not available in other runtimes\nuntil something equivalent becomes available. It's [discouraged by\nNode.js docs](https://nodejs.org/api/async_hooks.html#async-hooks). It's\nalso slow which makes this approach only really viable in development\nmode. At least with stack traces. However, it's really the only solution\nthat gives us the data that we need.\n\nThe [Diagnostic\nChannel](https://nodejs.org/api/diagnostics_channel.html) API is not\nsufficient. Not only is many Node.js built-in APIs missing but all\nlibraries like databases are also missing. Were as `async_hooks` covers\npretty much anything async in the Node.js ecosystem.\n\nHowever, even if coverage was wider it's not actually showing the\ninformation we want. It's not enough to show the low level I/O that is\nhappening because that doesn't provide the context. We need the stack\ntrace in user space code where it was initiated and where it was\nawaited. It's also not each low level socket operation that we want to\nsurface but some higher level concept which can span a sequence of I/O\noperations but as far as user space is concerned.\n\nTherefore this solution is anchored on stack traces and ignore listing\nto determine what the interesting span is. It is somewhat\nPromise-centric (and in particular async/await) because it allows us to\nmodel an abstract span instead of just random I/O. Async/await points\nare also especially useful because this allows Async Stacks to show the\nfull sequence which is not supported by random callbacks. However, if no\nPromises are involved we still to our best to show the stack causing\nplain I/O callbacks.\n\nAdditionally, we don't want to track all possible I/O. For example,\nside-effects like logging that doesn't affect the rendering performance\ndoesn't need to be included. We only want to include things that\nactually block the rendering output. We also need to track which data\nblocks each component so that we can track which data caused a\nparticular subtree to suspend.\n\nWe can do this using `async_hooks` because we can track the graph of\nwhat resolved what and then spawned what.\n\nTo track what suspended what, something has to resolve. Therefore it\nneeds to run to completion before we can show what it was suspended on.\nSo something that never resolves, won't be tracked for example.\n\nWe use the `async_hooks` in `ReactFlightServerConfigDebugNode` to build\nup an `ReactFlightAsyncSequence` graph that collects the stack traces\nfor basically all I/O and Promises allocated in the whole app. This is\npretty heavy, especially the stack traces, but it's because we don't\nknow which ones we'll need until they resolve. We don't materialize the\nstacks until we need them though.\n\nOnce they end up pinging the Flight runtime, we collect which current\nexecuting task that pinged the runtime and then log the sequence that\nled up until that runtime into the RSC protocol. Currently we only\ninclude things that weren't already resolved before we started rendering\nthis task/component, so that we don't log the entire history each time.\n\nEach operation is split into two parts. First a `ReactIOInfo` which\nrepresents an I/O operation and its start/end time. Basically the start\npoint where it was start. This is basically represents where you called\n`new Promise()` or when entering an `async function` which has an\nimplied Promise. It can be started in a different component than where\nit's awaited and it can be awaited in multiple places. Therefore this is\nglobal information and not associated with a specific Component.\n\nThe second part is `ReactAsyncInfo`. This represents where this I/O was\n`await`:ed or `.then()` called. This is associated with a point in the\ntree (usually the Promise that's a direct child of a Component). Since\nyou can have multiple different I/O awaited in a sequence technically it\nforms a dependency graph but to simplify the model these awaits as\nflattened into the `ReactDebugInfo` list. Basically it contains each\nawait in a sequence that affected this part from unblocking.\n\nThis means that the same `ReactAsyncInfo` can appear in mutliple\ncomponents if they all await the same `ReactIOInfo` but the same Promise\nonly appears once.\n\nPromises that are only resolved by other Promises or immediately are not\nconsidered here. Only if they're resolved by an I/O operation. We pick\nthe Promise basically on the border between user space code and ignored\nlisted code (`node_modules`) to pick the most specific span but abstract\nenough to not give too much detail irrelevant to the current audience.\nSimilarly, the deepest `await` in user space is marked as the relevant\n`await` point.\n\nThis feature is only available in the `node` builds of React. Not if you\nuse the `edge` builds inside of Node.js.\n\n---------\n\nCo-authored-by: Sebastian \"Sebbie\" Silbermann <silbermann.sebastian@gmail.com>",
            "tree": {
                "sha": "7e8f1c4959c9fa60f102f094e17de6bdde8ac284",
                "url": "https://api.github.com/repos/facebook/react/git/trees/7e8f1c4959c9fa60f102f094e17de6bdde8ac284"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/acee65d6d031697ab8c71932a5b028351cbc3b03",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoPzuQCRC1aQ7uu5UhlAAA/YQQAISd8vhGeAUcSZ7Z5ttxm6RN\nO9iZf5zECuJ4ZHqw2mL7nPQD1T3ciTlOVtgz6N7pclr+LhnhiIGx05yJlICVtV8p\nZL7Cs+IILvBIY4Y7vHGrS/XtaANU8/fm0ZtBy6yMsDLW0kuXrEqrkYBj+nYZ0f1B\n+69HAyWW1SOhi8QcYoRjqKrTQCMBTpQpuOEKOvCcy8XRTJzogsUNc/GKGNekiLd8\nqMRPi+u1wT9gq2KfuwREr1WOaVuuKZkAE4YPrdvhJH813GUCY2zW4aUZ84eWreWr\nG83F3CcUvS57c34Qe2nbxasC2XWwb9/ieWxfbgWVq/Ds0wzopd5o5wSafEIcPwOe\nlSQOQWPXpEsK9SmYNlhYTIt8YArxWJyrf+j6g4xJCV96l9lVQAHwRxrWYb+6UmAr\nawvPw1t/4+dDGs06hODCHlf8ir6jHf6nma9iSpRf3S2XwyL7U3lTj+wbT/JVOE/w\nUkkI7az+ijHiOrvb3TumRh1Yi2Sne8173beYv7qLnrj8IfgTijd5TgN2MEaF43MS\nDr0nvL3BmX1rymKyeZw8l1C7kZ+f1hoQiQkBPf6wlGAuK1oz+rgcSKpkt9PjWjtc\nKXq2GKBt4hlThYnV4NfJ6Em/2OIJK9xsqWlXJoK2/UWUAcIBv2gIOlmDMU7PL8oj\nVZfDSWbkCQNqeFGVI68S\n=S3ey\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 7e8f1c4959c9fa60f102f094e17de6bdde8ac284\nparent 1ae0a845bde5b95dfc319cadf366cb7b3fb1ca92\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748974480 -0400\ncommitter GitHub <noreply@github.com> 1748974480 -0400\n\n[Flight] Track Awaits on I/O as Debug Info (#33388)\n\nThis lets us track what data each Server Component depended on. This\nwill be used by Performance Track and React DevTools.\n\nWe use Node.js `async_hooks`. This has a number of downside. It is\nNode.js specific so this feature is not available in other runtimes\nuntil something equivalent becomes available. It's [discouraged by\nNode.js docs](https://nodejs.org/api/async_hooks.html#async-hooks). It's\nalso slow which makes this approach only really viable in development\nmode. At least with stack traces. However, it's really the only solution\nthat gives us the data that we need.\n\nThe [Diagnostic\nChannel](https://nodejs.org/api/diagnostics_channel.html) API is not\nsufficient. Not only is many Node.js built-in APIs missing but all\nlibraries like databases are also missing. Were as `async_hooks` covers\npretty much anything async in the Node.js ecosystem.\n\nHowever, even if coverage was wider it's not actually showing the\ninformation we want. It's not enough to show the low level I/O that is\nhappening because that doesn't provide the context. We need the stack\ntrace in user space code where it was initiated and where it was\nawaited. It's also not each low level socket operation that we want to\nsurface but some higher level concept which can span a sequence of I/O\noperations but as far as user space is concerned.\n\nTherefore this solution is anchored on stack traces and ignore listing\nto determine what the interesting span is. It is somewhat\nPromise-centric (and in particular async/await) because it allows us to\nmodel an abstract span instead of just random I/O. Async/await points\nare also especially useful because this allows Async Stacks to show the\nfull sequence which is not supported by random callbacks. However, if no\nPromises are involved we still to our best to show the stack causing\nplain I/O callbacks.\n\nAdditionally, we don't want to track all possible I/O. For example,\nside-effects like logging that doesn't affect the rendering performance\ndoesn't need to be included. We only want to include things that\nactually block the rendering output. We also need to track which data\nblocks each component so that we can track which data caused a\nparticular subtree to suspend.\n\nWe can do this using `async_hooks` because we can track the graph of\nwhat resolved what and then spawned what.\n\nTo track what suspended what, something has to resolve. Therefore it\nneeds to run to completion before we can show what it was suspended on.\nSo something that never resolves, won't be tracked for example.\n\nWe use the `async_hooks` in `ReactFlightServerConfigDebugNode` to build\nup an `ReactFlightAsyncSequence` graph that collects the stack traces\nfor basically all I/O and Promises allocated in the whole app. This is\npretty heavy, especially the stack traces, but it's because we don't\nknow which ones we'll need until they resolve. We don't materialize the\nstacks until we need them though.\n\nOnce they end up pinging the Flight runtime, we collect which current\nexecuting task that pinged the runtime and then log the sequence that\nled up until that runtime into the RSC protocol. Currently we only\ninclude things that weren't already resolved before we started rendering\nthis task/component, so that we don't log the entire history each time.\n\nEach operation is split into two parts. First a `ReactIOInfo` which\nrepresents an I/O operation and its start/end time. Basically the start\npoint where it was start. This is basically represents where you called\n`new Promise()` or when entering an `async function` which has an\nimplied Promise. It can be started in a different component than where\nit's awaited and it can be awaited in multiple places. Therefore this is\nglobal information and not associated with a specific Component.\n\nThe second part is `ReactAsyncInfo`. This represents where this I/O was\n`await`:ed or `.then()` called. This is associated with a point in the\ntree (usually the Promise that's a direct child of a Component). Since\nyou can have multiple different I/O awaited in a sequence technically it\nforms a dependency graph but to simplify the model these awaits as\nflattened into the `ReactDebugInfo` list. Basically it contains each\nawait in a sequence that affected this part from unblocking.\n\nThis means that the same `ReactAsyncInfo` can appear in mutliple\ncomponents if they all await the same `ReactIOInfo` but the same Promise\nonly appears once.\n\nPromises that are only resolved by other Promises or immediately are not\nconsidered here. Only if they're resolved by an I/O operation. We pick\nthe Promise basically on the border between user space code and ignored\nlisted code (`node_modules`) to pick the most specific span but abstract\nenough to not give too much detail irrelevant to the current audience.\nSimilarly, the deepest `await` in user space is marked as the relevant\n`await` point.\n\nThis feature is only available in the `node` builds of React. Not if you\nuse the `edge` builds inside of Node.js.\n\n---------\n\nCo-authored-by: Sebastian \"Sebbie\" Silbermann <silbermann.sebastian@gmail.com>",
                "verified_at": "2025-06-03T18:14:43Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/acee65d6d031697ab8c71932a5b028351cbc3b03",
        "html_url": "https://github.com/facebook/react/commit/acee65d6d031697ab8c71932a5b028351cbc3b03",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/acee65d6d031697ab8c71932a5b028351cbc3b03/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "1ae0a845bde5b95dfc319cadf366cb7b3fb1ca92",
                "url": "https://api.github.com/repos/facebook/react/commits/1ae0a845bde5b95dfc319cadf366cb7b3fb1ca92",
                "html_url": "https://github.com/facebook/react/commit/1ae0a845bde5b95dfc319cadf366cb7b3fb1ca92"
            }
        ]
    },
    {
        "sha": "1ae0a845bde5b95dfc319cadf366cb7b3fb1ca92",
        "node_id": "C_kwDOAJy2KtoAKDFhZTBhODQ1YmRlNWI5NWRmYzMxOWNhZGYzNjZjYjdiM2ZiMWNhOTI",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-03T15:30:17Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T15:30:17Z"
            },
            "message": "Use underscore instead of \u00ab \u00bb for useId algorithm (#33422)\n\nAlternative to #33421. The difference is that this also adds an\nunderscore between the \"R\" and the ID.\n\nThe reason we wanted to use special characters is because we use the\nfull spectrum of A-Z 0-9 in our ID generation so we can basically\ncollide with any common word (or anyone using a similar algorithm,\nbase64 or even base16). It's a little less likely that someone would put\n`_R_` specifically unless you generate like two IDs separated by\nunderscore.\n\n\n![9w2ogt](https://github.com/user-attachments/assets/21b2d2ac-1a3a-4657-ba0b-1616e49dfdee)",
            "tree": {
                "sha": "c77d5a5e3dbfdb497878bcaad1637671d1263127",
                "url": "https://api.github.com/repos/facebook/react/git/trees/c77d5a5e3dbfdb497878bcaad1637671d1263127"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/1ae0a845bde5b95dfc319cadf366cb7b3fb1ca92",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoPxUJCRC1aQ7uu5UhlAAAOogQAI2hKDugxMR0x4JR+xmuwa/k\nYd8ofMATP9lhFc4kbrSnuNUdZ3PFOjNzXxf+lt5qy0Js2lRMauS2qhtCUDJVS3Pe\ngyQJGHWzbxeRaItSsp8oBmOKPJZSrrupxEMzXFgHB8myJ7vT5BfE/GsYlnZ8DFnI\nwxTScJ35w3a2XE1EyenDGNhGUKt5tYSlYOMJ648Jy2SRHJcrhwstGeFS5i7Tc/FJ\nB5y+8NQxpoActmKhbZiv42fXw/3OjMo/bgnXfbw1zo6wJV5jVW2cv5PM1RQrpS1d\nJaAdK7hDAMDKQTL9cGEZlaPNKcE0QrEleoSjgvQyeLDO6gvBwYHNm7ZZ9S+n0RtK\nfwb7sscMrWr9oE0NGUrgZpP7boywFNTnU7e26ZbCMfiookXBKDA9A6uqq7lmAoH3\nczNPdWnZrC0wslR4HNztgNGGDAoUbvCRbzlomXdZefz+NYPMm+4FROBRAXHGcEsQ\nTMEqEn9sMnHMhfcoThLS2/hvVWqQxt/qD2pOfjvGKat/dGp/nIA+0sZKKyOVx2ry\n29GH9enOv+Kr+gJAY3UenOff6Vf7wq/cSrmjq+eTITEeazPYAXKNQbKnhLZRQ3EZ\n7mn8m3bklQlrKlfBHz+C97mqxmYj5dy3LLyLMO5nCH9wGyvT3/jwWyXFdWTVeH1T\nuZiw5xrk9axY3dDU5d4/\n=8GS2\n-----END PGP SIGNATURE-----\n",
                "payload": "tree c77d5a5e3dbfdb497878bcaad1637671d1263127\nparent 2b4064eb9b40f65d20a03ce93b246ad762d562e6\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748964617 -0400\ncommitter GitHub <noreply@github.com> 1748964617 -0400\n\nUse underscore instead of \u00ab \u00bb for useId algorithm (#33422)\n\nAlternative to #33421. The difference is that this also adds an\nunderscore between the \"R\" and the ID.\n\nThe reason we wanted to use special characters is because we use the\nfull spectrum of A-Z 0-9 in our ID generation so we can basically\ncollide with any common word (or anyone using a similar algorithm,\nbase64 or even base16). It's a little less likely that someone would put\n`_R_` specifically unless you generate like two IDs separated by\nunderscore.\n\n\n![9w2ogt](https://github.com/user-attachments/assets/21b2d2ac-1a3a-4657-ba0b-1616e49dfdee)",
                "verified_at": "2025-06-03T15:30:19Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/1ae0a845bde5b95dfc319cadf366cb7b3fb1ca92",
        "html_url": "https://github.com/facebook/react/commit/1ae0a845bde5b95dfc319cadf366cb7b3fb1ca92",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/1ae0a845bde5b95dfc319cadf366cb7b3fb1ca92/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "2b4064eb9b40f65d20a03ce93b246ad762d562e6",
                "url": "https://api.github.com/repos/facebook/react/commits/2b4064eb9b40f65d20a03ce93b246ad762d562e6",
                "html_url": "https://github.com/facebook/react/commit/2b4064eb9b40f65d20a03ce93b246ad762d562e6"
            }
        ]
    },
    {
        "sha": "2b4064eb9b40f65d20a03ce93b246ad762d562e6",
        "node_id": "C_kwDOAJy2KtoAKDJiNDA2NGViOWI0MGY2NWQyMGEwM2NlOTNiMjQ2YWQ3NjJkNTYyZTY",
        "commit": {
            "author": {
                "name": "Jorge Cabiedes",
                "email": "57368278+jorge-cab@users.noreply.github.com",
                "date": "2025-06-03T04:42:34Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T04:42:34Z"
            },
            "message": "[mcp] Add MCP tool to print out the component tree of the currently open React App (#33305)\n\n## Summary\n\nThis tool leverages DevTools to get the component tree from the\ncurrently open React App. This gives realtime information to agents\nabout the state of the app.\n\n## How did you test this change?\n\nTested integration with Claude Desktop",
            "tree": {
                "sha": "cec5492164ec22d979ca32be846e0b274225ce1d",
                "url": "https://api.github.com/repos/facebook/react/git/trees/cec5492164ec22d979ca32be846e0b274225ce1d"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/2b4064eb9b40f65d20a03ce93b246ad762d562e6",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoPn06CRC1aQ7uu5UhlAAACMAQABi/maTN5ikpWIuyXWY07n3w\njNbsMKeEaeGcLFHu11FbfjUSuUgHgacq9KVE5zc/3Z1hw4U11VRTEw3fFFqwjUEs\neHL7b5Gh2snBV73v2BshpWIKdAs8zuDoO7FNl5tv/WpTAvkRHg9UwcnOZRfnVyud\nITJcP8DvXdkbiys8FFlw7okVqQYHzdZgo+7IGPri7Rx37uSxPhgeruKPswOTPgtJ\nmQSaQh7eFfncZdKkJkjP0cv7oRitznhFOfvTDeoTJQTTyYEfHYVuG+iMEmkWbppJ\ny219FvC8KJ4wQuRPH4OP+x0hioAN2kjRd4m6E/ZH9aj7bAny2+T2une9DQpTEwit\nywlTYwaODTQRkSpyk4cgjcYT2h+56VYla8PLRFn8pBaHWj6oh9Tzhn5oitm8u9q4\nCD9JXrBjqVIoXXaBwy5RzzPtH1gpAyV/A3kJBGEN57CduqaUPNyhvtOyNOGK57em\nxBfHsemMEQnDfHk6BS2bwZ6Ut3I0H/R3GTBLCRk6o3LhWYZShSU6cK2OQGMI1li0\n+P26ZgFP8GlQFAk4PbyWGvyRlbmLUWIP4AiWyB+ZA/0VZAXynaQwevqAM3X6EfH/\npPeQcjZlkHRzLv7Ib1OQOBNs5A0Z9F8UraM7Zn3wOBCvHfK5EgIGC3BobqZwEDXF\nS/dYXMavQjlF89SVdS2Z\n=eesN\n-----END PGP SIGNATURE-----\n",
                "payload": "tree cec5492164ec22d979ca32be846e0b274225ce1d\nparent 3531b2672955285c0a59f84be06ac92b0d987a3e\nauthor Jorge Cabiedes <57368278+jorge-cab@users.noreply.github.com> 1748925754 -0700\ncommitter GitHub <noreply@github.com> 1748925754 -0700\n\n[mcp] Add MCP tool to print out the component tree of the currently open React App (#33305)\n\n## Summary\n\nThis tool leverages DevTools to get the component tree from the\ncurrently open React App. This gives realtime information to agents\nabout the state of the app.\n\n## How did you test this change?\n\nTested integration with Claude Desktop",
                "verified_at": "2025-06-03T04:42:36Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/2b4064eb9b40f65d20a03ce93b246ad762d562e6",
        "html_url": "https://github.com/facebook/react/commit/2b4064eb9b40f65d20a03ce93b246ad762d562e6",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/2b4064eb9b40f65d20a03ce93b246ad762d562e6/comments",
        "author": {
            "login": "jorge-cab",
            "id": 57368278,
            "node_id": "MDQ6VXNlcjU3MzY4Mjc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/57368278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jorge-cab",
            "html_url": "https://github.com/jorge-cab",
            "followers_url": "https://api.github.com/users/jorge-cab/followers",
            "following_url": "https://api.github.com/users/jorge-cab/following{/other_user}",
            "gists_url": "https://api.github.com/users/jorge-cab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jorge-cab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jorge-cab/subscriptions",
            "organizations_url": "https://api.github.com/users/jorge-cab/orgs",
            "repos_url": "https://api.github.com/users/jorge-cab/repos",
            "events_url": "https://api.github.com/users/jorge-cab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jorge-cab/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "3531b2672955285c0a59f84be06ac92b0d987a3e",
                "url": "https://api.github.com/repos/facebook/react/commits/3531b2672955285c0a59f84be06ac92b0d987a3e",
                "html_url": "https://github.com/facebook/react/commit/3531b2672955285c0a59f84be06ac92b0d987a3e"
            }
        ]
    },
    {
        "sha": "3531b2672955285c0a59f84be06ac92b0d987a3e",
        "node_id": "C_kwDOAJy2KtoAKDM1MzFiMjY3Mjk1NTI4NWMwYTU5Zjg0YmUwNmFjOTJiMGQ5ODdhM2U",
        "commit": {
            "author": {
                "name": "Ricky",
                "email": "rickhanlonii@gmail.com",
                "date": "2025-06-03T04:00:28Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T04:00:28Z"
            },
            "message": "[scripts] Switch back to flow parser for prettier (#33414)\n\nPrettier 3.3 (which we're on) should support modern flow features\naccording to https://prettier.io/blog/2024/06/01/3.3.0",
            "tree": {
                "sha": "9e3a3a8d38759ed87d648769f3add279a7e52523",
                "url": "https://api.github.com/repos/facebook/react/git/trees/9e3a3a8d38759ed87d648769f3add279a7e52523"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/3531b2672955285c0a59f84be06ac92b0d987a3e",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoPnNcCRC1aQ7uu5UhlAAAyGgQAC1ugg6cvPmiHRifP3h5y/6H\ntYC+kaDpYnUM40zyGaIpaYywNQ9lnL0ihbyXf/DHM7M07Mm/9RYOQ6ZdnIaNrSQb\nOhft3Z5oYvsNwG1Z37ijodAdVMsCDagdnnAStviF4iSQYO9pV6H63YksXNebnXUm\nf3qp4OGGw52qOORZK1FenU5YdbEIklxyTcSw0Ysw4GlQCvwJs5RQDT25biXa5rIv\ndNLg5+C/aAhzK+8mh01RRHjtNIvee/lsc5eG+nt0kd2s7I4AiUNvMMAfOMQ+dw/o\nIrUTFYA6q9G1QkCfU+bPSjliv+yoisgQDRSwKoe6KTk+gSKLxAI7p/e2j893oPXj\nJv3xIDhW3aarLtM+h1Lx3OOdzzdvmBxMBVmCXe2t5qMvIOq2PN9iTZOkBkrOwXtR\npbMC+N0RGQkiETMz6Vyc8uJglLPnEJi0zGIWRr2Lkhm5Z95HVLrWtIcpfG/8M3rY\nUpQ1j38d6yvcX3ssBPW+f5+Gq7hEX0MPM+pl3gTaJIC9GtxRyQYZ+zYNQ74JlxeZ\nXnFRkvdh1fF3k05zaDDcYR8CmW3NlV2R4RR5IVqaGsEiAqOaq4YLu0mPRW/05975\nVZQDcaE/Kjm4kF0J4iOytD4XypvXR47alq/WnYQhtHjlxIQ8T1QGBJwURDvsgUcX\n29nfZInsBB0V2BVsS8CN\n=0lno\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 9e3a3a8d38759ed87d648769f3add279a7e52523\nparent 4a1f29079ccc61659e026bbcf205bc8d53780927\nauthor Ricky <rickhanlonii@gmail.com> 1748923228 -0400\ncommitter GitHub <noreply@github.com> 1748923228 -0400\n\n[scripts] Switch back to flow parser for prettier (#33414)\n\nPrettier 3.3 (which we're on) should support modern flow features\naccording to https://prettier.io/blog/2024/06/01/3.3.0",
                "verified_at": "2025-06-03T04:00:31Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/3531b2672955285c0a59f84be06ac92b0d987a3e",
        "html_url": "https://github.com/facebook/react/commit/3531b2672955285c0a59f84be06ac92b0d987a3e",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/3531b2672955285c0a59f84be06ac92b0d987a3e/comments",
        "author": {
            "login": "rickhanlonii",
            "id": 2440089,
            "node_id": "MDQ6VXNlcjI0NDAwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2440089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rickhanlonii",
            "html_url": "https://github.com/rickhanlonii",
            "followers_url": "https://api.github.com/users/rickhanlonii/followers",
            "following_url": "https://api.github.com/users/rickhanlonii/following{/other_user}",
            "gists_url": "https://api.github.com/users/rickhanlonii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rickhanlonii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rickhanlonii/subscriptions",
            "organizations_url": "https://api.github.com/users/rickhanlonii/orgs",
            "repos_url": "https://api.github.com/users/rickhanlonii/repos",
            "events_url": "https://api.github.com/users/rickhanlonii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rickhanlonii/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "4a1f29079ccc61659e026bbcf205bc8d53780927",
                "url": "https://api.github.com/repos/facebook/react/commits/4a1f29079ccc61659e026bbcf205bc8d53780927",
                "html_url": "https://github.com/facebook/react/commit/4a1f29079ccc61659e026bbcf205bc8d53780927"
            }
        ]
    }
]