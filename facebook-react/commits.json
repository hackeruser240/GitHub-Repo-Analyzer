[
    {
        "sha": "dddcae7a11b8241cbd6e2de55f9e68881baea458",
        "node_id": "C_kwDOAJy2KtoAKGRkZGNhZTdhMTFiODI0MWNiZDZlMmRlNTVmOWU2ODg4MWJhZWE0NTg",
        "commit": {
            "author": {
                "name": "Timothy Yung",
                "email": "yungsters@meta.com",
                "date": "2025-06-05T21:22:35Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-05T21:22:35Z"
            },
            "message": "Enable the `enableEagerAlternateStateNodeCleanup` Feature Flag (#33447)\n\n## Summary\n\nEnables the `enableEagerAlternateStateNodeCleanup` feature flag for all\nvariants, while maintaining the `__VARIANT__` for the internal React\nNative flavor for backtesting reasons.\n\n## How did you test this change?\n\n```\n$ yarn test\n```",
            "tree": {
                "sha": "4833846fdf26f0c3fa1cd023511cb4c224ae5e2b",
                "url": "https://api.github.com/repos/facebook/react/git/trees/4833846fdf26f0c3fa1cd023511cb4c224ae5e2b"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/dddcae7a11b8241cbd6e2de55f9e68881baea458",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQgqbCRC1aQ7uu5UhlAAAws4QAC1PwuuWRLlqZI1RGomYS4e5\no8+XZi4MJVF3DNQ1GNPxA653X5EeY5nEOPAJ3ndc8vFeslM7TsvJ/IY42r2Ja5vv\nn0g3tKVNOh4u6on0Htr62ZrzTvfCyQ0V/ZXoCdZbTxB0ErFPJJ8DgDgyjAOXGBUG\np3aS6g5Ywft5g3uMxLA5/2MPUC+YfvPVO+g78SAJ/HypHwlMbxC1A+PS8fNfrJgg\n2+POWQqX4L7VSDQgVZeIUg5CIXtWMhsOakZD207VllrV0RW3K6V7kcrcBAlpGwge\nTev9HyofLUDPH+Qu7vw0WGAmyoZUfNvA43ajS0TD78EklI4NT7ljiOXAPIfOpfnu\nnfUIL/iE7h8NgpI5tpNdzBU9mK/njQq7SOdL1dF+6/izIsL0UU5dujqrfZ1KIK6x\nq/ZrVhMKh/HUnM2cALb5RPmjDS0242NbRPHpnR6Zm7iQSWlnf21W8UMJ3f4BTD1A\nxd78iC51CaJ8OF85euYOpIq5CyMGXN/U6mZxOzpnoqOi81EKAFDiT/tGeT7ugR6o\naOQnUW7FuJiHA20NAwIORY8TzmtnaQ8aY/86slu2ML5ABJCvlUg79I3OcDFtasZt\nCzVv2DO4T9hF71jqW+0W8jIbcYp8FDThswxuogeQej5J2Akqu7ZCKSW8GFqrQmcG\ndJyGaRx16R91If1MUK0t\n=1y7G\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 4833846fdf26f0c3fa1cd023511cb4c224ae5e2b\nparent 43714eb4e970d0200fdc5eac887691df7fae53d5\nauthor Timothy Yung <yungsters@meta.com> 1749158555 -0700\ncommitter GitHub <noreply@github.com> 1749158555 -0700\n\nEnable the `enableEagerAlternateStateNodeCleanup` Feature Flag (#33447)\n\n## Summary\n\nEnables the `enableEagerAlternateStateNodeCleanup` feature flag for all\nvariants, while maintaining the `__VARIANT__` for the internal React\nNative flavor for backtesting reasons.\n\n## How did you test this change?\n\n```\n$ yarn test\n```",
                "verified_at": "2025-06-05T21:22:37Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/dddcae7a11b8241cbd6e2de55f9e68881baea458",
        "html_url": "https://github.com/facebook/react/commit/dddcae7a11b8241cbd6e2de55f9e68881baea458",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/dddcae7a11b8241cbd6e2de55f9e68881baea458/comments",
        "author": {
            "login": "yungsters",
            "id": 55161,
            "node_id": "MDQ6VXNlcjU1MTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/55161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yungsters",
            "html_url": "https://github.com/yungsters",
            "followers_url": "https://api.github.com/users/yungsters/followers",
            "following_url": "https://api.github.com/users/yungsters/following{/other_user}",
            "gists_url": "https://api.github.com/users/yungsters/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yungsters/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yungsters/subscriptions",
            "organizations_url": "https://api.github.com/users/yungsters/orgs",
            "repos_url": "https://api.github.com/users/yungsters/repos",
            "events_url": "https://api.github.com/users/yungsters/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yungsters/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "43714eb4e970d0200fdc5eac887691df7fae53d5",
                "url": "https://api.github.com/repos/facebook/react/commits/43714eb4e970d0200fdc5eac887691df7fae53d5",
                "html_url": "https://github.com/facebook/react/commit/43714eb4e970d0200fdc5eac887691df7fae53d5"
            }
        ]
    },
    {
        "sha": "43714eb4e970d0200fdc5eac887691df7fae53d5",
        "node_id": "C_kwDOAJy2KtoAKDQzNzE0ZWI0ZTk3MGQwMjAwZmRjNWVhYzg4NzY5MWRmN2ZhZTUzZDU",
        "commit": {
            "author": {
                "name": "Hendrik Liebau",
                "email": "mail@hendrik-liebau.de",
                "date": "2025-06-05T19:08:57Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-05T19:08:57Z"
            },
            "message": "Do not notify Discord for draft pull requests (#33446)\n\nWhen I added the `ready_for_review` event in #32344, no notifications\nfor opened draft PRs were sent due to some other condition. This is not\nthe case anymore, so we need to exclude draft PRs from triggering a\nnotification when the workflow is run because of an `opened` event. This\nevent is still needed because the `ready_for_review` event only fires\nwhen an existing draft PR is converted to a non-draft state. It does not\ntrigger for pull requests that are opened directly as ready-for-review.",
            "tree": {
                "sha": "c150b6226f1dd81a47c75be4241e7cae7411b94c",
                "url": "https://api.github.com/repos/facebook/react/git/trees/c150b6226f1dd81a47c75be4241e7cae7411b94c"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/43714eb4e970d0200fdc5eac887691df7fae53d5",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQetJCRC1aQ7uu5UhlAAA1e8QAKygKdHH40AAMDnbpDvR3JXw\n/r3m8h+01uLf4UcNd3K2PB8rsi5PWGh/u8okv37Qa28blz+5YaI9Ya3XF8Ok12LH\ndTJLvvNsxhf6kg9qB5FSJE4LPlGRsEEWpVxvJIkevkuUIf48/hv5kCSqovk0rd4z\nbTMJ7xDLh/ze5Y2wtR17rgogITn+kF7rsOleoOkhMYQ0l9d0AykW60xi6mceFmzp\n+JsAtuTWfqzE+GSrmtPaeKt3/oQDurP0CCsPT/h9YFKxrgVG0hnFq0xS7tBRZd+N\nCNFcmlcojL4QhsdYZ+UMWiQGnjfP7r3lP/ubdcYsRjPMKdKU4EYGO5EnYnJ77m/m\n9vTRYKJmLUNsdNwbnV0Vmj+Ses2cZoZTCxgfn5+DPdxWlVCu5bbfph3fxp6vzGbp\nZmM0x9+/vrgkG+rbMreqyFf9clmpGOEGwEDY+W5rX/2F2oZY3cGqgWFzW+YZzsmw\njLwSzBk5Xqc7VTesQo7fooB2d9XU63FO+K/qbYKfavyp5R5FAuSghK/ZOsiNwP4e\nmd23LHe4opHp6UJ5wkj6y1ItXTsoJvilMz8jy8CsBpyCTHUFunZTNUs21tiYO2mb\npPi4e/S3zgzHHQY/0vLEKd1UucW7BXqBCdk8odsNXbhAMatca6j9Gm+oOXiFqmVh\n8haaYCL6p8XLmZ9ylIea\n=dxJ1\n-----END PGP SIGNATURE-----\n",
                "payload": "tree c150b6226f1dd81a47c75be4241e7cae7411b94c\nparent a5110b22f0a02cb87cd2bca5dc4527c73e2f281b\nauthor Hendrik Liebau <mail@hendrik-liebau.de> 1749150537 +0200\ncommitter GitHub <noreply@github.com> 1749150537 -0400\n\nDo not notify Discord for draft pull requests (#33446)\n\nWhen I added the `ready_for_review` event in #32344, no notifications\nfor opened draft PRs were sent due to some other condition. This is not\nthe case anymore, so we need to exclude draft PRs from triggering a\nnotification when the workflow is run because of an `opened` event. This\nevent is still needed because the `ready_for_review` event only fires\nwhen an existing draft PR is converted to a non-draft state. It does not\ntrigger for pull requests that are opened directly as ready-for-review.",
                "verified_at": "2025-06-05T19:09:00Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/43714eb4e970d0200fdc5eac887691df7fae53d5",
        "html_url": "https://github.com/facebook/react/commit/43714eb4e970d0200fdc5eac887691df7fae53d5",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/43714eb4e970d0200fdc5eac887691df7fae53d5/comments",
        "author": {
            "login": "unstubbable",
            "id": 761683,
            "node_id": "MDQ6VXNlcjc2MTY4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/761683?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/unstubbable",
            "html_url": "https://github.com/unstubbable",
            "followers_url": "https://api.github.com/users/unstubbable/followers",
            "following_url": "https://api.github.com/users/unstubbable/following{/other_user}",
            "gists_url": "https://api.github.com/users/unstubbable/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/unstubbable/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/unstubbable/subscriptions",
            "organizations_url": "https://api.github.com/users/unstubbable/orgs",
            "repos_url": "https://api.github.com/users/unstubbable/repos",
            "events_url": "https://api.github.com/users/unstubbable/events{/privacy}",
            "received_events_url": "https://api.github.com/users/unstubbable/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "a5110b22f0a02cb87cd2bca5dc4527c73e2f281b",
                "url": "https://api.github.com/repos/facebook/react/commits/a5110b22f0a02cb87cd2bca5dc4527c73e2f281b",
                "html_url": "https://github.com/facebook/react/commit/a5110b22f0a02cb87cd2bca5dc4527c73e2f281b"
            }
        ]
    },
    {
        "sha": "a5110b22f0a02cb87cd2bca5dc4527c73e2f281b",
        "node_id": "C_kwDOAJy2KtoAKGE1MTEwYjIyZjBhMDJjYjg3Y2QyYmNhNWRjNDUyN2M3M2UyZjI4MWI",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-05T18:29:02Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-05T18:29:02Z"
            },
            "message": "[Flight] Add a Node.js Web Streams bundle for unbundled client/server for Webpack (#33442)\n\nLike #33441 but for Flight.\n\nThis is just one of the many combinations needed. I'm just starting with\none.",
            "tree": {
                "sha": "d51f0bea5adfa967c567e49bf1b4ff904e6c9778",
                "url": "https://api.github.com/repos/facebook/react/git/trees/d51f0bea5adfa967c567e49bf1b4ff904e6c9778"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/a5110b22f0a02cb87cd2bca5dc4527c73e2f281b",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQeHuCRC1aQ7uu5UhlAAAq7sQAEcK1ZDPZ6D1gWO6u89YWnPH\n4DaYKSDrB/JUXb/zDoUCuBuRbouP2W4bIEDoJBZRCzTeA8BHbk9ItdNSCEQFa8cB\nLZmiGdJiNYqEK+kl7pleIMhFaHJZY6XhacWPnWbWXToIT3altuXXDaaNn9yZ9KhK\nDSMzN5TTzHEPNoMNsrf22JeImgsrCqIf+AvrJ92b/9GOKX4yUoLHYJz2BpVq/qdj\nJ5LLKV1Lfao6FDRd4NmraNGevaoJdxt/hJD0wcwamFPfVztMRECV4gZB+T6A8j4W\nHjMiDxgnMDps8NRxO3wPtZPO5xOrBoqWee9MM/WH0UDE1JOfur19nhhtaHjStfVf\n22PsuV+6rL0CNiq204ZySg6RNx/DVsdktAcTl3G3peIuNqglWmbVzKYhfsJU/pWv\nG3rI6QmJhySgQXE/1YUXhhJVfn0F3zBSWjhj/5wQsbslAfTdVevmKu48LBSFevYA\nSQtF/AJwlmBotpMsJx2/2zhqFewvvr5hg9cpSq0cBoZZ4aV4erejx7jJvVvatLhv\n6HgP5b/qalIMbIFm8lTaT87UaE0lIlc2rr9uGRaEvo014efhpxPL8/QMlgLIA3kp\nFYx/sjR8eUQAmtNLjRsFP7B3nEq4DUosb1qp0t6xVm61koOh9u9wlxYY69XfDWID\nBVXAfMKEaMrxK0nwW+P2\n=AHAE\n-----END PGP SIGNATURE-----\n",
                "payload": "tree d51f0bea5adfa967c567e49bf1b4ff904e6c9778\nparent b4477d3800ccb0bdf26670cd1f021d094159c38f\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749148142 -0400\ncommitter GitHub <noreply@github.com> 1749148142 -0400\n\n[Flight] Add a Node.js Web Streams bundle for unbundled client/server for Webpack (#33442)\n\nLike #33441 but for Flight.\n\nThis is just one of the many combinations needed. I'm just starting with\none.",
                "verified_at": "2025-06-05T18:29:04Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/a5110b22f0a02cb87cd2bca5dc4527c73e2f281b",
        "html_url": "https://github.com/facebook/react/commit/a5110b22f0a02cb87cd2bca5dc4527c73e2f281b",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/a5110b22f0a02cb87cd2bca5dc4527c73e2f281b/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "b4477d3800ccb0bdf26670cd1f021d094159c38f",
                "url": "https://api.github.com/repos/facebook/react/commits/b4477d3800ccb0bdf26670cd1f021d094159c38f",
                "html_url": "https://github.com/facebook/react/commit/b4477d3800ccb0bdf26670cd1f021d094159c38f"
            }
        ]
    },
    {
        "sha": "b4477d3800ccb0bdf26670cd1f021d094159c38f",
        "node_id": "C_kwDOAJy2KtoAKGI0NDc3ZDM4MDBjY2IwYmRmMjY2NzBjZDFmMDIxZDA5NDE1OWMzOGY",
        "commit": {
            "author": {
                "name": "Hendrik Liebau",
                "email": "mail@hendrik-liebau.de",
                "date": "2025-06-05T15:19:54Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-05T15:19:54Z"
            },
            "message": "[Flight] Add a cached 3rd-party component to the Flight fixture (#33443)\n\nThis should allow us to visualize what\nhttps://github.com/facebook/react/pull/33438 is trying to convey.\n\nAn uncached 3rd-party component is displayed like this in the dev tools:\n\n<img width=\"1072\" alt=\"Screenshot 2025-06-05 at 12 57 32\"\nsrc=\"https://github.com/user-attachments/assets/d418ae23-d113-4dc9-98b8-ab426710454a\"\n/>\n\nHowever, when the component is restored from a cache, it looks like\nthis:\n\n<img width=\"1072\" alt=\"Screenshot 2025-06-05 at 12 56 56\"\nsrc=\"https://github.com/user-attachments/assets/a0e34379-d8c0-4b14-8b54-b5c06211232b\"\n/>\n\nThe `Server Components \u269b` track is missing completely here, and the\n`Loading profile...` phase also took way longer than without caching the\n3rd-party component.\n\nOn `main`, the `Server Components \u269b` track is not missing:\n\n<img width=\"1072\" alt=\"Screenshot 2025-06-05 at 14 31 20\"\nsrc=\"https://github.com/user-attachments/assets/c35e405d-27ca-4b04-a34c-03bd959a7687\"\n/>\n\nThe cached 3rd-party component starts before the current render, and is\nalso not excluded here, which is of course expected without #33438.",
            "tree": {
                "sha": "b2b4fc5be520cbd8109b1a558c03017eb1f6f2b8",
                "url": "https://api.github.com/repos/facebook/react/git/trees/b2b4fc5be520cbd8109b1a558c03017eb1f6f2b8"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b4477d3800ccb0bdf26670cd1f021d094159c38f",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQbWaCRC1aQ7uu5UhlAAASsoQAIA+Opy9MxoHqkcmNTYvZSo+\nqq8otlXHkTGLQqOheAoRb4GVD+Pe33d46sxiFy/fjEaw2be9Ej18g7lu8QOsYVcL\nO6DlOGlIo2SlcQCC0LalqhxsnBqBbMLwnEtsN3bODij7Tii597Okf16zZK9i9aD2\nm4FGbMKK+crEBa2OfbiUyr8SGgm1YOlhYChL9ymCZXUmMGqJpYIqa5pvFabBb/lr\nyUQFEqv1skLTLu6x9b9l8Zt91SOghk5QAmMWiIFN5EZx5w9EP81cpEr5VH+FOGdM\nlCpmdiH/0jimyfrK/fGQyCskusbB+IIHOetmiPM6+1l84dCGQJIU5EbvxxmI+gaC\nMCXPzn7EKQELLugK30WjTZkzn1JYtVLz6dqYrTb+3q1elHZdaD6SGVgim/VXsp/R\nkAi+z+PHXGHCeScOFPvAeDWiTd0WEKaLeCcexF4ZuMLzdqqiev1LB/92Me4mNsMW\n6J8wNSucHjub0ONmgXgkI/ReqGbMGZJQszlvQs54ITjAoBTfYwRRQZRt12VaRMHy\nKNsdhi+2zqvekHVfO6GlDlpPhl4jdMGdVW5f1jgxKP3QLYFdCn8wrs2z/89Xstr3\nFhPv+64WrZkPdwS1G4xnoZActKFinKKFVM6jfMN/hM5hdOFI0F3Pn34ZC6Ku15aQ\nH+fGLTvCr73x/7MmZooQ\n=GU15\n-----END PGP SIGNATURE-----\n",
                "payload": "tree b2b4fc5be520cbd8109b1a558c03017eb1f6f2b8\nparent 93f1668045b924294f5832d5044fa049cd7af16e\nauthor Hendrik Liebau <mail@hendrik-liebau.de> 1749136794 +0200\ncommitter GitHub <noreply@github.com> 1749136794 +0200\n\n[Flight] Add a cached 3rd-party component to the Flight fixture (#33443)\n\nThis should allow us to visualize what\nhttps://github.com/facebook/react/pull/33438 is trying to convey.\n\nAn uncached 3rd-party component is displayed like this in the dev tools:\n\n<img width=\"1072\" alt=\"Screenshot 2025-06-05 at 12 57 32\"\nsrc=\"https://github.com/user-attachments/assets/d418ae23-d113-4dc9-98b8-ab426710454a\"\n/>\n\nHowever, when the component is restored from a cache, it looks like\nthis:\n\n<img width=\"1072\" alt=\"Screenshot 2025-06-05 at 12 56 56\"\nsrc=\"https://github.com/user-attachments/assets/a0e34379-d8c0-4b14-8b54-b5c06211232b\"\n/>\n\nThe `Server Components \u269b` track is missing completely here, and the\n`Loading profile...` phase also took way longer than without caching the\n3rd-party component.\n\nOn `main`, the `Server Components \u269b` track is not missing:\n\n<img width=\"1072\" alt=\"Screenshot 2025-06-05 at 14 31 20\"\nsrc=\"https://github.com/user-attachments/assets/c35e405d-27ca-4b04-a34c-03bd959a7687\"\n/>\n\nThe cached 3rd-party component starts before the current render, and is\nalso not excluded here, which is of course expected without #33438.",
                "verified_at": "2025-06-05T15:19:56Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b4477d3800ccb0bdf26670cd1f021d094159c38f",
        "html_url": "https://github.com/facebook/react/commit/b4477d3800ccb0bdf26670cd1f021d094159c38f",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b4477d3800ccb0bdf26670cd1f021d094159c38f/comments",
        "author": {
            "login": "unstubbable",
            "id": 761683,
            "node_id": "MDQ6VXNlcjc2MTY4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/761683?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/unstubbable",
            "html_url": "https://github.com/unstubbable",
            "followers_url": "https://api.github.com/users/unstubbable/followers",
            "following_url": "https://api.github.com/users/unstubbable/following{/other_user}",
            "gists_url": "https://api.github.com/users/unstubbable/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/unstubbable/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/unstubbable/subscriptions",
            "organizations_url": "https://api.github.com/users/unstubbable/orgs",
            "repos_url": "https://api.github.com/users/unstubbable/repos",
            "events_url": "https://api.github.com/users/unstubbable/events{/privacy}",
            "received_events_url": "https://api.github.com/users/unstubbable/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "93f1668045b924294f5832d5044fa049cd7af16e",
                "url": "https://api.github.com/repos/facebook/react/commits/93f1668045b924294f5832d5044fa049cd7af16e",
                "html_url": "https://github.com/facebook/react/commit/93f1668045b924294f5832d5044fa049cd7af16e"
            }
        ]
    },
    {
        "sha": "93f1668045b924294f5832d5044fa049cd7af16e",
        "node_id": "C_kwDOAJy2KtoAKDkzZjE2NjgwNDViOTI0Mjk0ZjU4MzJkNTA0NGZhMDQ5Y2Q3YWYxNmU",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-05T14:50:41Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-05T14:50:41Z"
            },
            "message": "[Fizz] Add Node Web Streams bundle for SSR (#33441)\n\nWe highly recommend using Node Streams in Node.js because it's much\nfaster and it is less likely to cause issues when chained in things like\ncompression algorithms that need explicit flushing which the Web Streams\necosystem doesn't have a good solution for. However, that said, people\nwant to be able to use the worse option for various reasons.\n\nThe `.edge` builds aren't technically intended for Node.js. A Node.js\nenvironments needs to be patched in various ways to support it. It's\nalso less optimal since it can't use [Node.js exclusive\nfeatures](https://github.com/facebook/react/pull/33388) and have to use\n[the lowest common\ndenominator](https://github.com/facebook/react/pull/27399) such as JS\nimplementations instead of native.\n\nThis adds a Web Streams build of Fizz but exclusively for Node.js so\nthat in it we can rely on Node.js modules. The main difference compared\nto Edge is that SSR now uses `createHash` from the `\"crypto\"` module and\nimports `TextEncoder` from `\"util\"`. We use `setImmediate` instead of\n`setTimeout`.\n\nThe public API is just `react-dom/server` which in Node.js automatically\nimports `react-dom/server.node` which re-exports the legacy bundle, Node\nStreams bundle and Node Web Streams bundle. The main downside is if your\nbundler isn't smart to DCE this barrel file.\n\nWith Flight the difference is larger but that's a bigger lift.",
            "tree": {
                "sha": "9c113f7db67ae2378d66f31d565d200abecb691c",
                "url": "https://api.github.com/repos/facebook/react/git/trees/9c113f7db67ae2378d66f31d565d200abecb691c"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/93f1668045b924294f5832d5044fa049cd7af16e",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoQa7BCRC1aQ7uu5UhlAAAYrkQAKNJGYqNPHpN9CaDwm9A9Hpg\nfgpaazzjx1PzZRwK2Z4LBSehhn7lxhbhjKYq8tOZctkAY45D8rHe8O9ueLPLzTM0\nis1s5wjjjlDQtxewXniX/phT06SU3+H1UytLWv9hrXTZnGIF0jYX1hl+yWvTfJhC\nvivGLk3Y8zlD3ycvRIPCGeBRp4UupbtbRuwH/qZGALt63QnDGKiNpIUB2Q8Y4396\n4hIxfNglbPd5bx+7NmoU6u6b1ueFgoURZAE544XjyQXyVpJ1MM2CHPGNu8hCPPoM\nyyQZX2vLeCpijxaSwnHUmSDhRj6DoLsgrGI7/zaiwmHqcSUiE0qv5fO/MH2cV8LD\nsQOLb5GdAXYY2OnvBzCzLbl8blvoyzzmX0mLFco8Y6JkKAgTCVg/uQvPF+woyXKe\nQ2FCiV8L2OTOODE74o0GWse/p9sXDnlwh3uE/tOadrPmHbsqUekYeZxs3VIPn9Kq\nFWUR0sYwcC5sZOSQvJF2BD8CFXPPkGvubziEUD9jBVGfeLI+SjM+oDm+5sdXfQT5\nQ1R9dBzt/DVitfnolIDV66j6F4SUe/eUSI04A0ZqSKWC8nPqmq1VvMivjT3mssAQ\nrM6W1XKhBitlknQLmGOb7En82DLklsZ5tg1uFqs4DaDRppfIHXiCzlhwyUDwRyvg\nIVQ9u9JJzxX8SAqYV8au\n=LAM7\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 9c113f7db67ae2378d66f31d565d200abecb691c\nparent 37054867c15a7381abe0f73d98f3fecd06da52da\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749135041 -0400\ncommitter GitHub <noreply@github.com> 1749135041 -0400\n\n[Fizz] Add Node Web Streams bundle for SSR (#33441)\n\nWe highly recommend using Node Streams in Node.js because it's much\nfaster and it is less likely to cause issues when chained in things like\ncompression algorithms that need explicit flushing which the Web Streams\necosystem doesn't have a good solution for. However, that said, people\nwant to be able to use the worse option for various reasons.\n\nThe `.edge` builds aren't technically intended for Node.js. A Node.js\nenvironments needs to be patched in various ways to support it. It's\nalso less optimal since it can't use [Node.js exclusive\nfeatures](https://github.com/facebook/react/pull/33388) and have to use\n[the lowest common\ndenominator](https://github.com/facebook/react/pull/27399) such as JS\nimplementations instead of native.\n\nThis adds a Web Streams build of Fizz but exclusively for Node.js so\nthat in it we can rely on Node.js modules. The main difference compared\nto Edge is that SSR now uses `createHash` from the `\"crypto\"` module and\nimports `TextEncoder` from `\"util\"`. We use `setImmediate` instead of\n`setTimeout`.\n\nThe public API is just `react-dom/server` which in Node.js automatically\nimports `react-dom/server.node` which re-exports the legacy bundle, Node\nStreams bundle and Node Web Streams bundle. The main downside is if your\nbundler isn't smart to DCE this barrel file.\n\nWith Flight the difference is larger but that's a bigger lift.",
                "verified_at": "2025-06-05T14:50:44Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/93f1668045b924294f5832d5044fa049cd7af16e",
        "html_url": "https://github.com/facebook/react/commit/93f1668045b924294f5832d5044fa049cd7af16e",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/93f1668045b924294f5832d5044fa049cd7af16e/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "37054867c15a7381abe0f73d98f3fecd06da52da",
                "url": "https://api.github.com/repos/facebook/react/commits/37054867c15a7381abe0f73d98f3fecd06da52da",
                "html_url": "https://github.com/facebook/react/commit/37054867c15a7381abe0f73d98f3fecd06da52da"
            }
        ]
    },
    {
        "sha": "37054867c15a7381abe0f73d98f3fecd06da52da",
        "node_id": "C_kwDOAJy2KtoAKDM3MDU0ODY3YzE1YTczODFhYmUwZjczZDk4ZjNmZWNkMDZkYTUyZGE",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-04T04:49:03Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-04T04:49:03Z"
            },
            "message": "[Flight] Forward debugInfo from awaited instrumented Promises (#33415)\n\nStacked on #33403.\n\nWhen a Promise is coming from React such as when it's passed from\nanother environment, we should forward the debug information from that\nenvironment. We already do that when rendered as a child.\n\nThis makes it possible to also `await promise` and have the information\nfrom that instrumented promise carry through to the next render.\n\nThis is a bit tricky because the current protocol is that we have to\nread it from the Promise after it resolves so it has time to be assigned\nto the promise. `async_hooks` doesn't pass us the instance (even though\nit has it) when it gets resolved so we need to keep it around. However,\nwe have to be very careful because if we get this wrong it'll cause a\nmemory leak since we retain things by `asyncId` and then manually listen\nfor `destroy()` which can only be called once a Promise is GC:ed, which\nit can't be if we retain it. We have to therefore use a `WeakRef` in\ncase it never resolves, and then read the `_debugInfo` when it resolves.\nWe could maybe install a setter or something instead but that's also\nheavy.\n\nThe other issues is that we don't use native Promises in\nReactFlightClient so our instrumented promises aren't picked up by the\n`async_hooks` implementation and so we never get a handle to our\nthenable instance. To solve this we can create a native wrapper only in\nDEV.",
            "tree": {
                "sha": "7f615cb9286e4df04a3c0be38dfe9fcd5b00045f",
                "url": "https://api.github.com/repos/facebook/react/git/trees/7f615cb9286e4df04a3c0be38dfe9fcd5b00045f"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/37054867c15a7381abe0f73d98f3fecd06da52da",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoP9A/CRC1aQ7uu5UhlAAAas8QAHUYoto+zXJd7p6PEtbSbCam\nVLltDuG75ECsypMS8XUMgXKLlBFv50CBeAYSURcGas3b+zYCRCAUkQmR0rnwWVLk\nQkct06MHijXR2AkUt1Zz2d7XIOcZPN7R8wZsmVpw+V+szDAW5GPInQo0Df1AzUc4\niB05vl+E9kHaIu4mAq7Vh090f/kitGqNyVhFI7d3gnFu2k8A/xZYuG0gFwlEbtA5\nm5lhuNnfyV8CZ1Vn+dSsdNCtf62QqOLopfFLP0tpzXX4nlhmODX1BamrSUU8AYbr\n27YxS4eIJgffsKTvDUG6nvmFkIR6Sq6oLiJz4r1S9i+X3Ur4XWETl1ivsYffySk6\nm0mOwXtVWCGw3plXVzK/XslWNafBUopOwDcugJE0FwJWb7jH+MMTcXRITqNVrfs0\nq3RZOW/5uRbHOeALVUmIl0BrT5tpiXhvSlq9FipetK+a07HjuI49cSMGK2GyqtIh\nlNPfWfznfK6fs+hncS9Qrmf0Q1SEUo9E6AusLrl855gI1M16ttoD5ZIIEfD/fVVJ\n4+RrRclLyXdXGRrJDIVowSw59KCBFXGw2npUtmKI9e35x77pR43+D/E1el3Kp89i\n/CgU8afhi8kB8sMlKGEj2nIi93HZbNciO8+taHEUr3Q7tNeKHbiHofFLjwdASeI4\ndlBTmvZ3zXpFtqFmyRf2\n=8r4+\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 7f615cb9286e4df04a3c0be38dfe9fcd5b00045f\nparent d742611ce40545127032f4e221c78bf9f70eb437\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1749012543 -0400\ncommitter GitHub <noreply@github.com> 1749012543 -0400\n\n[Flight] Forward debugInfo from awaited instrumented Promises (#33415)\n\nStacked on #33403.\n\nWhen a Promise is coming from React such as when it's passed from\nanother environment, we should forward the debug information from that\nenvironment. We already do that when rendered as a child.\n\nThis makes it possible to also `await promise` and have the information\nfrom that instrumented promise carry through to the next render.\n\nThis is a bit tricky because the current protocol is that we have to\nread it from the Promise after it resolves so it has time to be assigned\nto the promise. `async_hooks` doesn't pass us the instance (even though\nit has it) when it gets resolved so we need to keep it around. However,\nwe have to be very careful because if we get this wrong it'll cause a\nmemory leak since we retain things by `asyncId` and then manually listen\nfor `destroy()` which can only be called once a Promise is GC:ed, which\nit can't be if we retain it. We have to therefore use a `WeakRef` in\ncase it never resolves, and then read the `_debugInfo` when it resolves.\nWe could maybe install a setter or something instead but that's also\nheavy.\n\nThe other issues is that we don't use native Promises in\nReactFlightClient so our instrumented promises aren't picked up by the\n`async_hooks` implementation and so we never get a handle to our\nthenable instance. To solve this we can create a native wrapper only in\nDEV.",
                "verified_at": "2025-06-04T04:49:05Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/37054867c15a7381abe0f73d98f3fecd06da52da",
        "html_url": "https://github.com/facebook/react/commit/37054867c15a7381abe0f73d98f3fecd06da52da",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/37054867c15a7381abe0f73d98f3fecd06da52da/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "d742611ce40545127032f4e221c78bf9f70eb437",
                "url": "https://api.github.com/repos/facebook/react/commits/d742611ce40545127032f4e221c78bf9f70eb437",
                "html_url": "https://github.com/facebook/react/commit/d742611ce40545127032f4e221c78bf9f70eb437"
            }
        ]
    },
    {
        "sha": "d742611ce40545127032f4e221c78bf9f70eb437",
        "node_id": "C_kwDOAJy2KtoAKGQ3NDI2MTFjZTQwNTQ1MTI3MDMyZjRlMjIxYzc4YmY5ZjcwZWI0Mzc",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-03T21:40:30Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T21:40:30Z"
            },
            "message": "Replace Implicit Options on SuspenseList with Explicit Options (#33424)\n\nWe want to change the defaults for `revealOrder` and `tail` on\nSuspenseList. This is an intermediate step to allow experimental users\nto upgrade.\n\nTo explicitly specify these options I added `revealOrder=\"independent\"`\nand `tail=\"visible\"`.\n\nI then added warnings if `undefined` or `null` is passed. You must now\nalways explicitly specify them. However, semantics are still preserved\nfor now until the next step.\n\nWe also want to change the rendering order of the `children` prop for\n`revealOrder=\"backwards\"`. As an intermediate step I first added\n`revealOrder=\"unstable_legacy-backwards\"` option. This will only be\ntemporary until all users can switch to the new `\"backwards\"` semantics\nonce we flip it in the next step.\n\nI also clarified the types that the directional props requires iterable\nchildren but not iterable inside of those. Rows with multiple items can\nbe modeled as explicit fragments.",
            "tree": {
                "sha": "bea72f535827b32a08cbea099293ba7a9a9f81d1",
                "url": "https://api.github.com/repos/facebook/react/git/trees/bea72f535827b32a08cbea099293ba7a9a9f81d1"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/d742611ce40545127032f4e221c78bf9f70eb437",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoP2vOCRC1aQ7uu5UhlAAAVdMQAAy0l1CIK3sOWV29th8zpahV\nhA8Wm64Mc55FCRS5BbdcFWBxG8d7R1I8xzoKU6cBdieIcTvF+70+EvU3TK9bd7RK\n1GwJapNsrrhyHKye2xvX0VgGaXNcTHc1HBrVedeYyDQ0/sgyxzLYlm9QjKAVzQQq\n2r0WElQZbEpKDrNy7DJoSXtfRDnWcCcYt3POtQMqVTpj6ub3bZa19mOEA2GGhFCQ\nQbqhA7f9JETyJAJ2VpHQrp7HcCZL/cfFTWZGvX24072dWh4XIwxiLSAR+JR/2rh9\n78EhtNHDO4MXrKDLHeOOk5RliGHU34z4mdRPaV2KfHfbJ7+65PmK9NIO/qQxUbII\nWS8hQ76VwZsgl+mSFy1ofexlxhd0BgsxkslkkjpaqDDtuykjl7yzKUdoLce2CGZM\npDBd3o8slx1waVegnNnAAmjCBRHS9TE3dkV0na7Jp1m+tZRMWvE088RkvXbQhs0y\nDj0pO68mIfh17WSPDEIoMDyATQDW1NNGQNW3BJQNrV9ju4m2SNXSA/0i/puyuicl\nBBn2f/wg+iTKaUltMaUo+3UCCcAMzpoXMHns30Ff5CgbBXoAxPNs+Y/CXpMXOlHV\nKZ2Yeon0gfyy4CHv8/suE37swx6TYkbjqysJyy3H7OFQUjRES1P3Ie48kVnH038y\n48nQIAUUq1lVOSslXNJY\n=H558\n-----END PGP SIGNATURE-----\n",
                "payload": "tree bea72f535827b32a08cbea099293ba7a9a9f81d1\nparent 154008172573d64519ebbc23da611a27073b0a8c\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748986830 -0400\ncommitter GitHub <noreply@github.com> 1748986830 -0400\n\nReplace Implicit Options on SuspenseList with Explicit Options (#33424)\n\nWe want to change the defaults for `revealOrder` and `tail` on\nSuspenseList. This is an intermediate step to allow experimental users\nto upgrade.\n\nTo explicitly specify these options I added `revealOrder=\"independent\"`\nand `tail=\"visible\"`.\n\nI then added warnings if `undefined` or `null` is passed. You must now\nalways explicitly specify them. However, semantics are still preserved\nfor now until the next step.\n\nWe also want to change the rendering order of the `children` prop for\n`revealOrder=\"backwards\"`. As an intermediate step I first added\n`revealOrder=\"unstable_legacy-backwards\"` option. This will only be\ntemporary until all users can switch to the new `\"backwards\"` semantics\nonce we flip it in the next step.\n\nI also clarified the types that the directional props requires iterable\nchildren but not iterable inside of those. Rows with multiple items can\nbe modeled as explicit fragments.",
                "verified_at": "2025-06-03T21:40:33Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/d742611ce40545127032f4e221c78bf9f70eb437",
        "html_url": "https://github.com/facebook/react/commit/d742611ce40545127032f4e221c78bf9f70eb437",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/d742611ce40545127032f4e221c78bf9f70eb437/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "154008172573d64519ebbc23da611a27073b0a8c",
                "url": "https://api.github.com/repos/facebook/react/commits/154008172573d64519ebbc23da611a27073b0a8c",
                "html_url": "https://github.com/facebook/react/commit/154008172573d64519ebbc23da611a27073b0a8c"
            }
        ]
    },
    {
        "sha": "154008172573d64519ebbc23da611a27073b0a8c",
        "node_id": "C_kwDOAJy2KtoAKDE1NDAwODE3MjU3M2Q2NDUxOWViYmMyM2RhNjExYTI3MDczYjBhOGM",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-03T21:30:31Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T21:30:31Z"
            },
            "message": "[Flight] Encode Async I/O Tasks using the Enclosing Line/Column (#33403)\n\nStacked on #33402.\n\nThere's a bug in Chrome Performance tracking which uses the enclosing\nline/column instead of the callsite in stacks.\n\nFor our fake eval:ed functions that represents functions on the server,\nwe can position the enclosing function body at the position of the\ncallsite to simulate getting the right line.\n\nUnfortunately, that doesn't give us exactly the right callsite when it's\nused for other purposes that uses the callsite like console logs and\nerror reporting and stacks inside breakpoints. So I don't think we want\nto always do this.\n\nFor ReactAsyncInfo/ReactIOInfo, the only thing we're going to use the\nfake task for is the Performance tracking, so it doesn't have any\ndownsides until Chrome fixes the bug and we'd have to revert it.\nTherefore this PR uses that techniques only for those entries.\n\nWe could do this for Server Components too but we're going to use those\nfor other things too like console logs. I don't think it's worth\nduplicating the Task objects. That would also make it inconsistent with\nClient Components.\n\nFor Client Components, we could in theory also generate fake evals but\nthat would be way slower since there's so many of them and currently we\nrely on the native implementation for those. So doesn't seem worth\nfixing.\n\nBut since we can at least fix it for RSC I/O/awaits we can do this hack.",
            "tree": {
                "sha": "85842f5e878d8608c4535878b1b48c6ed425ef97",
                "url": "https://api.github.com/repos/facebook/react/git/trees/85842f5e878d8608c4535878b1b48c6ed425ef97"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/154008172573d64519ebbc23da611a27073b0a8c",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoP2l3CRC1aQ7uu5UhlAAAfFkQAFB+SLn6xSRodgi3Lx+RJliU\nvYSE9NiUTo0rlK5zST6jgecQ6mLQlTq0/uYzY74L0ejlXroxVnhrmpzWLmtgNBBN\nN0bsPyHSWMhY9q9fqOVDq/tcBDZX922kyztgbBeoUk0/6nLCRkrjJq8V31a/3Fsc\nmegl9QdQPa7EaI3uAm1C2S9wyr5/NBhWQynTgLSixBJmoAm3dIWmygE3T9d8SdsT\nQ2hTTZr0P4HdWzyY9UevoMYBK/d5Y7kPgCQB0xHK/sbycU8S3H+R0vLexQNO/8MX\nvcPAJATjbu1iNUNvm8UvU/qOlv8byrB9OcvpIG2c41DzwIwSd9J3h9QbBHlXFUBH\nNjYWONlRYcT9MTcLB1ULxP3R9RS9VZYX8VoN3uZO0aLHjZC1dITwnaVtW2Dc5FLe\nsilKq3thcap9P/Uua8BcuaWoHpbStYYINiwDPCdiMLJ5Q1LM93cAEkoV/bC+a7m1\nheYfVCkcPuWfmSNzOn5JCoVc6reHQoyDZplpZJhS4OM/OuYSmx+P1OZMhuLcA/aB\nX9VY9piquVOL37xlCT7JwOxjuCvD+UDgBrpdI2f4KvN3bqUGjGVEOxjb7PHaxerE\nAJDQUHGkm7lkRQhFJkWVOPG7Vb4LCmMeOXAaWo3H41+J29Gw0csidBkuAWCRE7qV\nyMeIEQN7NeZnFg47nulO\n=JR7J\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 85842f5e878d8608c4535878b1b48c6ed425ef97\nparent 9cc74fec749bcca2e0f5d1e41aa612b2135641ff\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748986231 -0400\ncommitter GitHub <noreply@github.com> 1748986231 -0400\n\n[Flight] Encode Async I/O Tasks using the Enclosing Line/Column (#33403)\n\nStacked on #33402.\n\nThere's a bug in Chrome Performance tracking which uses the enclosing\nline/column instead of the callsite in stacks.\n\nFor our fake eval:ed functions that represents functions on the server,\nwe can position the enclosing function body at the position of the\ncallsite to simulate getting the right line.\n\nUnfortunately, that doesn't give us exactly the right callsite when it's\nused for other purposes that uses the callsite like console logs and\nerror reporting and stacks inside breakpoints. So I don't think we want\nto always do this.\n\nFor ReactAsyncInfo/ReactIOInfo, the only thing we're going to use the\nfake task for is the Performance tracking, so it doesn't have any\ndownsides until Chrome fixes the bug and we'd have to revert it.\nTherefore this PR uses that techniques only for those entries.\n\nWe could do this for Server Components too but we're going to use those\nfor other things too like console logs. I don't think it's worth\nduplicating the Task objects. That would also make it inconsistent with\nClient Components.\n\nFor Client Components, we could in theory also generate fake evals but\nthat would be way slower since there's so many of them and currently we\nrely on the native implementation for those. So doesn't seem worth\nfixing.\n\nBut since we can at least fix it for RSC I/O/awaits we can do this hack.",
                "verified_at": "2025-06-03T21:30:33Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/154008172573d64519ebbc23da611a27073b0a8c",
        "html_url": "https://github.com/facebook/react/commit/154008172573d64519ebbc23da611a27073b0a8c",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/154008172573d64519ebbc23da611a27073b0a8c/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "9cc74fec749bcca2e0f5d1e41aa612b2135641ff",
                "url": "https://api.github.com/repos/facebook/react/commits/9cc74fec749bcca2e0f5d1e41aa612b2135641ff",
                "html_url": "https://github.com/facebook/react/commit/9cc74fec749bcca2e0f5d1e41aa612b2135641ff"
            }
        ]
    },
    {
        "sha": "9cc74fec749bcca2e0f5d1e41aa612b2135641ff",
        "node_id": "C_kwDOAJy2KtoAKDljYzc0ZmVjNzQ5YmNjYTJlMGY1ZDFlNDFhYTYxMmIyMTM1NjQxZmY",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-03T21:29:41Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T21:29:41Z"
            },
            "message": "[Flight] Emit the time we awaited something inside a Server Component (#33402)\n\nStacked on #33400. \n\n<img width=\"1261\" alt=\"Screenshot 2025-06-01 at 10 27 47\u202fPM\"\nsrc=\"https://github.com/user-attachments/assets/a5a73ee2-49e0-4851-84ac-e0df6032efb5\"\n/>\n\nThis is emitted with the start/end time and stack of the \"await\". Which\nmay be different than the thing that started the I/O.\n\nThese awaits aren't quite as simple as just every await since you can\nstart a sequence in parallel there can actually be multiple overlapping\nawaits and there can be CPU work interleaved with the await on the same\ncomponent.\n\n```js\nfunction getData() {\n  await fetch(...);\n  await fetch(...);\n}\nconst promise = getData();\ndoWork();\nawait promise;\n```\n\nThis has two \"I/O\" awaits but those are actually happening in parallel\nwith `doWork()`.\n\nSince these also could have started before we started rendering this\nsequence (e.g. a component) we have to clamp it so that we don't\nconsider awaits that start before the component.\n\nWhat we're conceptually trying to convey is the time this component was\nblocked due to that I/O resource. Whether it's blocked from completing\nthe last result or if it's blocked from issuing a waterfall request.",
            "tree": {
                "sha": "a7d0fb5c86a14debd88fffb70ef5cc3131889f4f",
                "url": "https://api.github.com/repos/facebook/react/git/trees/a7d0fb5c86a14debd88fffb70ef5cc3131889f4f"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/9cc74fec749bcca2e0f5d1e41aa612b2135641ff",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoP2lGCRC1aQ7uu5UhlAAAWNIQAGZcEI9ITd37agHpgpEBsYis\nUaOP5TESV6P+4zgxnLgSaduC0XEZGKilmzf6BeZXB74okPAoj6ag4671i5fLJqfQ\nZiqW5YVlVy+bPSKs613+7JJ1Hh3kpQaF7OuqzsMrny1UMBNR1BoV7TpOkBkyWs08\n1+BNQMpoA5FPL9KLJT3hI3STj5nlkbrEOgXvtHzuecawsxQDM2Ad5h1rHOoLuMUG\nNjfA4ni3Z/whr2/Wh9T2d79j6ySFbO8UIy+402wSzPYUjNHjpXmulk+TuqHfG9qc\nvwjY1jo+MqoxKFuAyzX/ROnGBn0GGR7R9hTUDRgLfwgf02Tl7CJfnsNDqHSSzthO\n2fZqhuhItpzE3zg9P00uwksx+Q2FLOVREsG/cQRpKawAhhYOkKa1QvblZ9woxWA0\nhEBhdgntCft70ZfwUnbSq/vLbzm7TDp28XkMeOalqkHefcNwn7FM2r/aDk3tFaZK\notgSXZC0d5jve6X3m9qapeaLrQa923XMlc7xMryjWNAEAHZfOsDEDTSbDV/LBDFR\nFZJ4PqFQ47Y5+IMZYsgICVilouOn3HHT9tk0k8HG6a1RQLvWgxcaXazeqWinoLLQ\nB6F7S2YgcNH+Y767qCTrFyT99WKi1DwyfjEfFGjxE+iEkI/CvEHzXW6+nBxXMroN\nPyJRfEp7Ymhl9cH0uGiy\n=r3ax\n-----END PGP SIGNATURE-----\n",
                "payload": "tree a7d0fb5c86a14debd88fffb70ef5cc3131889f4f\nparent 157ac578ded11352330dbdfb8cf339b28c6a16d6\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748986181 -0400\ncommitter GitHub <noreply@github.com> 1748986181 -0400\n\n[Flight] Emit the time we awaited something inside a Server Component (#33402)\n\nStacked on #33400. \n\n<img width=\"1261\" alt=\"Screenshot 2025-06-01 at 10 27 47\u202fPM\"\nsrc=\"https://github.com/user-attachments/assets/a5a73ee2-49e0-4851-84ac-e0df6032efb5\"\n/>\n\nThis is emitted with the start/end time and stack of the \"await\". Which\nmay be different than the thing that started the I/O.\n\nThese awaits aren't quite as simple as just every await since you can\nstart a sequence in parallel there can actually be multiple overlapping\nawaits and there can be CPU work interleaved with the await on the same\ncomponent.\n\n```js\nfunction getData() {\n  await fetch(...);\n  await fetch(...);\n}\nconst promise = getData();\ndoWork();\nawait promise;\n```\n\nThis has two \"I/O\" awaits but those are actually happening in parallel\nwith `doWork()`.\n\nSince these also could have started before we started rendering this\nsequence (e.g. a component) we have to clamp it so that we don't\nconsider awaits that start before the component.\n\nWhat we're conceptually trying to convey is the time this component was\nblocked due to that I/O resource. Whether it's blocked from completing\nthe last result or if it's blocked from issuing a waterfall request.",
                "verified_at": "2025-06-03T21:29:44Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/9cc74fec749bcca2e0f5d1e41aa612b2135641ff",
        "html_url": "https://github.com/facebook/react/commit/9cc74fec749bcca2e0f5d1e41aa612b2135641ff",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/9cc74fec749bcca2e0f5d1e41aa612b2135641ff/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "157ac578ded11352330dbdfb8cf339b28c6a16d6",
                "url": "https://api.github.com/repos/facebook/react/commits/157ac578ded11352330dbdfb8cf339b28c6a16d6",
                "html_url": "https://github.com/facebook/react/commit/157ac578ded11352330dbdfb8cf339b28c6a16d6"
            }
        ]
    },
    {
        "sha": "157ac578ded11352330dbdfb8cf339b28c6a16d6",
        "node_id": "C_kwDOAJy2KtoAKDE1N2FjNTc4ZGVkMTEzNTIzMzBkYmRmYjhjZjMzOWIyOGM2YTE2ZDY",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-03T21:28:46Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T21:28:46Z"
            },
            "message": "[Flight] Include env in ReactAsyncInfo and ReactIOInfo (#33400)\n\nStacked on #33395.\n\nThis lets us keep track of which environment this was fetched and\nawaited.\n\nCurrently the IO and await is in the same environment. It's just kept\nwhen forwarded. Once we support forwarding information from a Promise\nfetched from another environment and awaited in this environment then\nthe await can end up being in a different environment.\n\nThere's a question of when the await is inside Flight itself such as\nwhen you return a promise fetched from another environment whether that\nshould mean that the await is in the current environment. I don't think\nso since the original stack trace is the best stack trace. It's only if\nyou `await` it in user space in this environment first that this might\nhappen and even then it should only be considered if there wasn't a\nbetter await earlier or if reading from the other environment was itself\nI/O.\n\nThe timing of *when* we read `environmentName()` is a little interesting\nhere too.",
            "tree": {
                "sha": "8d5aaeb0109f8d6e4dd4960b4fdde0e751ecc10e",
                "url": "https://api.github.com/repos/facebook/react/git/trees/8d5aaeb0109f8d6e4dd4960b4fdde0e751ecc10e"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/157ac578ded11352330dbdfb8cf339b28c6a16d6",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoP2kOCRC1aQ7uu5UhlAAAfrYQAC7BoE/oZ0r7yGv1TqiwRwWF\nBtmbJdTks1aVAhbIAC/R1rWQ0vFaojYCYX5pMuba2dT6ddNtzxVW2nAh29U5ucwE\nkZOgUdeuL9+V1lswn5YzLQz7OSKt9xfvOx3nW/zKINHU3YT5Swcb9CiffFlB6OFA\nd3lp37VXP8YANzttSdL692FgaOVVib5XReU5YKZfvXyTZlES/kUmstW+b4hk+yv1\nf0vipAF7FGch+9vtRe1oK6Eo0ZTOkUiR4VHGzhK3+OJ/xh0T6/7pADUE3aorYKbC\nC9mlidLUSQGgfEb3HIxj2+qzvuLvxdVaziOF8sqY27wsPFFwEkGk6Dxycp9lY/TS\n3K1l4OFvrOx2/dWAtkgZ0mp/c9/Ll14OAEBlWXSqw0kpUe9v9DaI1wrhXHptvHq0\nPtjozck2YiIq5EaVDlEOEiuxYcaQ99BPtZeA7rBdszI7uCzAoLUnL4kmASXeekJO\nrPqpaSb/UeL3MP2q4KuxLhXOtDGU3E722yGXHVf3JC3WXjS8QU+sW5KCaO0Bhq+Y\n3AE31P/kYQqqYgdJIP2HR6H8tLIWq1PQJNfHTGux9E/X6VbnfxZjnaXpO6t2MVaR\nEupjCwojOLBTHOsZvo0x5I8mMOUOsP+bhgGS07e29G/U0GlhWo4OFNQk6fAJpt6R\nfiHiar8y0rgyTWbrygjU\n=0KYw\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 8d5aaeb0109f8d6e4dd4960b4fdde0e751ecc10e\nparent 45da4e055dc7a2b9de6abdae0709e242f8091636\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748986126 -0400\ncommitter GitHub <noreply@github.com> 1748986126 -0400\n\n[Flight] Include env in ReactAsyncInfo and ReactIOInfo (#33400)\n\nStacked on #33395.\n\nThis lets us keep track of which environment this was fetched and\nawaited.\n\nCurrently the IO and await is in the same environment. It's just kept\nwhen forwarded. Once we support forwarding information from a Promise\nfetched from another environment and awaited in this environment then\nthe await can end up being in a different environment.\n\nThere's a question of when the await is inside Flight itself such as\nwhen you return a promise fetched from another environment whether that\nshould mean that the await is in the current environment. I don't think\nso since the original stack trace is the best stack trace. It's only if\nyou `await` it in user space in this environment first that this might\nhappen and even then it should only be considered if there wasn't a\nbetter await earlier or if reading from the other environment was itself\nI/O.\n\nThe timing of *when* we read `environmentName()` is a little interesting\nhere too.",
                "verified_at": "2025-06-03T21:28:49Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/157ac578ded11352330dbdfb8cf339b28c6a16d6",
        "html_url": "https://github.com/facebook/react/commit/157ac578ded11352330dbdfb8cf339b28c6a16d6",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/157ac578ded11352330dbdfb8cf339b28c6a16d6/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "45da4e055dc7a2b9de6abdae0709e242f8091636",
                "url": "https://api.github.com/repos/facebook/react/commits/45da4e055dc7a2b9de6abdae0709e242f8091636",
                "html_url": "https://github.com/facebook/react/commit/45da4e055dc7a2b9de6abdae0709e242f8091636"
            }
        ]
    },
    {
        "sha": "45da4e055dc7a2b9de6abdae0709e242f8091636",
        "node_id": "C_kwDOAJy2KtoAKDQ1ZGE0ZTA1NWRjN2EyYjlkZTZhYmRhZTA3MDllMjQyZjgwOTE2MzY",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-03T20:12:26Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T20:12:26Z"
            },
            "message": "[Flight] Track Owner on AsyncInfo and IOInfo (#33395)\n\nStacked on #33394.\n\nThis lets us create async stack traces to the owner that was in context\nwhen the I/O was started or awaited.\n\n<img width=\"615\" alt=\"Screenshot 2025-06-01 at 12 31 52\u202fAM\"\nsrc=\"https://github.com/user-attachments/assets/6ff5a146-33d6-4a4b-84af-1b57e73047d4\"\n/>\n\nThis owner might not be the immediate closest parent where the I/O was\nawaited.",
            "tree": {
                "sha": "780965cb6d9b194abe4e0d03fad6d1db6f2eda4a",
                "url": "https://api.github.com/repos/facebook/react/git/trees/780965cb6d9b194abe4e0d03fad6d1db6f2eda4a"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/45da4e055dc7a2b9de6abdae0709e242f8091636",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoP1cqCRC1aQ7uu5UhlAAAu44QAF+ZWWPZPSCbM45pgJLe8Wkq\nBr43OX0rCIVx+GTb26gjeIrP+kCzYlZRAQavnhKB/RclmwnTD/MM8n78b/KqQaVe\nrS+RcTc1PAPWrgX4B30gEo3BpoW1jeNyVW/RiOykCONDzba5/iekunGg/cZZYc9L\nlGqoXZKv4LycuJt4j4J+HsL0RJsSxwi70ItuzzC950MYAv47WpRbrSTDZ5m0rCBj\ngCqEU986OST3XWJArqo6AQ6cChsgEYcoX7Blja98oOSv5Gfqdi6b09iqXrzXFfbj\nhf+EwOeXFTPnqzxOAlLVaPs2eI0xEcO1Cfckt3MCo1wJsmu0rVhaOVTXoznGpGYB\noTWdbeh4Z0xau84mMhorzrf1eOZWRSs1vWfzJrd1k4m9VIjvMvzgK87f0v6ZHiRu\nq7wXeW9KzUN6YqCVU2andxNGk19p1Qx+cNtGx9ZlOUvyRhCO5KjWx3mcFYGGywdp\nNGl7520WlOGHE8te7vwl94X8bhmANr/FxPcdoeZXOZNBsh1pHJI9+ys5tvtCY0jK\nHgmXyObaa/iUs7MStgBIsHgk0GwNxOAf0/PM/UB/8zddduufPGGHVk6UWXQdU8+q\nuPpTxsgnaAqgqaRfBjIZo77BOJD2XcazzYRVMej1fAj8Oxhpi2kcF57PhctZpJB3\nf5YL3grPrZExEMPQUoaS\n=5kR2\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 780965cb6d9b194abe4e0d03fad6d1db6f2eda4a\nparent d8919a0a6854715a4a77db24ed7a94a124487d86\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748981546 -0400\ncommitter GitHub <noreply@github.com> 1748981546 -0400\n\n[Flight] Track Owner on AsyncInfo and IOInfo (#33395)\n\nStacked on #33394.\n\nThis lets us create async stack traces to the owner that was in context\nwhen the I/O was started or awaited.\n\n<img width=\"615\" alt=\"Screenshot 2025-06-01 at 12 31 52\u202fAM\"\nsrc=\"https://github.com/user-attachments/assets/6ff5a146-33d6-4a4b-84af-1b57e73047d4\"\n/>\n\nThis owner might not be the immediate closest parent where the I/O was\nawaited.",
                "verified_at": "2025-06-03T20:12:29Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/45da4e055dc7a2b9de6abdae0709e242f8091636",
        "html_url": "https://github.com/facebook/react/commit/45da4e055dc7a2b9de6abdae0709e242f8091636",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/45da4e055dc7a2b9de6abdae0709e242f8091636/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "d8919a0a6854715a4a77db24ed7a94a124487d86",
                "url": "https://api.github.com/repos/facebook/react/commits/d8919a0a6854715a4a77db24ed7a94a124487d86",
                "html_url": "https://github.com/facebook/react/commit/d8919a0a6854715a4a77db24ed7a94a124487d86"
            }
        ]
    },
    {
        "sha": "d8919a0a6854715a4a77db24ed7a94a124487d86",
        "node_id": "C_kwDOAJy2KtoAKGQ4OTE5YTBhNjg1NDcxNWE0YTc3ZGIyNGVkN2E5NGExMjQ0ODdkODY",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-03T19:31:12Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T19:31:12Z"
            },
            "message": "[Flight] Log \"Server Requests\" Track (#33394)\n\nStacked on #33392.\n\nThis adds another track to the Performance Track called `\"Server\nRequests\"`.\n\n<img width=\"1015\" alt=\"Screenshot 2025-06-01 at 12 02 14\u202fAM\"\nsrc=\"https://github.com/user-attachments/assets/c4d164c4-cfdf-4e14-9a87-3f011f65fd20\"\n/>\n\nThis logs the flat list of I/O awaited on by Server Components. There\nwill be other views that are more focused on what data blocks a specific\nComponent or Suspense boundary but this is just the list of all the I/O\nbasically so you can get an overview of those waterfalls without the\nnoise of all the Component trees and rendering. It's similar to what the\n\"Network\" track is on the client.\n\nI've been going back and forth on what to call this track but I went\nwith `\"Server Requests\"` for now. The idea is that the name should\ncommunicate that this is something that happens on the server and is a\npairing with the `\"Server Components\"` track. Although we don't use that\nfeature, since it's missing granularity, it's also similar to \"Server\nTimings\".",
            "tree": {
                "sha": "73a1def673fff6d9d73d9057f94141f588508e71",
                "url": "https://api.github.com/repos/facebook/react/git/trees/73a1def673fff6d9d73d9057f94141f588508e71"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/d8919a0a6854715a4a77db24ed7a94a124487d86",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoP02ACRC1aQ7uu5UhlAAAPCIQAFWmMCitJDv0qM1IWd51pQM9\n+v/9VratxhQt2438aDJ+hlnXKoDfik7InUNFq7lxg8SdB60qEOx52YAAnUdrjDiq\nOUoErJ24Vl0YhSOLGGUqPvWNmEA0sw5toiAbSsLZU1yzEdksOsSZlT2nbN44MXdE\nVXHx8SjKYMP+AU3MwXCgcgHMvEM39CqtDA8gwP2LG8zXa3wTTSZsd20muxla4fkh\nUYrv7iNhobVcsHvUGlMa64DYxJHJ6wllwPljgDns11930wXVSfWtmw+UmTsq6CE4\n9HuPj3irC/7RccZ4jYngvNiPteCMQNtqCA6yfv6okOPFniTnOwFq9EsAbXCdpr3q\nOcnANrA7mTYJ6ghA1oNfXzkDsOAS5wQlRC0p8PgoE7u2E2WW8Xcn6OtsLT+CFl7A\nvr8H/3rjE/GJdiYn1mu/W530/VY45kLzM3Nhrzg8hUBc/soZVLU/9R5LzqoZDJ3x\nOGU0pvANrAJRsti0bXD9PeOmEsFuXnR01XQiV3fIqlvjBfNTauk+jjIL8iLug//s\nrQT+p1nfzWVhiwwxUrxJ/dXNNqQkqMKdJGf5/0nUVYz/tC1wHweE83KIwIY6QpBg\nbf418NWeijltXJJceK+VloIxapFHRMn/N4Mb78HuuTZ4DzkUcqnOTAFTTk01v/Ap\n1Im7o6A41chh+bV7CZLz\n=R9ic\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 73a1def673fff6d9d73d9057f94141f588508e71\nparent 2e9f8cd3e031212bc507e31e2888f8f96b1de138\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748979072 -0400\ncommitter GitHub <noreply@github.com> 1748979072 -0400\n\n[Flight] Log \"Server Requests\" Track (#33394)\n\nStacked on #33392.\n\nThis adds another track to the Performance Track called `\"Server\nRequests\"`.\n\n<img width=\"1015\" alt=\"Screenshot 2025-06-01 at 12 02 14\u202fAM\"\nsrc=\"https://github.com/user-attachments/assets/c4d164c4-cfdf-4e14-9a87-3f011f65fd20\"\n/>\n\nThis logs the flat list of I/O awaited on by Server Components. There\nwill be other views that are more focused on what data blocks a specific\nComponent or Suspense boundary but this is just the list of all the I/O\nbasically so you can get an overview of those waterfalls without the\nnoise of all the Component trees and rendering. It's similar to what the\n\"Network\" track is on the client.\n\nI've been going back and forth on what to call this track but I went\nwith `\"Server Requests\"` for now. The idea is that the name should\ncommunicate that this is something that happens on the server and is a\npairing with the `\"Server Components\"` track. Although we don't use that\nfeature, since it's missing granularity, it's also similar to \"Server\nTimings\".",
                "verified_at": "2025-06-03T19:31:14Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/d8919a0a6854715a4a77db24ed7a94a124487d86",
        "html_url": "https://github.com/facebook/react/commit/d8919a0a6854715a4a77db24ed7a94a124487d86",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/d8919a0a6854715a4a77db24ed7a94a124487d86/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "2e9f8cd3e031212bc507e31e2888f8f96b1de138",
                "url": "https://api.github.com/repos/facebook/react/commits/2e9f8cd3e031212bc507e31e2888f8f96b1de138",
                "html_url": "https://github.com/facebook/react/commit/2e9f8cd3e031212bc507e31e2888f8f96b1de138"
            }
        ]
    },
    {
        "sha": "2e9f8cd3e031212bc507e31e2888f8f96b1de138",
        "node_id": "C_kwDOAJy2KtoAKDJlOWY4Y2QzZTAzMTIxMmJjNTA3ZTMxZTI4ODhmOGY5NmIxZGUxMzg",
        "commit": {
            "author": {
                "name": "Sebastian \"Sebbie\" Silbermann",
                "email": "sebastian.silbermann@vercel.com",
                "date": "2025-06-03T19:10:13Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T19:10:13Z"
            },
            "message": "Clear bundler cache before bundling fixtures (#33426)",
            "tree": {
                "sha": "22594f4083c03ed003ad315e30ff9043bbff4c47",
                "url": "https://api.github.com/repos/facebook/react/git/trees/22594f4083c03ed003ad315e30ff9043bbff4c47"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/2e9f8cd3e031212bc507e31e2888f8f96b1de138",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoP0iVCRC1aQ7uu5UhlAAAsuwQAFJwPvDJeOI5aeQijARZJ8s/\nMeem2MF1Zkbc481j7IdmTlhiMpPKyPi4CbxwQj05Oz429O94AfEiOVj8dkcZbXob\n4EmUSTzASiDIw4WMM0Q26umWL0N86JohbEiaXdGN+RRWlTDrMhuba3lyubjvF2Ck\nCrf19tWSlWhIVjr0nos3ht27OpAQN3CMqQ5pQd8RPWWy+sBVXXEvrxe6uogSZK6N\nRKwn5lu8iD7xa1gCTEy4VzdtLV6W/ALTwKHTcoLvq+lSWkzK50TRl0dC9u2Eqk+7\nVh6u02cp8r16dWtxDfMCYBuDQqAaRO3gp7mrE5wjb1sBIxwfK3xfyg7ghZ6R8vHJ\nU35/lWf7eUOteVf6Aeji6QWdOovhg6OXvPZitDDYUwLSYY8B5Hns5k1o+14dHVYQ\nYPlSDN18PyvjOVR2b+9T56+yXNyFK3kxkpyl0NFrv748YNeLaqopnxPMUVms8kpD\n6DFEnU2JdM+Oor2+aBHPb98nf7pVseFux7sl3es1gOdBxBdSR5oJaE+c6HOJ8428\nnfJS8fwbauQ+Rd+0DPU9h8h1IeBCx78lmX2kACisP7etdiEfn0yNGSXjED7M7VxA\naqEYX5pDzK7tdcfGV6dieV8vcizsV1UgP++88rWBsXDda29EpCtDvhcKT1C7yTg2\nfWyfmQzV7qYBQg+DL7q0\n=Y5dw\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 22594f4083c03ed003ad315e30ff9043bbff4c47\nparent 65a46c7eebb731ba5c1602afef87365491beb75d\nauthor Sebastian \"Sebbie\" Silbermann <sebastian.silbermann@vercel.com> 1748977813 +0200\ncommitter GitHub <noreply@github.com> 1748977813 +0200\n\nClear bundler cache before bundling fixtures (#33426)\n\n",
                "verified_at": "2025-06-03T19:10:15Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/2e9f8cd3e031212bc507e31e2888f8f96b1de138",
        "html_url": "https://github.com/facebook/react/commit/2e9f8cd3e031212bc507e31e2888f8f96b1de138",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/2e9f8cd3e031212bc507e31e2888f8f96b1de138/comments",
        "author": {
            "login": "eps1lon",
            "id": 12292047,
            "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/12292047?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eps1lon",
            "html_url": "https://github.com/eps1lon",
            "followers_url": "https://api.github.com/users/eps1lon/followers",
            "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
            "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
            "organizations_url": "https://api.github.com/users/eps1lon/orgs",
            "repos_url": "https://api.github.com/users/eps1lon/repos",
            "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eps1lon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "65a46c7eebb731ba5c1602afef87365491beb75d",
                "url": "https://api.github.com/repos/facebook/react/commits/65a46c7eebb731ba5c1602afef87365491beb75d",
                "html_url": "https://github.com/facebook/react/commit/65a46c7eebb731ba5c1602afef87365491beb75d"
            }
        ]
    },
    {
        "sha": "65a46c7eebb731ba5c1602afef87365491beb75d",
        "node_id": "C_kwDOAJy2KtoAKDY1YTQ2YzdlZWJiNzMxYmE1YzE2MDJhZmVmODczNjU0OTFiZWI3NWQ",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-03T19:04:28Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T19:04:28Z"
            },
            "message": "[Flight] Track the function name that was called for I/O entries (#33392)\n\nStacked on #33390.\n\nThe stack trace doesn't include the thing you called when calling into\nignore listed content. We consider the ignore listed content\nconceptually the abstraction that you called that's interesting.\n\nThis extracts the name of the first ignore listed function that was\ncalled from user space. For example `\"fetch\"`. So we can know what kind\nof request this is.\n\nThis could be enhanced and tweaked with heuristics in the future. For\nexample, when you create a Promise yourself and call I/O inside of it\nlike my `delay` examples, then we use that Promise as the I/O node but\nits stack doesn't have the actual I/O performed. It might be better to\nuse the inner I/O node in that case. E.g. `setTimeout`. Currently I pick\nthe name from the first party code instead - in my example `delay`.\n\nAnother case that could be improved is the case where your whole\ncomponent is third-party. In that case we still log the I/O but it has\nno context about what kind of I/O since the whole stack is ignored it\njust gets the component name for example. We could for example look at\nthe first name that is in a different package than the package name of\nthe ignored listed component. So if\n`node_modules/my-component-library/index.js` calls into\n`node_modules/mysql/connection.js` then we could use the name from the\ninner.",
            "tree": {
                "sha": "77adb1d9d2fea3239480119a9e457da8788c33b9",
                "url": "https://api.github.com/repos/facebook/react/git/trees/77adb1d9d2fea3239480119a9e457da8788c33b9"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/65a46c7eebb731ba5c1602afef87365491beb75d",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoP0c8CRC1aQ7uu5UhlAAA7qYQADA/Tjq1f3Amj7q/9HVmj85h\n5phcCgs2YUcxkPPKawYsEovVE9cvOlhpxi/aZMoQ2DFNaWcx8kC4WmVyAz1sDuVq\nMb2eI6silYof7M3b5IPed8C4unuPH50GGVo4N+ymTAPoBcOXPz/j+KHw6bFxfyyl\noxOKqZNtCtzPVfQZM8HSVEsrVAnJuLPLiIYOzb04CIZeYrMLDzAvM2KO8ckhX7xy\n5co8+rSNSzbHwjrZK7k5gZWDT7fMvEySUBmMOQz9reuGS6GyJWmuWfF1P5Ednvsk\nQ+lo2ufxU+bzW0sjOoQwigSQ2TJqUVWV1cjKaGLOl13pnJK27aoLtvQoTRQsZJQa\nvYzq5IZ5Ka7mKnZ4BDUYv3PnQmyf5NqVufvQ1qoF8lYHc10W2GNbBlb+t1E8goSS\nohah2+of+tv/r0TyZKGGxrRt0qZ5INNLyllsLvF0dHBQYMgUc6KLFqEoGuVOzd+4\nPQQfLu02xRNt/XMIMt+5tY+/qDzfEtWPW2nbleXb9mGRSMCOB9QboFizzKX2rOYx\ng60+BBy+93AJN2EJMrKODJmZbp+1JxCoatmJVEBtrQZFZDMuUz+sRLmcofE2Gozc\nq4JA8ztm8+PYPryiVn0YM53gqHMXSV94YX81zI3Ty9xZOugIJawhHGgTsokIxwwO\n4a7BFfgKo88X33cvf0Kn\n=TT2A\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 77adb1d9d2fea3239480119a9e457da8788c33b9\nparent 3fb17d16a4838e132d0d6dbb08f91b7e7da691eb\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748977468 -0400\ncommitter GitHub <noreply@github.com> 1748977468 -0400\n\n[Flight] Track the function name that was called for I/O entries (#33392)\n\nStacked on #33390.\n\nThe stack trace doesn't include the thing you called when calling into\nignore listed content. We consider the ignore listed content\nconceptually the abstraction that you called that's interesting.\n\nThis extracts the name of the first ignore listed function that was\ncalled from user space. For example `\"fetch\"`. So we can know what kind\nof request this is.\n\nThis could be enhanced and tweaked with heuristics in the future. For\nexample, when you create a Promise yourself and call I/O inside of it\nlike my `delay` examples, then we use that Promise as the I/O node but\nits stack doesn't have the actual I/O performed. It might be better to\nuse the inner I/O node in that case. E.g. `setTimeout`. Currently I pick\nthe name from the first party code instead - in my example `delay`.\n\nAnother case that could be improved is the case where your whole\ncomponent is third-party. In that case we still log the I/O but it has\nno context about what kind of I/O since the whole stack is ignored it\njust gets the component name for example. We could for example look at\nthe first name that is in a different package than the package name of\nthe ignored listed component. So if\n`node_modules/my-component-library/index.js` calls into\n`node_modules/mysql/connection.js` then we could use the name from the\ninner.",
                "verified_at": "2025-06-03T19:04:30Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/65a46c7eebb731ba5c1602afef87365491beb75d",
        "html_url": "https://github.com/facebook/react/commit/65a46c7eebb731ba5c1602afef87365491beb75d",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/65a46c7eebb731ba5c1602afef87365491beb75d/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "3fb17d16a4838e132d0d6dbb08f91b7e7da691eb",
                "url": "https://api.github.com/repos/facebook/react/commits/3fb17d16a4838e132d0d6dbb08f91b7e7da691eb",
                "html_url": "https://github.com/facebook/react/commit/3fb17d16a4838e132d0d6dbb08f91b7e7da691eb"
            }
        ]
    },
    {
        "sha": "3fb17d16a4838e132d0d6dbb08f91b7e7da691eb",
        "node_id": "C_kwDOAJy2KtoAKDNmYjE3ZDE2YTQ4MzhlMTMyZDBkNmRiYjA4ZjkxYjdlN2RhNjkxZWI",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-03T18:16:34Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T18:16:34Z"
            },
            "message": "[Flight] Encode ReactIOInfo as its own row type (#33390)\n\nStacked on #33388.\n\nThis encodes the I/O entries as their own row type (`\"J\"`). This makes\nit possible to parse them directly without first parsing the debug info\nfor each component. E.g. if you're just interested in logging the I/O\nwithout all the places it was awaited.\n\nThis is not strictly necessary since the debug info is also readily\navailable without parsing the actual trees. (That's how the Server\nComponents Performance Track works.) However, we might want to exclude\nthis information in profiling builds while retaining some limited form\nof I/O tracking.\n\nIt also allows for logging side-effects that are not awaited if we\nwanted to.",
            "tree": {
                "sha": "7885f8a759273d63d1142479d13aced421cdc897",
                "url": "https://api.github.com/repos/facebook/react/git/trees/7885f8a759273d63d1142479d13aced421cdc897"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/3fb17d16a4838e132d0d6dbb08f91b7e7da691eb",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoPzwCCRC1aQ7uu5UhlAAAfAoQAADPgLwBiobs8oy8n2gCYk9H\nmnG6Nqi2qhA5oyqzXdX1ah1cb2WJFxIolm/XjRp1J5ECaoRgUhe4N8AFu5wQqMJs\nyhc9R+dRcjlsjYJLxuqtm1myUmUCn+rqPwl/Q6Fea/6kmaLyZgcxVmQlECz7oJqP\nUi2qkKqjoT4LftbGN0BZuZl6IFrPJMg9OKfBjxHgFFqE8c6nWG9cZptVz6ZnEBhe\n27bZLUlHgv0kmmf0IqZN1W0h32LH7mLolojebeA78mFud1V7IkXNrGcquENOKtny\nn+iVX/MyvA1B7lpwjpXO915w4LB4oOKoY0oKrWYyjIRZzy/1uNOvkHofcP15rgCJ\naqvRep/cSnNXKnJKdyrZcW/Tx7P9k8OhZLfOkswAlrC4t2/q5X8v0iJRI/CBTeNE\nhKK8fvZuLNAYrVto8e48X3Os9m6KWIXbxh69zoe3B5F4CUKROV/DbXjccuqiCkPi\n0QZTeKWP0+dOglaGYwyPK+L87VoEqdLAiiWvIVGwkAKHlkB4qC0puE79RBT6/fNn\nRopSRumEibgUXcxYU7khrUyxbL2IU0D0ayTfYpOtNAC9sytHNFChlMv9XNcEpoy1\nuITTFyhsqs8XLCInr5ZaLFlsl0Ggzm6kqcHKpyPS1fPUenyQssSFqfQ6PJ4DI5CX\nBZaVEcW8CiWPxH53OcW6\n=kN2t\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 7885f8a759273d63d1142479d13aced421cdc897\nparent acee65d6d031697ab8c71932a5b028351cbc3b03\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748974594 -0400\ncommitter GitHub <noreply@github.com> 1748974594 -0400\n\n[Flight] Encode ReactIOInfo as its own row type (#33390)\n\nStacked on #33388.\n\nThis encodes the I/O entries as their own row type (`\"J\"`). This makes\nit possible to parse them directly without first parsing the debug info\nfor each component. E.g. if you're just interested in logging the I/O\nwithout all the places it was awaited.\n\nThis is not strictly necessary since the debug info is also readily\navailable without parsing the actual trees. (That's how the Server\nComponents Performance Track works.) However, we might want to exclude\nthis information in profiling builds while retaining some limited form\nof I/O tracking.\n\nIt also allows for logging side-effects that are not awaited if we\nwanted to.",
                "verified_at": "2025-06-03T18:16:36Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/3fb17d16a4838e132d0d6dbb08f91b7e7da691eb",
        "html_url": "https://github.com/facebook/react/commit/3fb17d16a4838e132d0d6dbb08f91b7e7da691eb",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/3fb17d16a4838e132d0d6dbb08f91b7e7da691eb/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "acee65d6d031697ab8c71932a5b028351cbc3b03",
                "url": "https://api.github.com/repos/facebook/react/commits/acee65d6d031697ab8c71932a5b028351cbc3b03",
                "html_url": "https://github.com/facebook/react/commit/acee65d6d031697ab8c71932a5b028351cbc3b03"
            }
        ]
    },
    {
        "sha": "acee65d6d031697ab8c71932a5b028351cbc3b03",
        "node_id": "C_kwDOAJy2KtoAKGFjZWU2NWQ2ZDAzMTY5N2FiOGM3MTkzMmE1YjAyODM1MWNiYzNiMDM",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-03T18:14:40Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T18:14:40Z"
            },
            "message": "[Flight] Track Awaits on I/O as Debug Info (#33388)\n\nThis lets us track what data each Server Component depended on. This\nwill be used by Performance Track and React DevTools.\n\nWe use Node.js `async_hooks`. This has a number of downside. It is\nNode.js specific so this feature is not available in other runtimes\nuntil something equivalent becomes available. It's [discouraged by\nNode.js docs](https://nodejs.org/api/async_hooks.html#async-hooks). It's\nalso slow which makes this approach only really viable in development\nmode. At least with stack traces. However, it's really the only solution\nthat gives us the data that we need.\n\nThe [Diagnostic\nChannel](https://nodejs.org/api/diagnostics_channel.html) API is not\nsufficient. Not only is many Node.js built-in APIs missing but all\nlibraries like databases are also missing. Were as `async_hooks` covers\npretty much anything async in the Node.js ecosystem.\n\nHowever, even if coverage was wider it's not actually showing the\ninformation we want. It's not enough to show the low level I/O that is\nhappening because that doesn't provide the context. We need the stack\ntrace in user space code where it was initiated and where it was\nawaited. It's also not each low level socket operation that we want to\nsurface but some higher level concept which can span a sequence of I/O\noperations but as far as user space is concerned.\n\nTherefore this solution is anchored on stack traces and ignore listing\nto determine what the interesting span is. It is somewhat\nPromise-centric (and in particular async/await) because it allows us to\nmodel an abstract span instead of just random I/O. Async/await points\nare also especially useful because this allows Async Stacks to show the\nfull sequence which is not supported by random callbacks. However, if no\nPromises are involved we still to our best to show the stack causing\nplain I/O callbacks.\n\nAdditionally, we don't want to track all possible I/O. For example,\nside-effects like logging that doesn't affect the rendering performance\ndoesn't need to be included. We only want to include things that\nactually block the rendering output. We also need to track which data\nblocks each component so that we can track which data caused a\nparticular subtree to suspend.\n\nWe can do this using `async_hooks` because we can track the graph of\nwhat resolved what and then spawned what.\n\nTo track what suspended what, something has to resolve. Therefore it\nneeds to run to completion before we can show what it was suspended on.\nSo something that never resolves, won't be tracked for example.\n\nWe use the `async_hooks` in `ReactFlightServerConfigDebugNode` to build\nup an `ReactFlightAsyncSequence` graph that collects the stack traces\nfor basically all I/O and Promises allocated in the whole app. This is\npretty heavy, especially the stack traces, but it's because we don't\nknow which ones we'll need until they resolve. We don't materialize the\nstacks until we need them though.\n\nOnce they end up pinging the Flight runtime, we collect which current\nexecuting task that pinged the runtime and then log the sequence that\nled up until that runtime into the RSC protocol. Currently we only\ninclude things that weren't already resolved before we started rendering\nthis task/component, so that we don't log the entire history each time.\n\nEach operation is split into two parts. First a `ReactIOInfo` which\nrepresents an I/O operation and its start/end time. Basically the start\npoint where it was start. This is basically represents where you called\n`new Promise()` or when entering an `async function` which has an\nimplied Promise. It can be started in a different component than where\nit's awaited and it can be awaited in multiple places. Therefore this is\nglobal information and not associated with a specific Component.\n\nThe second part is `ReactAsyncInfo`. This represents where this I/O was\n`await`:ed or `.then()` called. This is associated with a point in the\ntree (usually the Promise that's a direct child of a Component). Since\nyou can have multiple different I/O awaited in a sequence technically it\nforms a dependency graph but to simplify the model these awaits as\nflattened into the `ReactDebugInfo` list. Basically it contains each\nawait in a sequence that affected this part from unblocking.\n\nThis means that the same `ReactAsyncInfo` can appear in mutliple\ncomponents if they all await the same `ReactIOInfo` but the same Promise\nonly appears once.\n\nPromises that are only resolved by other Promises or immediately are not\nconsidered here. Only if they're resolved by an I/O operation. We pick\nthe Promise basically on the border between user space code and ignored\nlisted code (`node_modules`) to pick the most specific span but abstract\nenough to not give too much detail irrelevant to the current audience.\nSimilarly, the deepest `await` in user space is marked as the relevant\n`await` point.\n\nThis feature is only available in the `node` builds of React. Not if you\nuse the `edge` builds inside of Node.js.\n\n---------\n\nCo-authored-by: Sebastian \"Sebbie\" Silbermann <silbermann.sebastian@gmail.com>",
            "tree": {
                "sha": "7e8f1c4959c9fa60f102f094e17de6bdde8ac284",
                "url": "https://api.github.com/repos/facebook/react/git/trees/7e8f1c4959c9fa60f102f094e17de6bdde8ac284"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/acee65d6d031697ab8c71932a5b028351cbc3b03",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoPzuQCRC1aQ7uu5UhlAAA/YQQAISd8vhGeAUcSZ7Z5ttxm6RN\nO9iZf5zECuJ4ZHqw2mL7nPQD1T3ciTlOVtgz6N7pclr+LhnhiIGx05yJlICVtV8p\nZL7Cs+IILvBIY4Y7vHGrS/XtaANU8/fm0ZtBy6yMsDLW0kuXrEqrkYBj+nYZ0f1B\n+69HAyWW1SOhi8QcYoRjqKrTQCMBTpQpuOEKOvCcy8XRTJzogsUNc/GKGNekiLd8\nqMRPi+u1wT9gq2KfuwREr1WOaVuuKZkAE4YPrdvhJH813GUCY2zW4aUZ84eWreWr\nG83F3CcUvS57c34Qe2nbxasC2XWwb9/ieWxfbgWVq/Ds0wzopd5o5wSafEIcPwOe\nlSQOQWPXpEsK9SmYNlhYTIt8YArxWJyrf+j6g4xJCV96l9lVQAHwRxrWYb+6UmAr\nawvPw1t/4+dDGs06hODCHlf8ir6jHf6nma9iSpRf3S2XwyL7U3lTj+wbT/JVOE/w\nUkkI7az+ijHiOrvb3TumRh1Yi2Sne8173beYv7qLnrj8IfgTijd5TgN2MEaF43MS\nDr0nvL3BmX1rymKyeZw8l1C7kZ+f1hoQiQkBPf6wlGAuK1oz+rgcSKpkt9PjWjtc\nKXq2GKBt4hlThYnV4NfJ6Em/2OIJK9xsqWlXJoK2/UWUAcIBv2gIOlmDMU7PL8oj\nVZfDSWbkCQNqeFGVI68S\n=S3ey\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 7e8f1c4959c9fa60f102f094e17de6bdde8ac284\nparent 1ae0a845bde5b95dfc319cadf366cb7b3fb1ca92\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748974480 -0400\ncommitter GitHub <noreply@github.com> 1748974480 -0400\n\n[Flight] Track Awaits on I/O as Debug Info (#33388)\n\nThis lets us track what data each Server Component depended on. This\nwill be used by Performance Track and React DevTools.\n\nWe use Node.js `async_hooks`. This has a number of downside. It is\nNode.js specific so this feature is not available in other runtimes\nuntil something equivalent becomes available. It's [discouraged by\nNode.js docs](https://nodejs.org/api/async_hooks.html#async-hooks). It's\nalso slow which makes this approach only really viable in development\nmode. At least with stack traces. However, it's really the only solution\nthat gives us the data that we need.\n\nThe [Diagnostic\nChannel](https://nodejs.org/api/diagnostics_channel.html) API is not\nsufficient. Not only is many Node.js built-in APIs missing but all\nlibraries like databases are also missing. Were as `async_hooks` covers\npretty much anything async in the Node.js ecosystem.\n\nHowever, even if coverage was wider it's not actually showing the\ninformation we want. It's not enough to show the low level I/O that is\nhappening because that doesn't provide the context. We need the stack\ntrace in user space code where it was initiated and where it was\nawaited. It's also not each low level socket operation that we want to\nsurface but some higher level concept which can span a sequence of I/O\noperations but as far as user space is concerned.\n\nTherefore this solution is anchored on stack traces and ignore listing\nto determine what the interesting span is. It is somewhat\nPromise-centric (and in particular async/await) because it allows us to\nmodel an abstract span instead of just random I/O. Async/await points\nare also especially useful because this allows Async Stacks to show the\nfull sequence which is not supported by random callbacks. However, if no\nPromises are involved we still to our best to show the stack causing\nplain I/O callbacks.\n\nAdditionally, we don't want to track all possible I/O. For example,\nside-effects like logging that doesn't affect the rendering performance\ndoesn't need to be included. We only want to include things that\nactually block the rendering output. We also need to track which data\nblocks each component so that we can track which data caused a\nparticular subtree to suspend.\n\nWe can do this using `async_hooks` because we can track the graph of\nwhat resolved what and then spawned what.\n\nTo track what suspended what, something has to resolve. Therefore it\nneeds to run to completion before we can show what it was suspended on.\nSo something that never resolves, won't be tracked for example.\n\nWe use the `async_hooks` in `ReactFlightServerConfigDebugNode` to build\nup an `ReactFlightAsyncSequence` graph that collects the stack traces\nfor basically all I/O and Promises allocated in the whole app. This is\npretty heavy, especially the stack traces, but it's because we don't\nknow which ones we'll need until they resolve. We don't materialize the\nstacks until we need them though.\n\nOnce they end up pinging the Flight runtime, we collect which current\nexecuting task that pinged the runtime and then log the sequence that\nled up until that runtime into the RSC protocol. Currently we only\ninclude things that weren't already resolved before we started rendering\nthis task/component, so that we don't log the entire history each time.\n\nEach operation is split into two parts. First a `ReactIOInfo` which\nrepresents an I/O operation and its start/end time. Basically the start\npoint where it was start. This is basically represents where you called\n`new Promise()` or when entering an `async function` which has an\nimplied Promise. It can be started in a different component than where\nit's awaited and it can be awaited in multiple places. Therefore this is\nglobal information and not associated with a specific Component.\n\nThe second part is `ReactAsyncInfo`. This represents where this I/O was\n`await`:ed or `.then()` called. This is associated with a point in the\ntree (usually the Promise that's a direct child of a Component). Since\nyou can have multiple different I/O awaited in a sequence technically it\nforms a dependency graph but to simplify the model these awaits as\nflattened into the `ReactDebugInfo` list. Basically it contains each\nawait in a sequence that affected this part from unblocking.\n\nThis means that the same `ReactAsyncInfo` can appear in mutliple\ncomponents if they all await the same `ReactIOInfo` but the same Promise\nonly appears once.\n\nPromises that are only resolved by other Promises or immediately are not\nconsidered here. Only if they're resolved by an I/O operation. We pick\nthe Promise basically on the border between user space code and ignored\nlisted code (`node_modules`) to pick the most specific span but abstract\nenough to not give too much detail irrelevant to the current audience.\nSimilarly, the deepest `await` in user space is marked as the relevant\n`await` point.\n\nThis feature is only available in the `node` builds of React. Not if you\nuse the `edge` builds inside of Node.js.\n\n---------\n\nCo-authored-by: Sebastian \"Sebbie\" Silbermann <silbermann.sebastian@gmail.com>",
                "verified_at": "2025-06-03T18:14:43Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/acee65d6d031697ab8c71932a5b028351cbc3b03",
        "html_url": "https://github.com/facebook/react/commit/acee65d6d031697ab8c71932a5b028351cbc3b03",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/acee65d6d031697ab8c71932a5b028351cbc3b03/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "1ae0a845bde5b95dfc319cadf366cb7b3fb1ca92",
                "url": "https://api.github.com/repos/facebook/react/commits/1ae0a845bde5b95dfc319cadf366cb7b3fb1ca92",
                "html_url": "https://github.com/facebook/react/commit/1ae0a845bde5b95dfc319cadf366cb7b3fb1ca92"
            }
        ]
    },
    {
        "sha": "1ae0a845bde5b95dfc319cadf366cb7b3fb1ca92",
        "node_id": "C_kwDOAJy2KtoAKDFhZTBhODQ1YmRlNWI5NWRmYzMxOWNhZGYzNjZjYjdiM2ZiMWNhOTI",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-06-03T15:30:17Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T15:30:17Z"
            },
            "message": "Use underscore instead of \u00ab \u00bb for useId algorithm (#33422)\n\nAlternative to #33421. The difference is that this also adds an\nunderscore between the \"R\" and the ID.\n\nThe reason we wanted to use special characters is because we use the\nfull spectrum of A-Z 0-9 in our ID generation so we can basically\ncollide with any common word (or anyone using a similar algorithm,\nbase64 or even base16). It's a little less likely that someone would put\n`_R_` specifically unless you generate like two IDs separated by\nunderscore.\n\n\n![9w2ogt](https://github.com/user-attachments/assets/21b2d2ac-1a3a-4657-ba0b-1616e49dfdee)",
            "tree": {
                "sha": "c77d5a5e3dbfdb497878bcaad1637671d1263127",
                "url": "https://api.github.com/repos/facebook/react/git/trees/c77d5a5e3dbfdb497878bcaad1637671d1263127"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/1ae0a845bde5b95dfc319cadf366cb7b3fb1ca92",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoPxUJCRC1aQ7uu5UhlAAAOogQAI2hKDugxMR0x4JR+xmuwa/k\nYd8ofMATP9lhFc4kbrSnuNUdZ3PFOjNzXxf+lt5qy0Js2lRMauS2qhtCUDJVS3Pe\ngyQJGHWzbxeRaItSsp8oBmOKPJZSrrupxEMzXFgHB8myJ7vT5BfE/GsYlnZ8DFnI\nwxTScJ35w3a2XE1EyenDGNhGUKt5tYSlYOMJ648Jy2SRHJcrhwstGeFS5i7Tc/FJ\nB5y+8NQxpoActmKhbZiv42fXw/3OjMo/bgnXfbw1zo6wJV5jVW2cv5PM1RQrpS1d\nJaAdK7hDAMDKQTL9cGEZlaPNKcE0QrEleoSjgvQyeLDO6gvBwYHNm7ZZ9S+n0RtK\nfwb7sscMrWr9oE0NGUrgZpP7boywFNTnU7e26ZbCMfiookXBKDA9A6uqq7lmAoH3\nczNPdWnZrC0wslR4HNztgNGGDAoUbvCRbzlomXdZefz+NYPMm+4FROBRAXHGcEsQ\nTMEqEn9sMnHMhfcoThLS2/hvVWqQxt/qD2pOfjvGKat/dGp/nIA+0sZKKyOVx2ry\n29GH9enOv+Kr+gJAY3UenOff6Vf7wq/cSrmjq+eTITEeazPYAXKNQbKnhLZRQ3EZ\n7mn8m3bklQlrKlfBHz+C97mqxmYj5dy3LLyLMO5nCH9wGyvT3/jwWyXFdWTVeH1T\nuZiw5xrk9axY3dDU5d4/\n=8GS2\n-----END PGP SIGNATURE-----\n",
                "payload": "tree c77d5a5e3dbfdb497878bcaad1637671d1263127\nparent 2b4064eb9b40f65d20a03ce93b246ad762d562e6\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748964617 -0400\ncommitter GitHub <noreply@github.com> 1748964617 -0400\n\nUse underscore instead of \u00ab \u00bb for useId algorithm (#33422)\n\nAlternative to #33421. The difference is that this also adds an\nunderscore between the \"R\" and the ID.\n\nThe reason we wanted to use special characters is because we use the\nfull spectrum of A-Z 0-9 in our ID generation so we can basically\ncollide with any common word (or anyone using a similar algorithm,\nbase64 or even base16). It's a little less likely that someone would put\n`_R_` specifically unless you generate like two IDs separated by\nunderscore.\n\n\n![9w2ogt](https://github.com/user-attachments/assets/21b2d2ac-1a3a-4657-ba0b-1616e49dfdee)",
                "verified_at": "2025-06-03T15:30:19Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/1ae0a845bde5b95dfc319cadf366cb7b3fb1ca92",
        "html_url": "https://github.com/facebook/react/commit/1ae0a845bde5b95dfc319cadf366cb7b3fb1ca92",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/1ae0a845bde5b95dfc319cadf366cb7b3fb1ca92/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "2b4064eb9b40f65d20a03ce93b246ad762d562e6",
                "url": "https://api.github.com/repos/facebook/react/commits/2b4064eb9b40f65d20a03ce93b246ad762d562e6",
                "html_url": "https://github.com/facebook/react/commit/2b4064eb9b40f65d20a03ce93b246ad762d562e6"
            }
        ]
    },
    {
        "sha": "2b4064eb9b40f65d20a03ce93b246ad762d562e6",
        "node_id": "C_kwDOAJy2KtoAKDJiNDA2NGViOWI0MGY2NWQyMGEwM2NlOTNiMjQ2YWQ3NjJkNTYyZTY",
        "commit": {
            "author": {
                "name": "Jorge Cabiedes",
                "email": "57368278+jorge-cab@users.noreply.github.com",
                "date": "2025-06-03T04:42:34Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T04:42:34Z"
            },
            "message": "[mcp] Add MCP tool to print out the component tree of the currently open React App (#33305)\n\n## Summary\n\nThis tool leverages DevTools to get the component tree from the\ncurrently open React App. This gives realtime information to agents\nabout the state of the app.\n\n## How did you test this change?\n\nTested integration with Claude Desktop",
            "tree": {
                "sha": "cec5492164ec22d979ca32be846e0b274225ce1d",
                "url": "https://api.github.com/repos/facebook/react/git/trees/cec5492164ec22d979ca32be846e0b274225ce1d"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/2b4064eb9b40f65d20a03ce93b246ad762d562e6",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoPn06CRC1aQ7uu5UhlAAACMAQABi/maTN5ikpWIuyXWY07n3w\njNbsMKeEaeGcLFHu11FbfjUSuUgHgacq9KVE5zc/3Z1hw4U11VRTEw3fFFqwjUEs\neHL7b5Gh2snBV73v2BshpWIKdAs8zuDoO7FNl5tv/WpTAvkRHg9UwcnOZRfnVyud\nITJcP8DvXdkbiys8FFlw7okVqQYHzdZgo+7IGPri7Rx37uSxPhgeruKPswOTPgtJ\nmQSaQh7eFfncZdKkJkjP0cv7oRitznhFOfvTDeoTJQTTyYEfHYVuG+iMEmkWbppJ\ny219FvC8KJ4wQuRPH4OP+x0hioAN2kjRd4m6E/ZH9aj7bAny2+T2une9DQpTEwit\nywlTYwaODTQRkSpyk4cgjcYT2h+56VYla8PLRFn8pBaHWj6oh9Tzhn5oitm8u9q4\nCD9JXrBjqVIoXXaBwy5RzzPtH1gpAyV/A3kJBGEN57CduqaUPNyhvtOyNOGK57em\nxBfHsemMEQnDfHk6BS2bwZ6Ut3I0H/R3GTBLCRk6o3LhWYZShSU6cK2OQGMI1li0\n+P26ZgFP8GlQFAk4PbyWGvyRlbmLUWIP4AiWyB+ZA/0VZAXynaQwevqAM3X6EfH/\npPeQcjZlkHRzLv7Ib1OQOBNs5A0Z9F8UraM7Zn3wOBCvHfK5EgIGC3BobqZwEDXF\nS/dYXMavQjlF89SVdS2Z\n=eesN\n-----END PGP SIGNATURE-----\n",
                "payload": "tree cec5492164ec22d979ca32be846e0b274225ce1d\nparent 3531b2672955285c0a59f84be06ac92b0d987a3e\nauthor Jorge Cabiedes <57368278+jorge-cab@users.noreply.github.com> 1748925754 -0700\ncommitter GitHub <noreply@github.com> 1748925754 -0700\n\n[mcp] Add MCP tool to print out the component tree of the currently open React App (#33305)\n\n## Summary\n\nThis tool leverages DevTools to get the component tree from the\ncurrently open React App. This gives realtime information to agents\nabout the state of the app.\n\n## How did you test this change?\n\nTested integration with Claude Desktop",
                "verified_at": "2025-06-03T04:42:36Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/2b4064eb9b40f65d20a03ce93b246ad762d562e6",
        "html_url": "https://github.com/facebook/react/commit/2b4064eb9b40f65d20a03ce93b246ad762d562e6",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/2b4064eb9b40f65d20a03ce93b246ad762d562e6/comments",
        "author": {
            "login": "jorge-cab",
            "id": 57368278,
            "node_id": "MDQ6VXNlcjU3MzY4Mjc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/57368278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jorge-cab",
            "html_url": "https://github.com/jorge-cab",
            "followers_url": "https://api.github.com/users/jorge-cab/followers",
            "following_url": "https://api.github.com/users/jorge-cab/following{/other_user}",
            "gists_url": "https://api.github.com/users/jorge-cab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jorge-cab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jorge-cab/subscriptions",
            "organizations_url": "https://api.github.com/users/jorge-cab/orgs",
            "repos_url": "https://api.github.com/users/jorge-cab/repos",
            "events_url": "https://api.github.com/users/jorge-cab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jorge-cab/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "3531b2672955285c0a59f84be06ac92b0d987a3e",
                "url": "https://api.github.com/repos/facebook/react/commits/3531b2672955285c0a59f84be06ac92b0d987a3e",
                "html_url": "https://github.com/facebook/react/commit/3531b2672955285c0a59f84be06ac92b0d987a3e"
            }
        ]
    },
    {
        "sha": "3531b2672955285c0a59f84be06ac92b0d987a3e",
        "node_id": "C_kwDOAJy2KtoAKDM1MzFiMjY3Mjk1NTI4NWMwYTU5Zjg0YmUwNmFjOTJiMGQ5ODdhM2U",
        "commit": {
            "author": {
                "name": "Ricky",
                "email": "rickhanlonii@gmail.com",
                "date": "2025-06-03T04:00:28Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-03T04:00:28Z"
            },
            "message": "[scripts] Switch back to flow parser for prettier (#33414)\n\nPrettier 3.3 (which we're on) should support modern flow features\naccording to https://prettier.io/blog/2024/06/01/3.3.0",
            "tree": {
                "sha": "9e3a3a8d38759ed87d648769f3add279a7e52523",
                "url": "https://api.github.com/repos/facebook/react/git/trees/9e3a3a8d38759ed87d648769f3add279a7e52523"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/3531b2672955285c0a59f84be06ac92b0d987a3e",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoPnNcCRC1aQ7uu5UhlAAAyGgQAC1ugg6cvPmiHRifP3h5y/6H\ntYC+kaDpYnUM40zyGaIpaYywNQ9lnL0ihbyXf/DHM7M07Mm/9RYOQ6ZdnIaNrSQb\nOhft3Z5oYvsNwG1Z37ijodAdVMsCDagdnnAStviF4iSQYO9pV6H63YksXNebnXUm\nf3qp4OGGw52qOORZK1FenU5YdbEIklxyTcSw0Ysw4GlQCvwJs5RQDT25biXa5rIv\ndNLg5+C/aAhzK+8mh01RRHjtNIvee/lsc5eG+nt0kd2s7I4AiUNvMMAfOMQ+dw/o\nIrUTFYA6q9G1QkCfU+bPSjliv+yoisgQDRSwKoe6KTk+gSKLxAI7p/e2j893oPXj\nJv3xIDhW3aarLtM+h1Lx3OOdzzdvmBxMBVmCXe2t5qMvIOq2PN9iTZOkBkrOwXtR\npbMC+N0RGQkiETMz6Vyc8uJglLPnEJi0zGIWRr2Lkhm5Z95HVLrWtIcpfG/8M3rY\nUpQ1j38d6yvcX3ssBPW+f5+Gq7hEX0MPM+pl3gTaJIC9GtxRyQYZ+zYNQ74JlxeZ\nXnFRkvdh1fF3k05zaDDcYR8CmW3NlV2R4RR5IVqaGsEiAqOaq4YLu0mPRW/05975\nVZQDcaE/Kjm4kF0J4iOytD4XypvXR47alq/WnYQhtHjlxIQ8T1QGBJwURDvsgUcX\n29nfZInsBB0V2BVsS8CN\n=0lno\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 9e3a3a8d38759ed87d648769f3add279a7e52523\nparent 4a1f29079ccc61659e026bbcf205bc8d53780927\nauthor Ricky <rickhanlonii@gmail.com> 1748923228 -0400\ncommitter GitHub <noreply@github.com> 1748923228 -0400\n\n[scripts] Switch back to flow parser for prettier (#33414)\n\nPrettier 3.3 (which we're on) should support modern flow features\naccording to https://prettier.io/blog/2024/06/01/3.3.0",
                "verified_at": "2025-06-03T04:00:31Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/3531b2672955285c0a59f84be06ac92b0d987a3e",
        "html_url": "https://github.com/facebook/react/commit/3531b2672955285c0a59f84be06ac92b0d987a3e",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/3531b2672955285c0a59f84be06ac92b0d987a3e/comments",
        "author": {
            "login": "rickhanlonii",
            "id": 2440089,
            "node_id": "MDQ6VXNlcjI0NDAwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2440089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rickhanlonii",
            "html_url": "https://github.com/rickhanlonii",
            "followers_url": "https://api.github.com/users/rickhanlonii/followers",
            "following_url": "https://api.github.com/users/rickhanlonii/following{/other_user}",
            "gists_url": "https://api.github.com/users/rickhanlonii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rickhanlonii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rickhanlonii/subscriptions",
            "organizations_url": "https://api.github.com/users/rickhanlonii/orgs",
            "repos_url": "https://api.github.com/users/rickhanlonii/repos",
            "events_url": "https://api.github.com/users/rickhanlonii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rickhanlonii/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "4a1f29079ccc61659e026bbcf205bc8d53780927",
                "url": "https://api.github.com/repos/facebook/react/commits/4a1f29079ccc61659e026bbcf205bc8d53780927",
                "html_url": "https://github.com/facebook/react/commit/4a1f29079ccc61659e026bbcf205bc8d53780927"
            }
        ]
    },
    {
        "sha": "4a1f29079ccc61659e026bbcf205bc8d53780927",
        "node_id": "C_kwDOAJy2KtoAKDRhMWYyOTA3OWNjYzYxNjU5ZTAyNmJiY2YyMDViYzhkNTM3ODA5Mjc",
        "commit": {
            "author": {
                "name": "Sebastian \"Sebbie\" Silbermann",
                "email": "sebastian.silbermann@vercel.com",
                "date": "2025-06-02T17:27:49Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-02T17:27:49Z"
            },
            "message": "[Fizz] Add Owner Stacks when render is aborted (#32735)",
            "tree": {
                "sha": "f8088950098ad83a0611f7360721ed207946bd32",
                "url": "https://api.github.com/repos/facebook/react/git/trees/f8088950098ad83a0611f7360721ed207946bd32"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/4a1f29079ccc61659e026bbcf205bc8d53780927",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoPd8VCRC1aQ7uu5UhlAAAJ1EQAHP0tbPv1bJejZsxRdm02dWh\nwuZiaucURkgNa9kVYvNpCANm254vEc8uAUYksNUx2Jnh6XSmkPsy6JSmlLpdwDXq\npeqh/5JrdcXaQW48VmKevDlpAW1MHFtbXzaqH4v4rFmENHez2oQLBJLxdvD4bj3t\ntmYlmoqo8hFuFbWKdcwR93KUukqAn3P0xnApq8NZzZlsmjWdCNKqcmaZ2Xr9rCfo\nx+XZr49LmTDWi6lCEU3+CfENjh0+6RwfLq7+2gSJ+cEiY1ZIczEOOmhrVR34ue+G\nZRB2x0kn6fhfjyCcwAFPVqFsm9rl4BrAPWYf5FsUIK9Yri2xaJHsBiserjo4Zm1U\nk9cXY9T5y2eQyY/UPreQnShJM0aLObE02JDLxhVFvW8qMFxxbaHlkGdNdtGtalNT\n01Z9vsCJneQ28dapfbWY5ZGF0dfW3MwmOeiDPV+NqonprKztbBOg27OksEsFm0lO\nG1q/BgFMReGQOpdDrAHZAzvbyhhPh/coNTuB8CkI1M53B+voQBEom4VzIPNxOwTy\nTb4tpDjJZVDaKH7oo+Twnxm38Yy9B62JnkgYd+355blPnCYmLaspG0iz5HrI0+R9\nYQHg9Kn8i1bzN3EmWQ02KZml7aRUl639WJ0mjV37mnzEjPDdjfa1O3gK7Tg6IrFz\nhB4sKvST4Po3qY9rwGac\n=0D8d\n-----END PGP SIGNATURE-----\n",
                "payload": "tree f8088950098ad83a0611f7360721ed207946bd32\nparent 526dd340b3e77193846fe5eed02b9bb89d7c2d15\nauthor Sebastian \"Sebbie\" Silbermann <sebastian.silbermann@vercel.com> 1748885269 +0200\ncommitter GitHub <noreply@github.com> 1748885269 +0200\n\n[Fizz] Add Owner Stacks when render is aborted (#32735)\n\n",
                "verified_at": "2025-06-02T17:27:52Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/4a1f29079ccc61659e026bbcf205bc8d53780927",
        "html_url": "https://github.com/facebook/react/commit/4a1f29079ccc61659e026bbcf205bc8d53780927",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/4a1f29079ccc61659e026bbcf205bc8d53780927/comments",
        "author": {
            "login": "eps1lon",
            "id": 12292047,
            "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/12292047?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eps1lon",
            "html_url": "https://github.com/eps1lon",
            "followers_url": "https://api.github.com/users/eps1lon/followers",
            "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
            "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
            "organizations_url": "https://api.github.com/users/eps1lon/orgs",
            "repos_url": "https://api.github.com/users/eps1lon/repos",
            "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eps1lon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "526dd340b3e77193846fe5eed02b9bb89d7c2d15",
                "url": "https://api.github.com/repos/facebook/react/commits/526dd340b3e77193846fe5eed02b9bb89d7c2d15",
                "html_url": "https://github.com/facebook/react/commit/526dd340b3e77193846fe5eed02b9bb89d7c2d15"
            }
        ]
    },
    {
        "sha": "526dd340b3e77193846fe5eed02b9bb89d7c2d15",
        "node_id": "C_kwDOAJy2KtoAKDUyNmRkMzQwYjNlNzcxOTM4NDZmZTVlZWQwMmI5YmI4OWQ3YzJkMTU",
        "commit": {
            "author": {
                "name": "mofeiZ",
                "email": "34200447+mofeiZ@users.noreply.github.com",
                "date": "2025-06-02T15:43:45Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-06-02T15:43:45Z"
            },
            "message": "[compiler][patch] Emit unary expressions instead of negative numbers (#33383)\n\nThis is a babel bug + edge case.\n\nBabel compact mode produces invalid JavaScript (i.e. parse error) when\ngiven a `NumericLiteral` with a negative value.\n\nSee https://codesandbox.io/p/devbox/5d47fr for repro.",
            "tree": {
                "sha": "a235b0743c2d318b5de9052b9145931df285b924",
                "url": "https://api.github.com/repos/facebook/react/git/trees/a235b0743c2d318b5de9052b9145931df285b924"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/526dd340b3e77193846fe5eed02b9bb89d7c2d15",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoPcaxCRC1aQ7uu5UhlAAANBkQAJUBFwDBOpUOoYwYkI6h/paK\nWIp2ebCgAMgUQsJy1oguv7d3RY6Rlt5y9ti3cbTdbQP4LbPMst7Tt5oxSZ59XjjK\nSeov7akpaYlhD9LFDn/f/+Yk7x3nRezWY9aWx+hMxJgKjqkmxzVQJWYOf3eWKKSz\nVmvYrxyC6ZOpcRgwUI0F0i8YqIHQFVHgdgsS/2PWVwjbbe48z9vYcQnPrD2+P3Wd\nPWtKkzvg1WrJ2mbzYyDtiDDDFGQnyDXXvzy85Uc/ps+de/8Sw4BrI58Um4uRH56I\naVaBmRDY+FhBdHArpBSe0rv1VEh1qJrF/4tmdckJAbFTn3iWmrQpYq86BWnhXQIO\nar3cEOsf128SfxAHyLiMldEYgBfwuIsSdtja8qA78BkQgzRZOr3adkUjAYZ4trYs\nlwcgvx7weIS0U8lzoBCCNhhmq7hw98A8NGNYL9a2HromBRQQtJcQ/VvLJ0Olfbr3\n6fNHmcCVRVRZkLEqSjAlt7/fEcNfeJF/pdzQHd17K2sm61zpsvw0l74fW42LAgMi\njKzn8Z9nSTKB1AHbSmhL5rkiCukIudJb9G06o82XLMLl9sfyEKjFFjprM1JIyK5q\n5sLJYugh42hdEJyeXiNQEMc0VVMbsdahTZ6Sv+PlODPFLHvPjAGnsw/J5AlH2LZQ\nki7fc8RwrIyDOORREcg3\n=H7qE\n-----END PGP SIGNATURE-----\n",
                "payload": "tree a235b0743c2d318b5de9052b9145931df285b924\nparent ee76351917106c6146745432a52e9a54a41ee181\nauthor mofeiZ <34200447+mofeiZ@users.noreply.github.com> 1748879025 -0400\ncommitter GitHub <noreply@github.com> 1748879025 -0400\n\n[compiler][patch] Emit unary expressions instead of negative numbers (#33383)\n\nThis is a babel bug + edge case.\n\nBabel compact mode produces invalid JavaScript (i.e. parse error) when\ngiven a `NumericLiteral` with a negative value.\n\nSee https://codesandbox.io/p/devbox/5d47fr for repro.\n",
                "verified_at": "2025-06-02T15:43:47Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/526dd340b3e77193846fe5eed02b9bb89d7c2d15",
        "html_url": "https://github.com/facebook/react/commit/526dd340b3e77193846fe5eed02b9bb89d7c2d15",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/526dd340b3e77193846fe5eed02b9bb89d7c2d15/comments",
        "author": {
            "login": "mofeiZ",
            "id": 34200447,
            "node_id": "MDQ6VXNlcjM0MjAwNDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/34200447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mofeiZ",
            "html_url": "https://github.com/mofeiZ",
            "followers_url": "https://api.github.com/users/mofeiZ/followers",
            "following_url": "https://api.github.com/users/mofeiZ/following{/other_user}",
            "gists_url": "https://api.github.com/users/mofeiZ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mofeiZ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mofeiZ/subscriptions",
            "organizations_url": "https://api.github.com/users/mofeiZ/orgs",
            "repos_url": "https://api.github.com/users/mofeiZ/repos",
            "events_url": "https://api.github.com/users/mofeiZ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mofeiZ/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "ee76351917106c6146745432a52e9a54a41ee181",
                "url": "https://api.github.com/repos/facebook/react/commits/ee76351917106c6146745432a52e9a54a41ee181",
                "html_url": "https://github.com/facebook/react/commit/ee76351917106c6146745432a52e9a54a41ee181"
            }
        ]
    },
    {
        "sha": "ee76351917106c6146745432a52e9a54a41ee181",
        "node_id": "C_kwDOAJy2KtoAKGVlNzYzNTE5MTcxMDZjNjE0Njc0NTQzMmE1MmU5YTU0YTQxZWUxODE",
        "commit": {
            "author": {
                "name": "Wesley LeMahieu",
                "email": "wlemahieu@users.noreply.github.com",
                "date": "2025-05-30T23:31:16Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-30T23:31:16Z"
            },
            "message": "fix typo in compiler validation filename (#33345)\n\n## Summary\n\nWhile investigating the root cause of #33208, I noticed a clear typo for\none of the validation files.\n\n## How did you test this change?\n\nInside `/react/compiler/packages/babel-plugin-react-compiler` I ran the\ntest script successfully:\n\n<img width=\"415\" alt=\"Screenshot at May 22 16-43-06\"\nsrc=\"https://github.com/user-attachments/assets/3fe8c5e1-37ce-4a31-b35e-7e323e57cd9d\"\n/>",
            "tree": {
                "sha": "6b90209021d16dd3dc65e7c013ad505e4c6b2461",
                "url": "https://api.github.com/repos/facebook/react/git/trees/6b90209021d16dd3dc65e7c013ad505e4c6b2461"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/ee76351917106c6146745432a52e9a54a41ee181",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoOj/ECRC1aQ7uu5UhlAAANWkQAHm/yurr1z02ZAMTxcOyK3xq\nNCBdgJ4CyHvj96AcflktAJYYKRC/nE1+oOmK5mlDlm/vjn0kjNUpngxY7Fluu/qm\niuMXF0qeB/NyleTzU0mN6Nw7iUIum+JFi54QgundEt9E8sIPvg0ibfPvJiTRBgSX\nI8eR9tHFbE0KX/HocujLHt2Mksue5FcZF6Cz3085R8FPuydRujuy2mblxM0oWgpA\nqHOrtS8jJ3od84s0+xe9I6eds2F+IgrOdrmijxCd2xLsIgkChnatji35d8dF/DAY\nyOWuMmjp/nViwxawMqww/2odeMJsB5YQ9zcEykoT7txEtTMDTsG569/d6Eb+FLQZ\nCG133TRQV7icaajMLkO5ENJZfTaVO6z/lECAePYUQ46EuYuntDoRHyvNRpzI58C5\nWKvjaCWCdUwnUNrG4/+7fgJme6Q659eBzFX7VaRB7Wq4v93oODz949mKax6Y1VjJ\nhV+0r+ezFGaimalzujoVrO4vcxbOXIkoNJJxCTYJU7oIOPBMhVWhmOnWopohcZvM\nVCcVabP7LjxOLfZ3e77t5X5YqpSKCzNRQphGTVLew92kXTdj7CppD4VtPebmqL5C\n5cYOQK+Dq3/iHfGQzyG9TOegFGZIpLva6VNxCHDYxzasuLRso3J15xPiJc2k4WGP\nuoJ/k/25GkTWojlxO3v2\n=fPe2\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 6b90209021d16dd3dc65e7c013ad505e4c6b2461\nparent 8b55eb4e724271206bd5dec7dba0a35aedc74493\nauthor Wesley LeMahieu <wlemahieu@users.noreply.github.com> 1748647876 -0700\ncommitter GitHub <noreply@github.com> 1748647876 -0700\n\nfix typo in compiler validation filename (#33345)\n\n## Summary\n\nWhile investigating the root cause of #33208, I noticed a clear typo for\none of the validation files.\n\n## How did you test this change?\n\nInside `/react/compiler/packages/babel-plugin-react-compiler` I ran the\ntest script successfully:\n\n<img width=\"415\" alt=\"Screenshot at May 22 16-43-06\"\nsrc=\"https://github.com/user-attachments/assets/3fe8c5e1-37ce-4a31-b35e-7e323e57cd9d\"\n/>",
                "verified_at": "2025-05-30T23:31:18Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/ee76351917106c6146745432a52e9a54a41ee181",
        "html_url": "https://github.com/facebook/react/commit/ee76351917106c6146745432a52e9a54a41ee181",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/ee76351917106c6146745432a52e9a54a41ee181/comments",
        "author": {
            "login": "wlemahieu",
            "id": 9045737,
            "node_id": "MDQ6VXNlcjkwNDU3Mzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9045737?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wlemahieu",
            "html_url": "https://github.com/wlemahieu",
            "followers_url": "https://api.github.com/users/wlemahieu/followers",
            "following_url": "https://api.github.com/users/wlemahieu/following{/other_user}",
            "gists_url": "https://api.github.com/users/wlemahieu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wlemahieu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wlemahieu/subscriptions",
            "organizations_url": "https://api.github.com/users/wlemahieu/orgs",
            "repos_url": "https://api.github.com/users/wlemahieu/repos",
            "events_url": "https://api.github.com/users/wlemahieu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wlemahieu/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "8b55eb4e724271206bd5dec7dba0a35aedc74493",
                "url": "https://api.github.com/repos/facebook/react/commits/8b55eb4e724271206bd5dec7dba0a35aedc74493",
                "html_url": "https://github.com/facebook/react/commit/8b55eb4e724271206bd5dec7dba0a35aedc74493"
            }
        ]
    },
    {
        "sha": "8b55eb4e724271206bd5dec7dba0a35aedc74493",
        "node_id": "C_kwDOAJy2KtoAKDhiNTVlYjRlNzI0MjcxMjA2YmQ1ZGVjN2RiYTBhMzVhZWRjNzQ0OTM",
        "commit": {
            "author": {
                "name": "Pieter De Baets",
                "email": "pieterdb@meta.com",
                "date": "2025-05-30T16:17:59Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-30T16:17:59Z"
            },
            "message": "Cleanup props diffing experiments (#33381)\n\n## Summary\n\nWe completed testing on these internally, so can cleanup the separate\nfast and slow paths and remove the `enableShallowPropDiffing` flag which\nwe're not pursuing.\n\n## How did you test this change?\n\n```\nyarn test ReactNativeAttributePayloadFabric\n```",
            "tree": {
                "sha": "f3e97f9c47e97517724f8d2215112cac8f0d4f17",
                "url": "https://api.github.com/repos/facebook/react/git/trees/f3e97f9c47e97517724f8d2215112cac8f0d4f17"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/8b55eb4e724271206bd5dec7dba0a35aedc74493",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoOdo3CRC1aQ7uu5UhlAAAYPkQAHFv67PELWIWkEOipx5G2Tgk\nz5IVVPbJBI/8x/QYH1qg/FGclBSZLPavZu/+8jXnJ8SbcKvzSpp83HKGBWTBy+os\n85PuL4JOb/Ru6HxL0UsNYtnnL+NmpyrYyaH4YkQTGQmwAO4s6CBPMtDlVzkizSYT\nhunYQOQkbBLNCuAYgzxPNXemQkIMjG1q9np1ZNVy+rHpYXnAQpnXsnFoweFYCX06\nhzSpyW6HqrIfWzg0Q2CVBrslr8OewQg8bUcYqCktlRcRU9zhC5VxOeMli8MdNiH/\n6hKLj6kyKu+PdnbVCCWcF2mvb4fVo3X3KzIK3ZFA5foFyLLnBTyDQk4sLpZtI1wg\nkOmPNazOas1FXSfmUc7gxChKlI8R/4GwT3d7HudnGsXySkSnf/4+Rg3YeTmiHQlH\nH+Pn1n3zwQOC9MEIMJ/vUfzuH59qcYNYr78bMAHGaCtxBcfqeLrFuBsm0iOlpQV5\nMzd+nkRKCDHXeUb6Q3M2IuRGTw0PX9RIbIVskwbngMdJ4FpxOC4Fa/T/U/AvKYMh\n+99sOamJnDFktdOFeAP4r/mxrwSKRZibA0hAhRqaxmpqZrEZWdAVwKhZ0tHg5Gs3\nveYRw2YXkeaR+Cx4LRi9cPpvFcxZPpIK1SYgwPHzJ8DDtWx5WB8XlEO25g2P2rFJ\nfIIPbmmcyffT/FyJFKJO\n=besx\n-----END PGP SIGNATURE-----\n",
                "payload": "tree f3e97f9c47e97517724f8d2215112cac8f0d4f17\nparent 14094f80cbf52cad4024211080d8491f3334ef61\nauthor Pieter De Baets <pieterdb@meta.com> 1748621879 +0100\ncommitter GitHub <noreply@github.com> 1748621879 +0100\n\nCleanup props diffing experiments (#33381)\n\n## Summary\n\nWe completed testing on these internally, so can cleanup the separate\nfast and slow paths and remove the `enableShallowPropDiffing` flag which\nwe're not pursuing.\n\n## How did you test this change?\n\n```\nyarn test ReactNativeAttributePayloadFabric\n```",
                "verified_at": "2025-05-30T16:18:02Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/8b55eb4e724271206bd5dec7dba0a35aedc74493",
        "html_url": "https://github.com/facebook/react/commit/8b55eb4e724271206bd5dec7dba0a35aedc74493",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/8b55eb4e724271206bd5dec7dba0a35aedc74493/comments",
        "author": {
            "login": "javache",
            "id": 5676,
            "node_id": "MDQ6VXNlcjU2NzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/javache",
            "html_url": "https://github.com/javache",
            "followers_url": "https://api.github.com/users/javache/followers",
            "following_url": "https://api.github.com/users/javache/following{/other_user}",
            "gists_url": "https://api.github.com/users/javache/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/javache/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/javache/subscriptions",
            "organizations_url": "https://api.github.com/users/javache/orgs",
            "repos_url": "https://api.github.com/users/javache/repos",
            "events_url": "https://api.github.com/users/javache/events{/privacy}",
            "received_events_url": "https://api.github.com/users/javache/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "14094f80cbf52cad4024211080d8491f3334ef61",
                "url": "https://api.github.com/repos/facebook/react/commits/14094f80cbf52cad4024211080d8491f3334ef61",
                "html_url": "https://github.com/facebook/react/commit/14094f80cbf52cad4024211080d8491f3334ef61"
            }
        ]
    },
    {
        "sha": "14094f80cbf52cad4024211080d8491f3334ef61",
        "node_id": "C_kwDOAJy2KtoAKDE0MDk0ZjgwY2JmNTJjYWQ0MDI0MjExMDgwZDg0OTFmMzMzNGVmNjE",
        "commit": {
            "author": {
                "name": "Mateusz Burzy\u0144ski",
                "email": "mateuszburzynski@gmail.com",
                "date": "2025-05-29T15:17:10Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-29T15:17:10Z"
            },
            "message": "Allow `nonce` to be used on hoistable styles (#32461)\n\nfixes https://github.com/facebook/react/issues/32449\n\nThis is my first time touching this code. There are multiple systems in\nplace here and I wouldn't be surprised to learn that this has to be\nhandled in some other areas too. I have found some other style-related\ncode areas but I had no time yet to double-check them.\n\ncc @gnoff",
            "tree": {
                "sha": "7ed86f6ca098b8e238703868cd3fe8be1df1a41f",
                "url": "https://api.github.com/repos/facebook/react/git/trees/7ed86f6ca098b8e238703868cd3fe8be1df1a41f"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/14094f80cbf52cad4024211080d8491f3334ef61",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoOHp2CRC1aQ7uu5UhlAAAeFMQADXWbS6vMAepgUEvVGo5VSWe\nB6tBVsYXxRA8zYzFg52u40Nm+nC/8mcL8WYeB022It0V9KGwGZghtHlBltTXbcwr\nAQZEfpmJz+ckfUlmcD4jIv097unOFe7WbGWA9OQNJ+p76jdLPWCVFcF5quGoTVU+\nykr1JFH3iwzCs0Ulh28jt649Hf4IAb0iFEtYOYyVSqkwBu1vOmosJ076cOEgcFsC\n054ZA9xQVsTGIDABtzLOa9NHaL0l/tpYbHiGusYnJDIyyLrOIUZRnl7o4JlvgRxg\nmGVbnQ0fAG1VWs91tTyUwO6Knc9X1+2o08TQi3SUcBA5R0L9uLHfNwysLegom+mm\n767XBDLATLgXRJ0+7RECED2bCCYBxD2RAOXp/SZUft+nlVu/vgeHW0bhELAk0MWb\n3vpAwmEKKpCl6MmQV9H0L1zZaPlYUvkFD0sFWhEPrVPxyoQweN0A1UPpeGXcFcVu\nXmnHg1/7AChfLIu3H/1kGlkNglg/LGxkTM+40qwTVv5l2bTJjQMraXQYLlJqE3lX\njrGyqJiM+aVzYhheZ/3czV7whL9itwmwLEKbU1+eugKt9ckrn9W1VWQ23D9xrF7H\nbiUEWFrVVJKse1tSgTofpUNhnmSCH8LfNLjEJUZrLWI/INyJ1xjGen4m6B5tuMEh\n/QwZ7TmIupTX1pjDjbC7\n=ID7z\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 7ed86f6ca098b8e238703868cd3fe8be1df1a41f\nparent 5717f1933f2e8b10406fde1043c3047cbfbddc82\nauthor Mateusz Burzy\u0144ski <mateuszburzynski@gmail.com> 1748531830 +0200\ncommitter GitHub <noreply@github.com> 1748531830 -0700\n\nAllow `nonce` to be used on hoistable styles (#32461)\n\nfixes https://github.com/facebook/react/issues/32449\n\nThis is my first time touching this code. There are multiple systems in\nplace here and I wouldn't be surprised to learn that this has to be\nhandled in some other areas too. I have found some other style-related\ncode areas but I had no time yet to double-check them.\n\ncc @gnoff",
                "verified_at": "2025-05-29T15:17:12Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/14094f80cbf52cad4024211080d8491f3334ef61",
        "html_url": "https://github.com/facebook/react/commit/14094f80cbf52cad4024211080d8491f3334ef61",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/14094f80cbf52cad4024211080d8491f3334ef61/comments",
        "author": {
            "login": "Andarist",
            "id": 9800850,
            "node_id": "MDQ6VXNlcjk4MDA4NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9800850?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Andarist",
            "html_url": "https://github.com/Andarist",
            "followers_url": "https://api.github.com/users/Andarist/followers",
            "following_url": "https://api.github.com/users/Andarist/following{/other_user}",
            "gists_url": "https://api.github.com/users/Andarist/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Andarist/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Andarist/subscriptions",
            "organizations_url": "https://api.github.com/users/Andarist/orgs",
            "repos_url": "https://api.github.com/users/Andarist/repos",
            "events_url": "https://api.github.com/users/Andarist/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Andarist/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "5717f1933f2e8b10406fde1043c3047cbfbddc82",
                "url": "https://api.github.com/repos/facebook/react/commits/5717f1933f2e8b10406fde1043c3047cbfbddc82",
                "html_url": "https://github.com/facebook/react/commit/5717f1933f2e8b10406fde1043c3047cbfbddc82"
            }
        ]
    },
    {
        "sha": "5717f1933f2e8b10406fde1043c3047cbfbddc82",
        "node_id": "C_kwDOAJy2KtoAKDU3MTdmMTkzM2YyZThiMTA0MDZmZGUxMDQzYzMwNDdjYmZiZGRjODI",
        "commit": {
            "author": {
                "name": "Sebastian \"Sebbie\" Silbermann",
                "email": "sebastian.silbermann@vercel.com",
                "date": "2025-05-28T17:46:12Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-28T17:46:12Z"
            },
            "message": "[react-dom] Enforce small gap between completed navigation and default Transition indicator (#33354)",
            "tree": {
                "sha": "9e57338a012409324bb35caf5f03f7ce6bc8fce6",
                "url": "https://api.github.com/repos/facebook/react/git/trees/9e57338a012409324bb35caf5f03f7ce6bc8fce6"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/5717f1933f2e8b10406fde1043c3047cbfbddc82",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoN0vkCRC1aQ7uu5UhlAAABiYQAAzyihg3uX2tU/tA2OvAtY+g\nKd0SixpcK9wggyqgw0fYoVIsOA5SCs4hSEagq3L4ulZECz3JwP+x0Iu7g9+Pmtc2\ntH5vgQ8LlpAvKKL1BmgaVruhJaE1BY4R2tYp+XSBl3sAloNGxeegq7Xjndev7cqU\nkwdI0vlARggvzvh5F5qU7NB4t7nW9dP4Ge3jmVl1JvULM2BuacN/OvzCJ+splpS+\nuylDBxpgpkKL45ThRPdRShSqST2jOBEAUXr468hbQM4MWZ+ncTyKGfWZ1ToBZEfD\nLGXYYpTpmqtle4pQnO4F4RLx735rWvKwkisuoPIzCLjlWd77BtrtgTRgVjQhJVJR\n6dHuK1zTf0WewqmlcJbF9ySXmnggNOTNek+2g5mneVM/KkD2W/9w4ly/J0UpAdHg\nR0qRnLkwSMKyYAbn++nahOum4U51Avc9K6QVE76I/4PwYzBMA9HOaAuNGZT/dLhm\nh17MvPbqDHKHvwm6ZyYoj05wqLS+wtLQvrpwJodL2hrnrbeFLOFdNHGPR8Ugj8xi\ns9f8kQEALtxcI86oBuZuxtxkIfe/aycLfimwCiRnqHcIh485kDM9I/xMeM/CCD18\nHpJ1GA4X8VN25UQfIox27Ui/LrEstcALC4Bad9Jo7L/my36ZqD5DEuKRu1dyxnJ9\n5hSrlxoLRVuAazbDMJIw\n=YOjq\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 9e57338a012409324bb35caf5f03f7ce6bc8fce6\nparent b07717d857422af5fb1c2ee0930e5a2a62df2b0e\nauthor Sebastian \"Sebbie\" Silbermann <sebastian.silbermann@vercel.com> 1748454372 +0200\ncommitter GitHub <noreply@github.com> 1748454372 +0200\n\n[react-dom] Enforce small gap between completed navigation and default Transition indicator (#33354)\n\n",
                "verified_at": "2025-05-28T17:46:14Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/5717f1933f2e8b10406fde1043c3047cbfbddc82",
        "html_url": "https://github.com/facebook/react/commit/5717f1933f2e8b10406fde1043c3047cbfbddc82",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/5717f1933f2e8b10406fde1043c3047cbfbddc82/comments",
        "author": {
            "login": "eps1lon",
            "id": 12292047,
            "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/12292047?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eps1lon",
            "html_url": "https://github.com/eps1lon",
            "followers_url": "https://api.github.com/users/eps1lon/followers",
            "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
            "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
            "organizations_url": "https://api.github.com/users/eps1lon/orgs",
            "repos_url": "https://api.github.com/users/eps1lon/repos",
            "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eps1lon/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "b07717d857422af5fb1c2ee0930e5a2a62df2b0e",
                "url": "https://api.github.com/repos/facebook/react/commits/b07717d857422af5fb1c2ee0930e5a2a62df2b0e",
                "html_url": "https://github.com/facebook/react/commit/b07717d857422af5fb1c2ee0930e5a2a62df2b0e"
            }
        ]
    },
    {
        "sha": "b07717d857422af5fb1c2ee0930e5a2a62df2b0e",
        "node_id": "C_kwDOAJy2KtoAKGIwNzcxN2Q4NTc0MjJhZjVmYjFjMmVlMDkzMGU1YTJhNjJkZjJiMGU",
        "commit": {
            "author": {
                "name": "Ricky",
                "email": "rickhanlonii@gmail.com",
                "date": "2025-05-28T14:31:09Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-28T14:31:09Z"
            },
            "message": "[devtools] upgrade json5 (#33358)",
            "tree": {
                "sha": "103aa9e6ac8de092684d3010fab0a661aaeb25b7",
                "url": "https://api.github.com/repos/facebook/react/git/trees/103aa9e6ac8de092684d3010fab0a661aaeb25b7"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/b07717d857422af5fb1c2ee0930e5a2a62df2b0e",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoNx4tCRC1aQ7uu5UhlAAA+gIQAJayvcTslDttldit7vIiv9NP\ncUzugAzgIwhwgUfxae9OiR8J9ptbZtqoxjKpBri+V55f6frR/+Ffn3HdI/BfiCPc\nrFUrOUt6yp+pfE2eH242ngSIx2YupKWbBcCrPoaWWHYidOr1HgptUzIjY+rkHOE+\nRwE3dkfzlq8Hl6O5Ve2wXhlqo1sNJ9+wnYvxxZjKeQ1kVQYpUqArmwNzE8UZP0Q3\ncHAvTl6Czf74ruVz+8FbhsnWOO7fhN+4Lv2Hoebo1T0Lwja3hIuphaJxKE4iF2/x\nxtbKYn8UDxeFsetPpmT9cP9beCWya7PetUewpWFjVcLJAuMihUer8dHuqarHn1Ls\nUrpuJg2usEKH6UdCRiWSrs8GCyo15FyjkkaQyHLnFDD9CM8+qi8F2qwOmOlX6dkz\nKRMDpkBeXsGkdqmJ5QlsI0+AMAHrBYkTxnovqank6ZJkSe6Sdr7vA74PwMro+xEn\n0lPdAFkXab+MxnXTcek47jADd92eCHJGR9fcHhFyINBbWWGVK77Z1VWwlmLTc43X\nfn92djE/Q1rmY9HZQD4VRssv4//N2bo9eEinG4ax1zLCplRvhD3aDmIfPMP2vpW+\n83FaT/sOG5S3YuOq9aln1GkPo8ejARyVJM0i+Z88DjTMFbCNaxJ7mRs9NFSqdWed\nii4LBV4220p9qHudhlpA\n=YWUc\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 103aa9e6ac8de092684d3010fab0a661aaeb25b7\nparent 283f87f083f285c060582e1096cebed794d4b748\nauthor Ricky <rickhanlonii@gmail.com> 1748442669 -0400\ncommitter GitHub <noreply@github.com> 1748442669 -0400\n\n[devtools] upgrade json5 (#33358)\n\n",
                "verified_at": "2025-05-28T14:31:13Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/b07717d857422af5fb1c2ee0930e5a2a62df2b0e",
        "html_url": "https://github.com/facebook/react/commit/b07717d857422af5fb1c2ee0930e5a2a62df2b0e",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/b07717d857422af5fb1c2ee0930e5a2a62df2b0e/comments",
        "author": {
            "login": "rickhanlonii",
            "id": 2440089,
            "node_id": "MDQ6VXNlcjI0NDAwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2440089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rickhanlonii",
            "html_url": "https://github.com/rickhanlonii",
            "followers_url": "https://api.github.com/users/rickhanlonii/followers",
            "following_url": "https://api.github.com/users/rickhanlonii/following{/other_user}",
            "gists_url": "https://api.github.com/users/rickhanlonii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rickhanlonii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rickhanlonii/subscriptions",
            "organizations_url": "https://api.github.com/users/rickhanlonii/orgs",
            "repos_url": "https://api.github.com/users/rickhanlonii/repos",
            "events_url": "https://api.github.com/users/rickhanlonii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rickhanlonii/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "283f87f083f285c060582e1096cebed794d4b748",
                "url": "https://api.github.com/repos/facebook/react/commits/283f87f083f285c060582e1096cebed794d4b748",
                "html_url": "https://github.com/facebook/react/commit/283f87f083f285c060582e1096cebed794d4b748"
            }
        ]
    },
    {
        "sha": "283f87f083f285c060582e1096cebed794d4b748",
        "node_id": "C_kwDOAJy2KtoAKDI4M2Y4N2YwODNmMjg1YzA2MDU4MmUxMDk2Y2ViZWQ3OTRkNGI3NDg",
        "commit": {
            "author": {
                "name": "Jan Kassens",
                "email": "jkassens@meta.com",
                "date": "2025-05-27T21:17:45Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-27T21:17:45Z"
            },
            "message": "Revert \"enableViewTransition in www\" (#33362)\n\nWe need to do some more testing here.\n\nReverts facebook/react#33357",
            "tree": {
                "sha": "c3263de2a27e3a1899c3dfabdbbee619f5f0b489",
                "url": "https://api.github.com/repos/facebook/react/git/trees/c3263de2a27e3a1899c3dfabdbbee619f5f0b489"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/283f87f083f285c060582e1096cebed794d4b748",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoNiv5CRC1aQ7uu5UhlAAALVgQACgcUwWzI1Go8eS8G0OHswvS\niyxhlIYvHkDknxOK/sY786219DXaZYcuM5LZjsV6cwK25/Qun8//hx8i6gINxsvX\naca8RftOCsYUuuQWF1era+TrM1Oh0x2RZqjAHTmNoJ7pbzPJkHQ4UKAosMauw/NZ\n5UxURszccL8/sr3fs/gJyEfqGDdq5T4RfY5xYDwKRKIutejo8+amB0nO15DMfozz\nb4IhSsdH4dVo0N38Kwt4iL84xKTTFeHgaWyXaa4HK/pgLy0TtptcxZqPxVIwl3xp\nO3xwOUgvqbA2E7VUNS2XIJiO0/EKcrqXTQDIUsBVawgeSl37wf5/Jj98LnrxnfO9\n/+JJPRmIw4jsQAvxNiU+u44p0Tvj8Cobuc5KXwe0v6nAHT+2YQG5WzITNGWePf43\nS1/8XibhmBv3cZnXsYGGop/LOkdvHpbwEiUMa0lpgwrSjg00EFbZ8z04gDC4YfDl\n6t8vJz+qRqbcLbnFgOTeXvPlH+wpTMv4p5ZA4Vr/KCI4wqc9G5Q543/1CcHxzTjF\n1ySXW4qox5iRdEXFCOPMGASY44n69vXrCzssTrycEmP6oDDIJHuiyWDtCAmk+nfP\nselSLnp2xgRLy433R6UlwvzmYvTdu+/ZUwxAmpCvGqj1dBAoYBRYKGrgjAGgfykD\nutImQa63cvFD+BhtelzH\n=vobp\n-----END PGP SIGNATURE-----\n",
                "payload": "tree c3263de2a27e3a1899c3dfabdbbee619f5f0b489\nparent f9ae0a4c2edc9ad93507b550f2aeb60119955336\nauthor Jan Kassens <jkassens@meta.com> 1748380665 -0400\ncommitter GitHub <noreply@github.com> 1748380665 -0400\n\nRevert \"enableViewTransition in www\" (#33362)\n\nWe need to do some more testing here.\n\nReverts facebook/react#33357",
                "verified_at": "2025-05-27T21:17:47Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/283f87f083f285c060582e1096cebed794d4b748",
        "html_url": "https://github.com/facebook/react/commit/283f87f083f285c060582e1096cebed794d4b748",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/283f87f083f285c060582e1096cebed794d4b748/comments",
        "author": {
            "login": "kassens",
            "id": 11849,
            "node_id": "MDQ6VXNlcjExODQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kassens",
            "html_url": "https://github.com/kassens",
            "followers_url": "https://api.github.com/users/kassens/followers",
            "following_url": "https://api.github.com/users/kassens/following{/other_user}",
            "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
            "organizations_url": "https://api.github.com/users/kassens/orgs",
            "repos_url": "https://api.github.com/users/kassens/repos",
            "events_url": "https://api.github.com/users/kassens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kassens/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "f9ae0a4c2edc9ad93507b550f2aeb60119955336",
                "url": "https://api.github.com/repos/facebook/react/commits/f9ae0a4c2edc9ad93507b550f2aeb60119955336",
                "html_url": "https://github.com/facebook/react/commit/f9ae0a4c2edc9ad93507b550f2aeb60119955336"
            }
        ]
    },
    {
        "sha": "f9ae0a4c2edc9ad93507b550f2aeb60119955336",
        "node_id": "C_kwDOAJy2KtoAKGY5YWUwYTRjMmVkYzlhZDkzNTA3YjU1MGYyYWViNjAxMTk5NTUzMzY",
        "commit": {
            "author": {
                "name": "mofeiZ",
                "email": "34200447+mofeiZ@users.noreply.github.com",
                "date": "2025-05-27T16:02:29Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-27T16:02:29Z"
            },
            "message": "[compiler][gating] Custom opt out directives (experimental option) (#33328)\n\nAdding an experimental / unstable compiler config to enable custom\nopt-out directives",
            "tree": {
                "sha": "32ed84af4cd581a3d317e7dfe7cc648c26ca678c",
                "url": "https://api.github.com/repos/facebook/react/git/trees/32ed84af4cd581a3d317e7dfe7cc648c26ca678c"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/f9ae0a4c2edc9ad93507b550f2aeb60119955336",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoNeIVCRC1aQ7uu5UhlAAAMfEQABo57nph91EGJo158VQ3Emic\nEHktQMP0hEprlA5A3xJAyiWb3Eo26DzcWEhn4rTik4nI6hXi8m5U463oTB5ryPyd\nXjdzJbsszsC7Xr3t2aA0ga3a+IjrcfzRmCyFJP3ZFQzmuXSqDx/KkvQJM+TSVvOS\ngS6hZgiUOVkhms4kdur2gOMGY34219jKek411FojwAyBbsIdWStKK14LTmbib6zw\nOqB+B0/r14LZrQr59LnMicQZ3AOEInIlmLwaUYAiR+FC5LNI7enNR4OmqQeQxZpS\nqFAuQQSf/6H57xirolJJk4FNjRhUqWLJP98Fa3EnHdA+bIqG2Y03XydjUVeufu5L\nVv1Upji5oKHEXVLDjlAiBj2cxWbej0FCXH/3AknFONIMFnVaJUeKfKejCrxl4Cwk\nWUsSiv3MztMrsusoT/9SyiN6v6gEhf7W13ecZiUahBL7tdyqJGxD2uMffZXSWoag\njVkE+BQ8u/x6ADfCP7HeTzK697uP1c010Wl9IsX4TRWFC88vyPxdW2YWDRbX4Ipd\ny6vzwXAb8plvHWrbo4pHoV/GHBht8R6If7mMi1/FdoK53b6t3cFK3WMC75ixeTcv\n9UA/jz0JJ0McoMxhIDjoFLRgJ3bTzIj1HH0mW36NIzP9DlgzsCkLUsxALV2te18L\n12C9GsA6iIgA9NvfLzwq\n=Fi77\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 32ed84af4cd581a3d317e7dfe7cc648c26ca678c\nparent f702620cea32f59a101d4f60fbff7a7495df76f7\nauthor mofeiZ <34200447+mofeiZ@users.noreply.github.com> 1748361749 -0400\ncommitter GitHub <noreply@github.com> 1748361749 -0400\n\n[compiler][gating] Custom opt out directives (experimental option) (#33328)\n\nAdding an experimental / unstable compiler config to enable custom\nopt-out directives",
                "verified_at": "2025-05-27T16:02:32Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/f9ae0a4c2edc9ad93507b550f2aeb60119955336",
        "html_url": "https://github.com/facebook/react/commit/f9ae0a4c2edc9ad93507b550f2aeb60119955336",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/f9ae0a4c2edc9ad93507b550f2aeb60119955336/comments",
        "author": {
            "login": "mofeiZ",
            "id": 34200447,
            "node_id": "MDQ6VXNlcjM0MjAwNDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/34200447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mofeiZ",
            "html_url": "https://github.com/mofeiZ",
            "followers_url": "https://api.github.com/users/mofeiZ/followers",
            "following_url": "https://api.github.com/users/mofeiZ/following{/other_user}",
            "gists_url": "https://api.github.com/users/mofeiZ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mofeiZ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mofeiZ/subscriptions",
            "organizations_url": "https://api.github.com/users/mofeiZ/orgs",
            "repos_url": "https://api.github.com/users/mofeiZ/repos",
            "events_url": "https://api.github.com/users/mofeiZ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mofeiZ/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "f702620cea32f59a101d4f60fbff7a7495df76f7",
                "url": "https://api.github.com/repos/facebook/react/commits/f702620cea32f59a101d4f60fbff7a7495df76f7",
                "html_url": "https://github.com/facebook/react/commit/f702620cea32f59a101d4f60fbff7a7495df76f7"
            }
        ]
    },
    {
        "sha": "f702620cea32f59a101d4f60fbff7a7495df76f7",
        "node_id": "C_kwDOAJy2KtoAKGY3MDI2MjBjZWEzMmY1OWExMDFkNGY2MGZiZmY3YTc0OTVkZjc2Zjc",
        "commit": {
            "author": {
                "name": "Jan Kassens",
                "email": "jkassens@meta.com",
                "date": "2025-05-27T15:23:27Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-27T15:23:27Z"
            },
            "message": "[fb-www] ship enableViewTransition (#33357)",
            "tree": {
                "sha": "aee2bf65445d43495af10378a1ff5d49b6c1a8fa",
                "url": "https://api.github.com/repos/facebook/react/git/trees/aee2bf65445d43495af10378a1ff5d49b6c1a8fa"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/f702620cea32f59a101d4f60fbff7a7495df76f7",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoNdjvCRC1aQ7uu5UhlAAA2K4QAIJ+65IPAQU65nPPmgbV1vL4\nXFoByDwtzHIxBFOdptXAJjz4fUx+TT8v9JF6iudYW6neSu0bR4724uoRPHZiXzmx\nD41WO8dDl9BgkCs9cjm6xtZP7bRHjM6gmpRGrF7J82r6b7Fg35oBGsrNMpHCxXNS\n6+Ox9ybba8FBxJ4oca+z75VyZn9nS6n5+vi8ZoTabBYJ9/e0RUHzvHrtTdIeKy2l\nkjdGzaSz3bQJfkFn5AVUNGL2phWeNtgPcbDuSUCs1PNJFxYvk8wTLW4bcD8309b9\n0FuwHoofJDLGU4ZS+qeTxF570OYWMwwlUgJILGQGlMOFlkIMzQTnFtsFmaEqHIN5\nL+38GaoLxWKoScwWilDQAKysgr+UC2yPj6KvSconOc86T5XZ5QKkqt66QGbNhvRr\nNfxE4MBYzPnZ2By0GGwTV0dSP6Hgvgx0+u84gsCpDsMVOGzsoHVo47RUR63RNtJf\nIlLzdbmXapgR5S0YE/HFBIOqhhV30ND6Lt3jyBuDEI5xLDNBnoLL8y68/nP3zYGk\nq0Tn5jJ+BGtXoK7joxziuQMdvF1J0rwa7C8yvKwajU0P6S39L27Uv4VNm489s7Jn\nPInGW2ep8EAMTYHz3HFAiiP63gQjNVHTtxz+OC0rUjXy4pVEhLLEWvGng7PiIb5a\nd90AnsCjZN0025uivajN\n=uJ/6\n-----END PGP SIGNATURE-----\n",
                "payload": "tree aee2bf65445d43495af10378a1ff5d49b6c1a8fa\nparent c0464aedb16b1c970d717651bba8d1c66c578729\nauthor Jan Kassens <jkassens@meta.com> 1748359407 -0400\ncommitter GitHub <noreply@github.com> 1748359407 -0400\n\n[fb-www] ship enableViewTransition (#33357)\n\n",
                "verified_at": "2025-05-27T15:23:27Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/f702620cea32f59a101d4f60fbff7a7495df76f7",
        "html_url": "https://github.com/facebook/react/commit/f702620cea32f59a101d4f60fbff7a7495df76f7",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/f702620cea32f59a101d4f60fbff7a7495df76f7/comments",
        "author": {
            "login": "kassens",
            "id": 11849,
            "node_id": "MDQ6VXNlcjExODQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kassens",
            "html_url": "https://github.com/kassens",
            "followers_url": "https://api.github.com/users/kassens/followers",
            "following_url": "https://api.github.com/users/kassens/following{/other_user}",
            "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
            "organizations_url": "https://api.github.com/users/kassens/orgs",
            "repos_url": "https://api.github.com/users/kassens/repos",
            "events_url": "https://api.github.com/users/kassens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kassens/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "c0464aedb16b1c970d717651bba8d1c66c578729",
                "url": "https://api.github.com/repos/facebook/react/commits/c0464aedb16b1c970d717651bba8d1c66c578729",
                "html_url": "https://github.com/facebook/react/commit/c0464aedb16b1c970d717651bba8d1c66c578729"
            }
        ]
    },
    {
        "sha": "c0464aedb16b1c970d717651bba8d1c66c578729",
        "node_id": "C_kwDOAJy2KtoAKGMwNDY0YWVkYjE2YjFjOTcwZDcxNzY1MWJiYThkMWM2NmM1Nzg3Mjk",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-05-23T17:26:02Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-23T17:26:02Z"
            },
            "message": "[Fizz] Block on Suspensey Fonts during reveal (#33342)\n\nThis is the same technique we do for the client except we don't check\nwhether this is newly created font loading to keep code small.\n\nUnfortunately, we can't use this technique for Suspensey images. They'll\nneed to block before we call `startViewTransition` in a separate\nrefactor. This is due to a bug in Chrome where `img.decode()` doesn't\nresolve until `startViewTransition` does.",
            "tree": {
                "sha": "6c0e15ea99354e3c860cfbf13df5aa6503db6ff9",
                "url": "https://api.github.com/repos/facebook/react/git/trees/6c0e15ea99354e3c860cfbf13df5aa6503db6ff9"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/c0464aedb16b1c970d717651bba8d1c66c578729",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoMK+qCRC1aQ7uu5UhlAAAAlwQAIUsNNlS7/FczdiOAl8C8eZI\n1eHmUqtXbQ1pnWLFqINT57CdvRiKBc3bExxdqWIcUyote0h+ErDaIJYvbkwvkE07\nKCbriSBpYO49u20P3we3ljTia7gjQdTq986cBl6oMEWembDcKhvk8tBGU2EDUwXz\nLwGORkv3GQmeI3vKSjVcgzeA+EQGZxATaF1+Zng7gT4eeR6udCjoE6ZgXDpd+dO2\nSaes/huwj5QRtaHfN4mxcU1w/lxxoxSYJzZr7vaxXDp87V/BgenrFHRnXIMB/SjY\nAvjt5SM/c3x4CGNWHeEEYruyUKw/cFZb8bvwwzq98wAho5yCx1vQV5xNLE1+3Krq\nQpTy2B5hsWjhCV6QIVMhga99tsxtsp7laqKJN/xFn1rAJjI7F5g/AjgmmgO1i161\nGGFfEKwDShivk/sMp84J04zJIH5re3zztnSSFGZbVBQJJcjds4PVTk2HGmiHX9U+\nEmSjXwqxFgOLgWvdqyqjsup7fgtdyUTTxGq+ktatZnult+Aq6Kf+P1VKPiDhJHTL\nsAfuyNdpEQi00iyhD10zbIkKy4HOiv46EZW5Ry+bN47dkHOxlHc+1qsthslyKbMt\n/mBtgTJmhPpCTbWEqZ5yoGpkt4vEq1XnRKfPDBN0HRAdomCN0QCgZYWmiX9v/FUY\nIBUW/vqR/S+bixwkTbV2\n=/g6M\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 6c0e15ea99354e3c860cfbf13df5aa6503db6ff9\nparent 6a1dfe37776e5a41f4c1e07c33cf1f26c4a82979\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748021162 -0400\ncommitter GitHub <noreply@github.com> 1748021162 -0400\n\n[Fizz] Block on Suspensey Fonts during reveal (#33342)\n\nThis is the same technique we do for the client except we don't check\nwhether this is newly created font loading to keep code small.\n\nUnfortunately, we can't use this technique for Suspensey images. They'll\nneed to block before we call `startViewTransition` in a separate\nrefactor. This is due to a bug in Chrome where `img.decode()` doesn't\nresolve until `startViewTransition` does.",
                "verified_at": "2025-05-23T17:26:04Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/c0464aedb16b1c970d717651bba8d1c66c578729",
        "html_url": "https://github.com/facebook/react/commit/c0464aedb16b1c970d717651bba8d1c66c578729",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/c0464aedb16b1c970d717651bba8d1c66c578729/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "6a1dfe37776e5a41f4c1e07c33cf1f26c4a82979",
                "url": "https://api.github.com/repos/facebook/react/commits/6a1dfe37776e5a41f4c1e07c33cf1f26c4a82979",
                "html_url": "https://github.com/facebook/react/commit/6a1dfe37776e5a41f4c1e07c33cf1f26c4a82979"
            }
        ]
    },
    {
        "sha": "6a1dfe37776e5a41f4c1e07c33cf1f26c4a82979",
        "node_id": "C_kwDOAJy2KtoAKDZhMWRmZTM3Nzc2ZTVhNDFmNGMxZTA3YzMzY2YxZjI2YzRhODI5Nzk",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-05-23T17:25:13Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-23T17:25:13Z"
            },
            "message": "Disable moveBefore experiment (#33348)\n\nThere seems to be some bugs still to work out in Chrome. See #33187.\n\nAdditionally, since you can't really rely on this function existing\nacross browsers, it's hard to depend on its behavior anyway. In fact,\nyou now have a source of inconsistent behaviors across browsers to deal\nwith.\n\nIdeally it would also be more widely spread in fake DOM implementations\nlike JSDOM so that we can use it unconditionally. #33177.\n\nWe still want to enable this since it's a great feature but maybe not\nuntil it's more widely available cross-browsers with fewer bugs.",
            "tree": {
                "sha": "21eca2ca5650d5d28abd05c31e67a9e210e21337",
                "url": "https://api.github.com/repos/facebook/react/git/trees/21eca2ca5650d5d28abd05c31e67a9e210e21337"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/6a1dfe37776e5a41f4c1e07c33cf1f26c4a82979",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoMK96CRC1aQ7uu5UhlAAANnMQAKXEdCfmAOf8f4zpPChfXSAp\nyX/4yChVN9uR8tt+r2EdZ52KdcHne9Fa0PVJ0Z17llrpbUwjzNolKd8Z/W22hTPy\nt58ZGAXK1iJkf6hNnItqUpZF61I8rGbp4NS3Hv+XgyTjYJrh5Wal/qlXAESHLLV8\nzTeYrGdqB9AJWgz8G0ivZA3UMMOXISTvu74m2ZJG8oTAsvACoXLQMLnLP2a7sw2C\ng1OWQj5P17bc30+NyRjYGLpF9y++Xux1C3xzHbIzNUznNtHD8g1KNhcbqO7Ce69r\ncAv+jkuIKZkk08A9cuHJ68pJoLN9AlqfId9T/6o7c4bjpDIYhdv1txi0XUk2A1lO\n7GRK39caHjRwUAUZerZT+9zMNrP/dkshxYJQpNWXvDWd7Qgh6rQ9/n33d3BH6NA1\nEul20wq2Ssg2eyUkZZPTF1O8bGmLmT/0mtxbSGbPQjFT+3wJuWgJwae6kMkERhhc\nW5KJFiPpKa0QNWRdbDhfcSi7HhqN1ua9En/sg6zk1i19EMZKxKhCNWyMmrdJpceW\ne9b3lpENc0dtASnfeDXtv7dJt4x3DmUXd69qc1aC96mMRqAHKJdbPZjKJaNKJam9\nnv6LcMjRqaNI8m7aRqszmZdma14H5ELH3UNJkLc0eq6vsnzI2gdRKR/TfNUZ2dAf\ngfKFUrKBVSqVVYbWCekn\n=DTrF\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 21eca2ca5650d5d28abd05c31e67a9e210e21337\nparent 99efc627a5a8cb56f50cfffee544c86c49572b6f\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1748021113 -0400\ncommitter GitHub <noreply@github.com> 1748021113 -0400\n\nDisable moveBefore experiment (#33348)\n\nThere seems to be some bugs still to work out in Chrome. See #33187.\n\nAdditionally, since you can't really rely on this function existing\nacross browsers, it's hard to depend on its behavior anyway. In fact,\nyou now have a source of inconsistent behaviors across browsers to deal\nwith.\n\nIdeally it would also be more widely spread in fake DOM implementations\nlike JSDOM so that we can use it unconditionally. #33177.\n\nWe still want to enable this since it's a great feature but maybe not\nuntil it's more widely available cross-browsers with fewer bugs.",
                "verified_at": "2025-05-23T17:25:15Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/6a1dfe37776e5a41f4c1e07c33cf1f26c4a82979",
        "html_url": "https://github.com/facebook/react/commit/6a1dfe37776e5a41f4c1e07c33cf1f26c4a82979",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/6a1dfe37776e5a41f4c1e07c33cf1f26c4a82979/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "99efc627a5a8cb56f50cfffee544c86c49572b6f",
                "url": "https://api.github.com/repos/facebook/react/commits/99efc627a5a8cb56f50cfffee544c86c49572b6f",
                "html_url": "https://github.com/facebook/react/commit/99efc627a5a8cb56f50cfffee544c86c49572b6f"
            }
        ]
    },
    {
        "sha": "99efc627a5a8cb56f50cfffee544c86c49572b6f",
        "node_id": "C_kwDOAJy2KtoAKDk5ZWZjNjI3YTVhOGNiNTZmNTBjZmZmZWU1NDRjODZjNDk1NzJiNmY",
        "commit": {
            "author": {
                "name": "Jordan Brown",
                "email": "jmbrown@meta.com",
                "date": "2025-05-23T14:09:41Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-23T14:09:41Z"
            },
            "message": "[eslint] Add an option to require dependencies on effect hooks (#33344)\n\nSummary:\n\nTo prepare for automatic effect dependencies, some codebases may want to\ncodemod\nexisting useEffect calls with no deps to include an explicit undefined\nsecond argument\nin order to preserve the \"run on every render\" behavior. In sufficiently\nlarge codebases,\nthis may require a temporary enforcement period where all effects\nprovide an explicit\ndependencies argument.\n\nOutside of migration, relying on a component to render can lead to real\nbugs,\nespecially when working with memoization.",
            "tree": {
                "sha": "fc9c590eed3167f0bad64bd843af69e62654871f",
                "url": "https://api.github.com/repos/facebook/react/git/trees/fc9c590eed3167f0bad64bd843af69e62654871f"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/99efc627a5a8cb56f50cfffee544c86c49572b6f",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoMIGlCRC1aQ7uu5UhlAAA8oIQAJnR1D19wVHMyTY4MOVlCm2U\nints64YheKXVFKQjow7viFCp/9VunfYYUVn6GNIZzS1wrAUoebFiwqbsq5Q0HTpQ\nW3SNf28tRsS0TDf/23E4npCqOdByjDvZ39i/pW1cUP2nc6GzbnxXJ/n4d/34YOE/\nGjXoSFMfaiHO/n0b3lTrUm+hyLnjbzHli5OWcCL99f1KcO/ivY9Qse9WoG6Wb/G2\nSYZyypoXrdAk1QF01owTlCyC2jG4Zw3Wpwco8Z9FJ7pgBTezpzqof1qhe5ybHe7F\n03eBFsG1vwJ0xCzKTTqwwgxpKqXg5KLwYZIWt8IcHhd6jYISBjcYGLfHl+VuITTw\nYRsHxGPOPw3IYj6DcWKUyXumXKzVEt6lv+qPe1vMV2VPCSEMxfZuSd3nuzsyQWib\njrjshISm6AWQ/WFmWRrD56sDNLsr9gNIohuJWsZL9Kcx9XwhIZHfzzQHDRZTzZUb\nqO1jhqWKGI5RigbmDs9QcOm+pEmQy7g6o4wrtlSKBDNma7BKAV/3m6voBqci138b\nxvXZx8zpDZTHv0uJzarRNQ8WjSLaV0HKYf2ak+EAKMpDpg2HNzQ3bLmOopjXZEoZ\netD8laApqpGGEJ1D5GXFt4uOcjoSyn4bcqevRSsTjDIVollAS9Ar4MfjsB7uWmW/\nYiecY7YLqnFFBBlhi35U\n=L1bW\n-----END PGP SIGNATURE-----\n",
                "payload": "tree fc9c590eed3167f0bad64bd843af69e62654871f\nparent bfaeb4a46175fa0f4edf2eba58349d5029e5e86e\nauthor Jordan Brown <jmbrown@meta.com> 1748009381 -0400\ncommitter GitHub <noreply@github.com> 1748009381 -0400\n\n[eslint] Add an option to require dependencies on effect hooks (#33344)\n\nSummary:\n\nTo prepare for automatic effect dependencies, some codebases may want to\ncodemod\nexisting useEffect calls with no deps to include an explicit undefined\nsecond argument\nin order to preserve the \"run on every render\" behavior. In sufficiently\nlarge codebases,\nthis may require a temporary enforcement period where all effects\nprovide an explicit\ndependencies argument.\n\nOutside of migration, relying on a component to render can lead to real\nbugs,\nespecially when working with memoization.",
                "verified_at": "2025-05-23T14:09:43Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/99efc627a5a8cb56f50cfffee544c86c49572b6f",
        "html_url": "https://github.com/facebook/react/commit/99efc627a5a8cb56f50cfffee544c86c49572b6f",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/99efc627a5a8cb56f50cfffee544c86c49572b6f/comments",
        "author": {
            "login": "jbrown215",
            "id": 8551887,
            "node_id": "MDQ6VXNlcjg1NTE4ODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8551887?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jbrown215",
            "html_url": "https://github.com/jbrown215",
            "followers_url": "https://api.github.com/users/jbrown215/followers",
            "following_url": "https://api.github.com/users/jbrown215/following{/other_user}",
            "gists_url": "https://api.github.com/users/jbrown215/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jbrown215/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jbrown215/subscriptions",
            "organizations_url": "https://api.github.com/users/jbrown215/orgs",
            "repos_url": "https://api.github.com/users/jbrown215/repos",
            "events_url": "https://api.github.com/users/jbrown215/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jbrown215/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "bfaeb4a46175fa0f4edf2eba58349d5029e5e86e",
                "url": "https://api.github.com/repos/facebook/react/commits/bfaeb4a46175fa0f4edf2eba58349d5029e5e86e",
                "html_url": "https://github.com/facebook/react/commit/bfaeb4a46175fa0f4edf2eba58349d5029e5e86e"
            }
        ]
    },
    {
        "sha": "bfaeb4a46175fa0f4edf2eba58349d5029e5e86e",
        "node_id": "C_kwDOAJy2KtoAKGJmYWViNGE0NjE3NWZhMGY0ZWRmMmViYTU4MzQ5ZDUwMjllNWU4NmU",
        "commit": {
            "author": {
                "name": "0xFango",
                "email": "silencerichard@163.com",
                "date": "2025-05-23T02:02:39Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-23T02:02:39Z"
            },
            "message": "Fix incorrect use of NoLanes in executionContext check (#33170)\n\n## Summary\n\nThis PR fixes a likely incorrect condition in the\n`scheduleUpdateOnFiber` function inside `ReactFiberWorkLoop.js`.\n\nPreviously, the code checked:\n\n```js\n(executionContext & RenderContext) !== NoLanes\n````\n\nHowever, `NoLanes` is part of the lane priority system, not the\nexecution context flags. The intent here seems to be to detect whether\nthe current execution context includes `RenderContext`, which should be\ncompared against `NoContext`, not `NoLanes`.\n\nThis fix replaces `NoLanes` with `NoContext` for semantic correctness\nand consistency with other checks throughout the codebase.\n\n**Fixes\n[[#33169](https://github.com/facebook/react/issues/33169)](https://github.com/facebook/react/issues/33169)**\n\n---\n\n## How did you test this change?\n\nI ran the following commands to validate correctness and ensure nothing\nwas broken:\n\n* `yarn lint`\n* `yarn linc`\n* `yarn test`\n* `yarn test --prod`\n* `yarn flow`\n* `yarn prettier`\n\nAll checks passed. Since this is a minor internal logic fix and doesn't\nchange public behavior or APIs, no additional tests are necessary at\nthis time.",
            "tree": {
                "sha": "bc89d2400a2065a092302cf3e276a35932dda104",
                "url": "https://api.github.com/repos/facebook/react/git/trees/bc89d2400a2065a092302cf3e276a35932dda104"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/bfaeb4a46175fa0f4edf2eba58349d5029e5e86e",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoL9c/CRC1aQ7uu5UhlAAAz7EQABg7XSkfslzvM2y+HU88RVxT\nwG5Ja2rjYXWxQNYvWiEFBPHngM+faDXbGHToWYHZKRjSiHfQ2QbAdvxzUI3vftQj\n3FGYHYT+9nzX4ULuGGaPtiZiGS2AArT0oGKpB2P/b6IZ8JG1E7TODWSpZ2y9P9wI\n9tTT5McROr7qpBm/ySRIES8U6D88rrlnC/WsW0aUkSd1QwahhgbQPZWv6oosLFHI\nXFOA7tJ3vO6+4dECiwXC/XZqM+OygT0i+At+dlVXYZ3WCQ5xMs6gS/5rZWdWxHsU\nVCKUAOF6iBZD+sZfjhznE2o6d9QreuzAacfool+0mUK1F/hMJCTvJd2llAFwRCTm\nNk62qgg3yNZql1HcD/IK7opw5PLxgYsmuSepuv4lqpEkYYAbT5N+p79FD22vpxtE\n56E87IXZvtRu2PmhNSPOJqdKvd1n2akNBtH6gaCVOV2yVhAp79mVjGxqV+pIG1AC\n2YtSaOAZl9qZfw43j2Mx+RApBiuhaBM0jVSn9DPzL+l46zJzJYz6HXFzZoZPD8sj\nFwKf3ziMnJtAoIz8ib8RYDbpVeTo2GiXZRNOnaotu2U8y99pQjZ+GlTHpu3f1Rtr\nkMlSxPM3gZ7K30YrgiSZuunjgtYm+78XvNSTtr48y4Xd/HHSGuXAwumwNCVnGvol\n1mYTcucH4DEwoc/WVuhj\n=t7sy\n-----END PGP SIGNATURE-----\n",
                "payload": "tree bc89d2400a2065a092302cf3e276a35932dda104\nparent 3e9db65fc3341148a5248b3ffc6bc68c0640fd3f\nauthor 0xFango <silencerichard@163.com> 1747965759 +0700\ncommitter GitHub <noreply@github.com> 1747965759 -0400\n\nFix incorrect use of NoLanes in executionContext check (#33170)\n\n## Summary\n\nThis PR fixes a likely incorrect condition in the\n`scheduleUpdateOnFiber` function inside `ReactFiberWorkLoop.js`.\n\nPreviously, the code checked:\n\n```js\n(executionContext & RenderContext) !== NoLanes\n````\n\nHowever, `NoLanes` is part of the lane priority system, not the\nexecution context flags. The intent here seems to be to detect whether\nthe current execution context includes `RenderContext`, which should be\ncompared against `NoContext`, not `NoLanes`.\n\nThis fix replaces `NoLanes` with `NoContext` for semantic correctness\nand consistency with other checks throughout the codebase.\n\n**Fixes\n[[#33169](https://github.com/facebook/react/issues/33169)](https://github.com/facebook/react/issues/33169)**\n\n---\n\n## How did you test this change?\n\nI ran the following commands to validate correctness and ensure nothing\nwas broken:\n\n* `yarn lint`\n* `yarn linc`\n* `yarn test`\n* `yarn test --prod`\n* `yarn flow`\n* `yarn prettier`\n\nAll checks passed. Since this is a minor internal logic fix and doesn't\nchange public behavior or APIs, no additional tests are necessary at\nthis time.",
                "verified_at": "2025-05-23T02:02:41Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/bfaeb4a46175fa0f4edf2eba58349d5029e5e86e",
        "html_url": "https://github.com/facebook/react/commit/bfaeb4a46175fa0f4edf2eba58349d5029e5e86e",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/bfaeb4a46175fa0f4edf2eba58349d5029e5e86e/comments",
        "author": {
            "login": "0xFANGO",
            "id": 42994114,
            "node_id": "MDQ6VXNlcjQyOTk0MTE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/42994114?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0xFANGO",
            "html_url": "https://github.com/0xFANGO",
            "followers_url": "https://api.github.com/users/0xFANGO/followers",
            "following_url": "https://api.github.com/users/0xFANGO/following{/other_user}",
            "gists_url": "https://api.github.com/users/0xFANGO/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/0xFANGO/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/0xFANGO/subscriptions",
            "organizations_url": "https://api.github.com/users/0xFANGO/orgs",
            "repos_url": "https://api.github.com/users/0xFANGO/repos",
            "events_url": "https://api.github.com/users/0xFANGO/events{/privacy}",
            "received_events_url": "https://api.github.com/users/0xFANGO/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "3e9db65fc3341148a5248b3ffc6bc68c0640fd3f",
                "url": "https://api.github.com/repos/facebook/react/commits/3e9db65fc3341148a5248b3ffc6bc68c0640fd3f",
                "html_url": "https://github.com/facebook/react/commit/3e9db65fc3341148a5248b3ffc6bc68c0640fd3f"
            }
        ]
    },
    {
        "sha": "3e9db65fc3341148a5248b3ffc6bc68c0640fd3f",
        "node_id": "C_kwDOAJy2KtoAKDNlOWRiNjVmYzMzNDExNDhhNTI0OGIzZmZjNmJjNjhjMDY0MGZkM2Y",
        "commit": {
            "author": {
                "name": "Christoph Nakazawa",
                "email": "christoph.pojer@gmail.com",
                "date": "2025-05-22T20:18:23Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-22T20:18:23Z"
            },
            "message": "Fix typo in error message. (#33313)\n\n## Summary\n\nI am writing code that isn't so good, so I saw this error message many\ntimes. It appears to have a typo. This PR fixes the typo.\n\n## How did you test this change?\n\nRan the tests",
            "tree": {
                "sha": "e2b072ab52fad19a6438c04b6d3750b51a014d1c",
                "url": "https://api.github.com/repos/facebook/react/git/trees/e2b072ab52fad19a6438c04b6d3750b51a014d1c"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/3e9db65fc3341148a5248b3ffc6bc68c0640fd3f",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoL4aPCRC1aQ7uu5UhlAAAbKwQAGmLfYb7XakTvwi+qV1qBhcZ\nlEL2NS9wp9cnihROH8u5GZxqwzGsAIl6fFQDAbNd8yym8J8ibJ3EWsEihrvAcb5t\nZng20DmCFNSDRWBCGDS4VRczjH3DFm3180Q1eaTW2Ly5s7BBh1ktUjbwrNykNC5G\nf0kWRcS8Mpn+kFs4GsaqbOGeMHjQkYuMAYaTA3mTN2Yu11kMQ+xjC6sHns4RxCls\nW8JtezqSOYxyTSpV3VC3lBvosY2He0gueNC1EhmuuVc4oYZPlgn1tY4AkOJJ6P9L\n/JoT0oKxxfR3TTqzk8B1pUlm6WmHwPIPlyFtpN/ltm0K9fGUmb2/zM8LHLR/s2BC\ntT4AeLPBnY62qjp3ckcNFiKnD5mORNX4qpHd3f1gEuFR72MpI2k+j/KEkQ460gqp\ncVMMvtYmk7eJZfSj3AodWz1Lgt9z/+cLC5FcmvTASec6yH3R1O19Bnxn2BEwUyKy\nwHMdH1ZVyfUIWu2jOkqmdss5AiGCNrVUvS6gFeNgMFKtB1l63hlNwicmm3ahvkxP\naPM+ATnLs7IK0SpiyujOdfVqnpzQcbus4QMKMQVWQwK42jjou6ttsomaesuYcsKJ\n49h2uDVMjNWO7iYaPbprPn7GQ5EDzWL1OeJJyKZ5Eb1stTg65JzQy6jqq+insAts\npkhRQaE2Xp2NU3Wv56wk\n=oECc\n-----END PGP SIGNATURE-----\n",
                "payload": "tree e2b072ab52fad19a6438c04b6d3750b51a014d1c\nparent 0d072884f9201f645ae298936f2933970b73bec4\nauthor Christoph Nakazawa <christoph.pojer@gmail.com> 1747945103 +0900\ncommitter GitHub <noreply@github.com> 1747945103 -0400\n\nFix typo in error message. (#33313)\n\n## Summary\n\nI am writing code that isn't so good, so I saw this error message many\ntimes. It appears to have a typo. This PR fixes the typo.\n\n## How did you test this change?\n\nRan the tests",
                "verified_at": "2025-05-22T20:18:26Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/3e9db65fc3341148a5248b3ffc6bc68c0640fd3f",
        "html_url": "https://github.com/facebook/react/commit/3e9db65fc3341148a5248b3ffc6bc68c0640fd3f",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/3e9db65fc3341148a5248b3ffc6bc68c0640fd3f/comments",
        "author": {
            "login": "cpojer",
            "id": 13352,
            "node_id": "MDQ6VXNlcjEzMzUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/13352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpojer",
            "html_url": "https://github.com/cpojer",
            "followers_url": "https://api.github.com/users/cpojer/followers",
            "following_url": "https://api.github.com/users/cpojer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpojer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpojer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpojer/subscriptions",
            "organizations_url": "https://api.github.com/users/cpojer/orgs",
            "repos_url": "https://api.github.com/users/cpojer/repos",
            "events_url": "https://api.github.com/users/cpojer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpojer/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "0d072884f9201f645ae298936f2933970b73bec4",
                "url": "https://api.github.com/repos/facebook/react/commits/0d072884f9201f645ae298936f2933970b73bec4",
                "html_url": "https://github.com/facebook/react/commit/0d072884f9201f645ae298936f2933970b73bec4"
            }
        ]
    },
    {
        "sha": "0d072884f9201f645ae298936f2933970b73bec4",
        "node_id": "C_kwDOAJy2KtoAKDBkMDcyODg0ZjkyMDFmNjQ1YWUyOTg5MzZmMjkzMzk3MGI3M2JlYzQ",
        "commit": {
            "author": {
                "name": "mofeiZ",
                "email": "34200447+mofeiZ@users.noreply.github.com",
                "date": "2025-05-22T20:14:49Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-22T20:14:49Z"
            },
            "message": "[compiler] Inferred effect dependencies now include optional chains (#33326)\n\nInferred effect dependencies now include optional chains.\n\nThis is a temporary solution while\nhttps://github.com/facebook/react/pull/32099 and its followups are\nworked on. Ideally, we should model reactive scope dependencies in the\nIR similarly to `ComputeIR` -- dependencies should be hoisted and all\nreferences rewritten to use the hoisted dependencies.\n\n`\n---\n[//]: # (BEGIN SAPLING FOOTER)\nStack created with [Sapling](https://sapling-scm.com). Best reviewed\nwith [ReviewStack](https://reviewstack.dev/facebook/react/pull/33326).\n* __->__ #33326\n* #33325\n* #32286",
            "tree": {
                "sha": "09e92b78258d409d6094050607084174ec8fb26b",
                "url": "https://api.github.com/repos/facebook/react/git/trees/09e92b78258d409d6094050607084174ec8fb26b"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/0d072884f9201f645ae298936f2933970b73bec4",
            "comment_count": 1,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoL4W5CRC1aQ7uu5UhlAAABdIQAHgK6nR3fWT4HgKPzaMFyXa6\na6EmPRUl14x9bVB9OyOPao2kwG7FYOpQeBQE89pNrnYacM5nGcvXGaBWnYwf/ENm\nVDsDuviqSO8SK2HyGqccRKxdZ12yKXvON0HXLlRg966VRWbENk1LAqRpJJ5GNreW\nSLM8MYhLdjawZ2E4WHW/IaFefDBOrX43pMXOpcrWXE7duYDNIAuUFaJuiRFqlsMq\n2auBcRUjMGK5MFmz2nOkyg2V8Pe0/FkKPR5Qao09Te+N87wkkm4yrPOgtYqhfaZp\nxzTkm1DM+Xpv7r+57Iz7OlmIS5RmJmu9v7DuhQWydIsPDYhAqF8Q2frSeDrnYA6E\nAk/dOjZgVzYYcawdNcuWq/iwgMLv11muWiLtelZe4jdq+GPMPZFS9aI0wy0AO3ic\nRUOw8gTx4s89/oEwKMPfnGLS++ouZKbpnBEyajaiRYIlKH2hj4hJgY/Ksfdh+LBA\nwau/RS56NE0FNVNdWDOiJs6uw/XAWuX4JC7jg2ZdTqaDXDuarypyalBsWiKpJjxJ\nl6NQVlkTGcqoDSRYYdxTnR6UYm1Ot/nfHhomTkMAvJcjiXZAYEGPt+gROK4T8GA+\nm/jPCoYwns/FeFQ1M1tVQIabtODgoI3yOq8PfyssPN0kh1F/PFuefgLZZz0bANfo\n2tOBVhU1ziJtpDT+u+7J\n=Ti88\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 09e92b78258d409d6094050607084174ec8fb26b\nparent abf9fd559d584278c1c5f5464e35290651cf82bc\nauthor mofeiZ <34200447+mofeiZ@users.noreply.github.com> 1747944889 -0400\ncommitter GitHub <noreply@github.com> 1747944889 -0400\n\n[compiler] Inferred effect dependencies now include optional chains (#33326)\n\nInferred effect dependencies now include optional chains.\n\nThis is a temporary solution while\nhttps://github.com/facebook/react/pull/32099 and its followups are\nworked on. Ideally, we should model reactive scope dependencies in the\nIR similarly to `ComputeIR` -- dependencies should be hoisted and all\nreferences rewritten to use the hoisted dependencies.\n\n`\n---\n[//]: # (BEGIN SAPLING FOOTER)\nStack created with [Sapling](https://sapling-scm.com). Best reviewed\nwith [ReviewStack](https://reviewstack.dev/facebook/react/pull/33326).\n* __->__ #33326\n* #33325\n* #32286",
                "verified_at": "2025-05-22T20:14:51Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/0d072884f9201f645ae298936f2933970b73bec4",
        "html_url": "https://github.com/facebook/react/commit/0d072884f9201f645ae298936f2933970b73bec4",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/0d072884f9201f645ae298936f2933970b73bec4/comments",
        "author": {
            "login": "mofeiZ",
            "id": 34200447,
            "node_id": "MDQ6VXNlcjM0MjAwNDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/34200447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mofeiZ",
            "html_url": "https://github.com/mofeiZ",
            "followers_url": "https://api.github.com/users/mofeiZ/followers",
            "following_url": "https://api.github.com/users/mofeiZ/following{/other_user}",
            "gists_url": "https://api.github.com/users/mofeiZ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mofeiZ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mofeiZ/subscriptions",
            "organizations_url": "https://api.github.com/users/mofeiZ/orgs",
            "repos_url": "https://api.github.com/users/mofeiZ/repos",
            "events_url": "https://api.github.com/users/mofeiZ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mofeiZ/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "abf9fd559d584278c1c5f5464e35290651cf82bc",
                "url": "https://api.github.com/repos/facebook/react/commits/abf9fd559d584278c1c5f5464e35290651cf82bc",
                "html_url": "https://github.com/facebook/react/commit/abf9fd559d584278c1c5f5464e35290651cf82bc"
            }
        ]
    },
    {
        "sha": "abf9fd559d584278c1c5f5464e35290651cf82bc",
        "node_id": "C_kwDOAJy2KtoAKGFiZjlmZDU1OWQ1ODQyNzhjMWM1ZjU0NjRlMzUyOTA2NTFjZjgyYmM",
        "commit": {
            "author": {
                "name": "mofeiZ",
                "email": "34200447+mofeiZ@users.noreply.github.com",
                "date": "2025-05-22T20:14:05Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-22T20:14:05Z"
            },
            "message": "[compiler] Add reactive flag on scope dependencies (#33325)\n\nWhen collecting scope dependencies, mark each dependency with `reactive:\ntrue | false`. This prepares for later PRs\nhttps://github.com/facebook/react/pull/33326 and\nhttps://github.com/facebook/react/pull/32099 which rewrite scope\ndependencies into instructions.\n\nNote that some reactive objects may have non-reactive properties, but we\ndo not currently track this.\n\nTechnically, state[0] is reactive and state[1] is not. Currently, both\nwould be marked as reactive.\n```js\nconst state = useState();\n```\n---\n[//]: # (BEGIN SAPLING FOOTER)\nStack created with [Sapling](https://sapling-scm.com). Best reviewed\nwith [ReviewStack](https://reviewstack.dev/facebook/react/pull/33325).\n* #33326\n* __->__ #33325\n* #32286",
            "tree": {
                "sha": "29fc270cb76c2b72bbda03b70a77eeeb4ebb654a",
                "url": "https://api.github.com/repos/facebook/react/git/trees/29fc270cb76c2b72bbda03b70a77eeeb4ebb654a"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/abf9fd559d584278c1c5f5464e35290651cf82bc",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoL4WNCRC1aQ7uu5UhlAAA3EkQAG7NPxfm8slZZ3nEe3ZNPUGU\nJu2XUHcTRPJArJORlFEtWDmB5UAZ69QbKlugrM9MwPkzsFp/eO8beoVg9hrvwfZr\nzMFeiWb0hMule0yeydnIPu9D9GGjGqGj3gn9gHeXmBwdx1myRpuXq6JUDtzPemXa\nGtAUc/SDsEiG9+5x+IT0IVZz3LQcQeJgKCNVCOpwtlOEB8h/OXu0k5Ve70dO9Xfd\n7zahGi2djrTo8h/HqCYYyF9/4EI/ZKkSVRQJJKMaaygP21v5rcSGpoRoUeLlviZ7\nC3POgC8nWVn6L+8YbXS1a/Eyj2k9C5ruUAiIvbtC4sUGGbjahYvOMuHWvRTs3Ypf\nf6MjTWzG/eLqZXbKxF/jTa2Ykd8uSJEbDDtqLwTYXhdzjPz3WYDyyvQ5LgZP+dGQ\n6MCDfcOoQdHkhi6/6cNNGM80dUyPauOnD/PGayFJdB9JjVMF1uW74S8Mm+VpYYkt\n2Nb9RiqIcj+szoZfnA8zxPAiAks4kOxn1gQnLWa+VsrwF/ByU2odLnQgHnulSx+Y\nolZhGDH6wEOTqwBKSpsl+z2ZNOKXIp8anOOnQOdaFR9lz8cAGwENGFjHxg2FZ8qK\nR/j5mWB/uH90jMiZo7jAOHnie4QTFsP1YW6qwS52MBxtWl010+ABSdgFw6pifXun\npZNkyjIgBXUkD+rPlioT\n=ySrG\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 29fc270cb76c2b72bbda03b70a77eeeb4ebb654a\nparent 13f20044f3a5a9433eb4c6ef4c6577b8f0d13350\nauthor mofeiZ <34200447+mofeiZ@users.noreply.github.com> 1747944845 -0400\ncommitter GitHub <noreply@github.com> 1747944845 -0400\n\n[compiler] Add reactive flag on scope dependencies (#33325)\n\nWhen collecting scope dependencies, mark each dependency with `reactive:\ntrue | false`. This prepares for later PRs\nhttps://github.com/facebook/react/pull/33326 and\nhttps://github.com/facebook/react/pull/32099 which rewrite scope\ndependencies into instructions.\n\nNote that some reactive objects may have non-reactive properties, but we\ndo not currently track this.\n\nTechnically, state[0] is reactive and state[1] is not. Currently, both\nwould be marked as reactive.\n```js\nconst state = useState();\n```\n---\n[//]: # (BEGIN SAPLING FOOTER)\nStack created with [Sapling](https://sapling-scm.com). Best reviewed\nwith [ReviewStack](https://reviewstack.dev/facebook/react/pull/33325).\n* #33326\n* __->__ #33325\n* #32286",
                "verified_at": "2025-05-22T20:14:08Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/abf9fd559d584278c1c5f5464e35290651cf82bc",
        "html_url": "https://github.com/facebook/react/commit/abf9fd559d584278c1c5f5464e35290651cf82bc",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/abf9fd559d584278c1c5f5464e35290651cf82bc/comments",
        "author": {
            "login": "mofeiZ",
            "id": 34200447,
            "node_id": "MDQ6VXNlcjM0MjAwNDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/34200447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mofeiZ",
            "html_url": "https://github.com/mofeiZ",
            "followers_url": "https://api.github.com/users/mofeiZ/followers",
            "following_url": "https://api.github.com/users/mofeiZ/following{/other_user}",
            "gists_url": "https://api.github.com/users/mofeiZ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mofeiZ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mofeiZ/subscriptions",
            "organizations_url": "https://api.github.com/users/mofeiZ/orgs",
            "repos_url": "https://api.github.com/users/mofeiZ/repos",
            "events_url": "https://api.github.com/users/mofeiZ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mofeiZ/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "13f20044f3a5a9433eb4c6ef4c6577b8f0d13350",
                "url": "https://api.github.com/repos/facebook/react/commits/13f20044f3a5a9433eb4c6ef4c6577b8f0d13350",
                "html_url": "https://github.com/facebook/react/commit/13f20044f3a5a9433eb4c6ef4c6577b8f0d13350"
            }
        ]
    },
    {
        "sha": "13f20044f3a5a9433eb4c6ef4c6577b8f0d13350",
        "node_id": "C_kwDOAJy2KtoAKDEzZjIwMDQ0ZjNhNWE5NDMzZWI0YzZlZjRjNjU3N2I4ZjBkMTMzNTA",
        "commit": {
            "author": {
                "name": "mofeiZ",
                "email": "34200447+mofeiZ@users.noreply.github.com",
                "date": "2025-05-22T20:13:50Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-22T20:13:50Z"
            },
            "message": "[compiler] Prepare HIRBuilder to be used by later passes (#32286)\n\n---\n[//]: # (BEGIN SAPLING FOOTER)\nStack created with [Sapling](https://sapling-scm.com). Best reviewed\nwith [ReviewStack](https://reviewstack.dev/facebook/react/pull/32286).\n* #33326\n* #33325\n* __->__ #32286",
            "tree": {
                "sha": "c89598202fb5e6e81c48d8f56e21fb5ab40dfd54",
                "url": "https://api.github.com/repos/facebook/react/git/trees/c89598202fb5e6e81c48d8f56e21fb5ab40dfd54"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/13f20044f3a5a9433eb4c6ef4c6577b8f0d13350",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoL4V+CRC1aQ7uu5UhlAAA+VsQAKYXZIXw7ccnz/wQMVSEf76d\n13NHtGOhx8stO8UafO/Y0wcN4d8yAC/Ddtt1i9FNtMnz6TkGc1iayKkLHWEUmaoU\nO+7mEpmsXtkVtD/PkHlm6i+S/A0WgILMNM6AA8LZCGVRcYDXvOJFt9/UlE3Rf2Ph\nx6SyYWfOeMIN+AgD4vvMl5Oii+eLN3OyQM/lEVKSTDprbeV3JWyIHn10KOZjVjdx\ngerpVik60BrZGaDJLjWobmScBVocylAnEHheub+NKH+iAcWIFCaFEwxQuv19Fjfd\nBOvaa3blhfg/qTjM2fYP9PEDgm6hvjtO8zPqfpNa7AibSUt8vPb+/212p16r17l3\npxWnFNMKhxiIb64JEJGZGih5ofLVXycoctSr+Ucjs3lkM5thT8RQd61LUZQ+yANl\nwYASOsuAFaVKTQfx7yaj+NQof0vXjCJ7r1rDZDI1+oBgSpBZYVXjxvCvGLTTCFeM\n2Lbath1Y9RTSIVn/ZD57fZ2vqQQVAVYB4pvNWuT2bl9ayO2AI5bk7ttdbxfQEeXd\nadfmbVFWTQTqjKWbvRpqX42rWHYprlIqvNnDwrspCVBiLdDwA8BFiJdBYXVLc9gT\n17uF1HfDBHgPXpHOdzIrAxuWFIqx31tMZxHbuaZSsq43kVti2W4dC36tqpDIQFtT\nKjpzXyBywEzmGOJqWvmN\n=NcrB\n-----END PGP SIGNATURE-----\n",
                "payload": "tree c89598202fb5e6e81c48d8f56e21fb5ab40dfd54\nparent 8ce15b0f56a066ece465963ca1370e46113bb868\nauthor mofeiZ <34200447+mofeiZ@users.noreply.github.com> 1747944830 -0400\ncommitter GitHub <noreply@github.com> 1747944830 -0400\n\n[compiler] Prepare HIRBuilder to be used by later passes (#32286)\n\n---\n[//]: # (BEGIN SAPLING FOOTER)\nStack created with [Sapling](https://sapling-scm.com). Best reviewed\nwith [ReviewStack](https://reviewstack.dev/facebook/react/pull/32286).\n* #33326\n* #33325\n* __->__ #32286",
                "verified_at": "2025-05-22T20:13:53Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/13f20044f3a5a9433eb4c6ef4c6577b8f0d13350",
        "html_url": "https://github.com/facebook/react/commit/13f20044f3a5a9433eb4c6ef4c6577b8f0d13350",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/13f20044f3a5a9433eb4c6ef4c6577b8f0d13350/comments",
        "author": {
            "login": "mofeiZ",
            "id": 34200447,
            "node_id": "MDQ6VXNlcjM0MjAwNDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/34200447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mofeiZ",
            "html_url": "https://github.com/mofeiZ",
            "followers_url": "https://api.github.com/users/mofeiZ/followers",
            "following_url": "https://api.github.com/users/mofeiZ/following{/other_user}",
            "gists_url": "https://api.github.com/users/mofeiZ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mofeiZ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mofeiZ/subscriptions",
            "organizations_url": "https://api.github.com/users/mofeiZ/orgs",
            "repos_url": "https://api.github.com/users/mofeiZ/repos",
            "events_url": "https://api.github.com/users/mofeiZ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mofeiZ/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "8ce15b0f56a066ece465963ca1370e46113bb868",
                "url": "https://api.github.com/repos/facebook/react/commits/8ce15b0f56a066ece465963ca1370e46113bb868",
                "html_url": "https://github.com/facebook/react/commit/8ce15b0f56a066ece465963ca1370e46113bb868"
            }
        ]
    },
    {
        "sha": "8ce15b0f56a066ece465963ca1370e46113bb868",
        "node_id": "C_kwDOAJy2KtoAKDhjZTE1YjBmNTZhMDY2ZWNlNDY1OTYzY2ExMzcwZTQ2MTEzYmI4Njg",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-05-22T14:40:28Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-22T14:40:28Z"
            },
            "message": "[Fizz] Apply View Transition Name and Class to SSR:ed View Transitions (#33332)\n\nStacked on #33330.\n\nThis walks the element tree to activate the various classes under\ndifferent scenarios. There are some edge case things that are a little\ndifferent since we can't express every scenario without virtual nodes.\n\nThe main thing that's still missing though is avoiding animating updates\nif it can be contained to a layout or enter/exit/share if they're out of\nthe viewport. I.e. layout stuff.",
            "tree": {
                "sha": "85260d1bf51387dd4798c81848a194f81b83076d",
                "url": "https://api.github.com/repos/facebook/react/git/trees/85260d1bf51387dd4798c81848a194f81b83076d"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/8ce15b0f56a066ece465963ca1370e46113bb868",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoLzdcCRC1aQ7uu5UhlAAAphoQAFcGludMZzEUiwAShq3TbvwU\n5dGsRY2wD1NkcGjRDWV/nfRA0x/lWYGBlvY2WOb8XkWBptlA5wnU1C1FrnNLz9Qz\nc+c6HoyQmwVGOIAw/mx64DdMLPAvU31bq2TVkY0Rjp8Cy4CE7NlxAEcn47tFrF05\nfv17BRABQumX0ojFwqwUoao56SoiWuhxeRBoywUCf8jF0gNVQYpZdOf8G7S95vO8\nJKzZm/RLAu61cmAI2QQ6WJcAsOVeIMu/1HNi9SsLtnEZXN9hUB7oZmTTsoKSjiKs\nFDWfxY8nFuEBkv0nn2m6CSTy4R27dekvuxj9y1CgAX9Ac/tc/kd7Yz8oOqONtDOh\nJI30fYMNSF7h3qlcPJabVbpimKt9xnErj3VdkcvweOml1wTheig9BKcIglxS5bcG\niX37x/6PjUctLE8yZwhj6aY52cu/R0tKIpfsKIZ+8FTd5V3cbkzaCNZbTA7fut8j\nY1vZs+Rj00sfztgb2YHqfnoPLMdEqclYgw3M5dlK6f796k/NPfbvXxKSIZVFh3W8\njssMne4XVh3sORgG1DUD8S8lIyNz0sGMYKMbGkxyCjiUUC7VnE6gPcVuVnGPceN1\ntLKH7igPI/pOwMOyiRwLci25fMEZkKtWUEXKhE4H9iKJ7f8uIXGf0q91FZXfSm5P\nIn4xYkyqEEeZgeuB/13O\n=o+J3\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 85260d1bf51387dd4798c81848a194f81b83076d\nparent 91ac1fea1aacf80c9eb2815956e230921b55808c\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1747924828 -0400\ncommitter GitHub <noreply@github.com> 1747924828 -0400\n\n[Fizz] Apply View Transition Name and Class to SSR:ed View Transitions (#33332)\n\nStacked on #33330.\n\nThis walks the element tree to activate the various classes under\ndifferent scenarios. There are some edge case things that are a little\ndifferent since we can't express every scenario without virtual nodes.\n\nThe main thing that's still missing though is avoiding animating updates\nif it can be contained to a layout or enter/exit/share if they're out of\nthe viewport. I.e. layout stuff.",
                "verified_at": "2025-05-22T14:40:29Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/8ce15b0f56a066ece465963ca1370e46113bb868",
        "html_url": "https://github.com/facebook/react/commit/8ce15b0f56a066ece465963ca1370e46113bb868",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/8ce15b0f56a066ece465963ca1370e46113bb868/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "91ac1fea1aacf80c9eb2815956e230921b55808c",
                "url": "https://api.github.com/repos/facebook/react/commits/91ac1fea1aacf80c9eb2815956e230921b55808c",
                "html_url": "https://github.com/facebook/react/commit/91ac1fea1aacf80c9eb2815956e230921b55808c"
            }
        ]
    },
    {
        "sha": "91ac1fea1aacf80c9eb2815956e230921b55808c",
        "node_id": "C_kwDOAJy2KtoAKDkxYWMxZmVhMWFhY2Y4MGM5ZWIyODE1OTU2ZTIzMDkyMWI1NTgwOGM",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-05-22T14:25:13Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-22T14:25:13Z"
            },
            "message": "[Fizz] Pass batch as argument to revealCompletedBoundaries (#33330)\n\nFollow up to #33293.\n\nThis solves a race condition when boundaries are added to the batch\nafter the `startViewTransition` call.\n\nThis doesn't matter yet but it will once we start assigning names before\nthe `startViewTransition` call.\n\nA possible alternative solution might be to ensure the names are added\nsynchronously in the event that adds to the batch. It's possible to keep\nadding to a batch until the snapshot has happened.",
            "tree": {
                "sha": "ff23aa3d8ce4e439633e9dcfae160d1e0d19dd4e",
                "url": "https://api.github.com/repos/facebook/react/git/trees/ff23aa3d8ce4e439633e9dcfae160d1e0d19dd4e"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/91ac1fea1aacf80c9eb2815956e230921b55808c",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoLzPJCRC1aQ7uu5UhlAAA7hoQAJ+UIbvJbLJm1oGIgGFpd86J\n0vMncO9BxLtgGu3cMSamEgpWUCKfbB+tzsGNYqPj+YLfKnaHPtl6YgeV66uT188q\nZypGGC+B74VWjXaX2w5hUwqF0IeW0oqnldlftzj7PO5nmqOBjay8oqVsMBl4Cpzm\nupF5fx4qZJLtZMohnTys9pXXiZ6SG+ftnpt65GPunrDKE5j0YQYCF9czZoYs8JN2\nql+f1MTQnwCezsY1PC98n0T4eZEZDcx6NC78YGeKhPP32zBN+zqUuqALqYSkZnLx\naOF8PVe3qG3aOQajT+jz7G1u6HD9YccFpP/nK7Gvs6qZHUD+YxtpmjE7eTYba1kf\nDtDT27NfANKblIUXFD6f2X7lE9qlROaMSGrUTbBvuOgs8WH8vAG/WWovlpyGflJM\nqj9MjaZ4S2ewAivFQ7khnAAn/Stn4MhGPyn681hilfD/e85gjHkBmfs4BraHbpYR\n5yLL9P+gUzgaIwy/0/PUsmDbnG2da6cxd05Sj4J3+Zxqf2QRwpXOBj5hNqIFzjKg\nGXFqNlc6OKFcAl9aWgx1E768VFwwkvl5FS9WUAppp/KpoKvEVXn0qelHEsGx7ANB\nacQvldftbNyLDlseGWc1ZahLw+asGPSrJ1flEQ0s9qNNdwQ13M4jdbGArNbsfGf+\nJRkysSlnspN+nGUelawy\n=is1z\n-----END PGP SIGNATURE-----\n",
                "payload": "tree ff23aa3d8ce4e439633e9dcfae160d1e0d19dd4e\nparent 08064ea6713ff55730c5d4f50b733891ebe0e875\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1747923913 -0400\ncommitter GitHub <noreply@github.com> 1747923913 -0400\n\n[Fizz] Pass batch as argument to revealCompletedBoundaries (#33330)\n\nFollow up to #33293.\n\nThis solves a race condition when boundaries are added to the batch\nafter the `startViewTransition` call.\n\nThis doesn't matter yet but it will once we start assigning names before\nthe `startViewTransition` call.\n\nA possible alternative solution might be to ensure the names are added\nsynchronously in the event that adds to the batch. It's possible to keep\nadding to a batch until the snapshot has happened.",
                "verified_at": "2025-05-22T14:25:15Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/91ac1fea1aacf80c9eb2815956e230921b55808c",
        "html_url": "https://github.com/facebook/react/commit/91ac1fea1aacf80c9eb2815956e230921b55808c",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/91ac1fea1aacf80c9eb2815956e230921b55808c/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "08064ea6713ff55730c5d4f50b733891ebe0e875",
                "url": "https://api.github.com/repos/facebook/react/commits/08064ea6713ff55730c5d4f50b733891ebe0e875",
                "html_url": "https://github.com/facebook/react/commit/08064ea6713ff55730c5d4f50b733891ebe0e875"
            }
        ]
    },
    {
        "sha": "08064ea6713ff55730c5d4f50b733891ebe0e875",
        "node_id": "C_kwDOAJy2KtoAKDA4MDY0ZWE2NzEzZmY1NTczMGM1ZDRmNTBiNzMzODkxZWJlMGU4NzU",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-05-22T14:21:28Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-22T14:21:28Z"
            },
            "message": "[Fizz] Make ViewTransition enter/exit/share null the same as none (#33331)\n\nI believe that these mean the same thing. We don't have to emit the\nattribute if it's `none` for these cases because if there is no matching\nscenario we won't apply the animation in this case.\n\nThe only case where we have to emit `none` in the attribute is for\n`vt-update` because those can block updates from propagating upwards.",
            "tree": {
                "sha": "bee546d0581b8f3ec1b58b86504c05cb08d34b03",
                "url": "https://api.github.com/repos/facebook/react/git/trees/bee546d0581b8f3ec1b58b86504c05cb08d34b03"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/08064ea6713ff55730c5d4f50b733891ebe0e875",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoLzLoCRC1aQ7uu5UhlAAAS+8QADElikCWEzaNtRBrGocSi89T\nTNkcRMn0jTtI+xqGjuwxZHfFaFiGbGe4aKkRvFLKReazRYDdDyq3ND58vxn6zQCa\nhhwICoHaii9fpha88pe4bAyWHqQUnzP8illZ3Sh/Dmuapj8L0023sz63ubgOKzuJ\n3IgR+UnJkZfAcgMY2Iiq0Zr4QdWEw7Ua+LFqYniNBx/OPUcL58JB9dwFuFEIqxnk\nqfP5SrdXn6+7hMaeYsWbXqpzlasu8Ce7XiTKmxF5HuQMJ9NlCkH5u7K7GL+Jw/Os\neUk+HquAOc+fzjNfgNZAtMl61jb1JMbzWh19haqw7OHuJrMz0APFfUidVlOSpgR9\nj7zq4e4NvQUaW1zQIBaYOk3ommlkNqH1j0YM2H+bAUycJ0ak41W2KqX9QFr4Zi/m\nULa+O7RlI/WsQQbEsg9SFlCek+d3E/k170k50i3Mtg0Tw85QxG3BlqL7M1pIcJ8e\nu0HHv4l+bGBTK/kp4K9/YMQnfFawXbfNVgqWvXcv3ekkgZje4AkXMYmhWv0/rJ96\numMoFlzC2UMzd7wOTOQpvaw+SjxocU3jNVWvb6aZzK48K2+b1uAr4pR91XQFkVNq\n8UHb/I3M6HpaUWZOv9bUh7qxSKeUM9KjEZvqIfP9r1/CbXEFoHRw1/9cKn6XNjgQ\nz3vRlAcvatsp2mhmQYHx\n=lalj\n-----END PGP SIGNATURE-----\n",
                "payload": "tree bee546d0581b8f3ec1b58b86504c05cb08d34b03\nparent 99781d605b6a6fd332bba654ac0c328e41df888c\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1747923688 -0400\ncommitter GitHub <noreply@github.com> 1747923688 -0400\n\n[Fizz] Make ViewTransition enter/exit/share null the same as none (#33331)\n\nI believe that these mean the same thing. We don't have to emit the\nattribute if it's `none` for these cases because if there is no matching\nscenario we won't apply the animation in this case.\n\nThe only case where we have to emit `none` in the attribute is for\n`vt-update` because those can block updates from propagating upwards.",
                "verified_at": "2025-05-22T14:21:30Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/08064ea6713ff55730c5d4f50b733891ebe0e875",
        "html_url": "https://github.com/facebook/react/commit/08064ea6713ff55730c5d4f50b733891ebe0e875",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/08064ea6713ff55730c5d4f50b733891ebe0e875/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "99781d605b6a6fd332bba654ac0c328e41df888c",
                "url": "https://api.github.com/repos/facebook/react/commits/99781d605b6a6fd332bba654ac0c328e41df888c",
                "html_url": "https://github.com/facebook/react/commit/99781d605b6a6fd332bba654ac0c328e41df888c"
            }
        ]
    },
    {
        "sha": "99781d605b6a6fd332bba654ac0c328e41df888c",
        "node_id": "C_kwDOAJy2KtoAKDk5NzgxZDYwNWI2YTZmZDMzMmJiYTY1NGFjMGMzMjhlNDFkZjg4OGM",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-05-22T14:20:13Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-22T14:20:13Z"
            },
            "message": "[Fizz] Track boundaries in future rows as postponed (#33329)\n\nFollow up to #33321.\n\nWe can mark boundaries that were blocked in the prerender as postponed\nbut without anything to replayed inside them. That way they're not\nemitted in the prerender but is unblocked when replayed.\n\nTechnically this does some unnecessary replaying of the path to the\notherwise already completed boundary but it simplifies our model by just\nmarking the boundary as needing replaying.",
            "tree": {
                "sha": "67261bc928c3a5c3173d6779773349cf4c972f3a",
                "url": "https://api.github.com/repos/facebook/react/git/trees/67261bc928c3a5c3173d6779773349cf4c972f3a"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/99781d605b6a6fd332bba654ac0c328e41df888c",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoLzKdCRC1aQ7uu5UhlAAARGsQAFnngdj1wsKBSU+T1+zXKZSe\nIiz3GSt3dTi9k0ohJvMV2bfjh0RFDeTBxLoIVyRoHYp38zhYDIniYpFFKYSS9qoN\nNijdf98DVac3RUV2WcZwc3Oc3EHBQQJ7/0X9v3J/1yBA2KQoSrcReyRmwNRxsa4t\nZh28RqbeJlZJPSsiV2XiknRiOG1S+BIauCb1O7B3FYuWvQcVRcbnG8rPJUhgl+Qh\nR76hAr80wi6bU8bQJRkz0J9+kzvzQmniZD7HQS5v04oclnnfjBUc05ww8lImSqxb\n55ZlwK3iMx/RosOgNd33xHoUeeDQX/f52FOVzI5/bytVJdukqm9li8I+pkklEr/I\nRNUKv2BXQiVMcTIYu28ZbFabtje8g/1zUMmNN+QyOsNTh0WzINyqqsT2PozU18KQ\nqbpsfPV42o+oifCGjhqOhfbU0vaZBfBAhwmK2qFbftbT39HR0sejLKAFj7ghf7Eb\nx5CxVRwZwVwzlt0Ad1AcphEst2LiM1L3DBPiZ9YCMdpAoHhZqBwRlH9/JLuc6L9l\nCe+4eg/bV1UZbUAe/7irJJH0HCl8sOa9PxqQWQ8A7Y15thuxU1+IRYO9LIy/ZAZg\nOeLSQd5wUUFOCkM1Dy6Y72V5WPvobY8777fOMv2klVB+wIdhUan+UP+7KxH1Hiou\nFR41sL2biuDFnIYQHeAq\n=5tof\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 67261bc928c3a5c3173d6779773349cf4c972f3a\nparent 459a2c4298187cb0ee45605e2575ff35f4a81183\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1747923613 -0400\ncommitter GitHub <noreply@github.com> 1747923613 -0400\n\n[Fizz] Track boundaries in future rows as postponed (#33329)\n\nFollow up to #33321.\n\nWe can mark boundaries that were blocked in the prerender as postponed\nbut without anything to replayed inside them. That way they're not\nemitted in the prerender but is unblocked when replayed.\n\nTechnically this does some unnecessary replaying of the path to the\notherwise already completed boundary but it simplifies our model by just\nmarking the boundary as needing replaying.",
                "verified_at": "2025-05-22T14:20:15Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/99781d605b6a6fd332bba654ac0c328e41df888c",
        "html_url": "https://github.com/facebook/react/commit/99781d605b6a6fd332bba654ac0c328e41df888c",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/99781d605b6a6fd332bba654ac0c328e41df888c/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "459a2c4298187cb0ee45605e2575ff35f4a81183",
                "url": "https://api.github.com/repos/facebook/react/commits/459a2c4298187cb0ee45605e2575ff35f4a81183",
                "html_url": "https://github.com/facebook/react/commit/459a2c4298187cb0ee45605e2575ff35f4a81183"
            }
        ]
    },
    {
        "sha": "459a2c4298187cb0ee45605e2575ff35f4a81183",
        "node_id": "C_kwDOAJy2KtoAKDQ1OWEyYzQyOTgxODdjYjBlZTQ1NjA1ZTI1NzVmZjM1ZjRhODExODM",
        "commit": {
            "author": {
                "name": "mofeiZ",
                "email": "34200447+mofeiZ@users.noreply.github.com",
                "date": "2025-05-21T21:23:29Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-21T21:23:29Z"
            },
            "message": "[compiler][gating] Experimental directive based gating (#33149)\n\nAdds `dynamicGating` as an experimental option for testing rollout DX at\nMeta. If specified, this enables dynamic gating which matches `use memo\nif(...)` directives.\n\n#### Example usage\nInput file\n```js\n// @dynamicGating:{\"source\":\"myModule\"}\nexport function MyComponent() {\n  'use memo if(isEnabled)';\n   return <div>...</div>;\n}\n```\nCompiler output\n```js\nimport {isEnabled} from 'myModule';\nexport const MyComponent = isEnabled()\n  ? <optimized version>\n  : <original version>;\n```\n---\n[//]: # (BEGIN SAPLING FOOTER)\nStack created with [Sapling](https://sapling-scm.com). Best reviewed\nwith [ReviewStack](https://reviewstack.dev/facebook/react/pull/33149).\n* __->__ #33149\n* #33148",
            "tree": {
                "sha": "d0178cb98efef519253d07c9fefa593b2e9718e8",
                "url": "https://api.github.com/repos/facebook/react/git/trees/d0178cb98efef519253d07c9fefa593b2e9718e8"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/459a2c4298187cb0ee45605e2575ff35f4a81183",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoLkRRCRC1aQ7uu5UhlAAAO3gQAJVdLmGokr7r9X+SmIC2rZtX\no/eztBVbEiI3Qs9NZsJi83bzwK63AAwPaEGgYEs3EUrZxsRlhmoRd12qiRAzzYsB\nKQRp4c7PSHYy4gno9y1NMjMsOiARpflFvOLAUN3z5S1+tEblAOYYY5f48kc/R3K8\ngtgo4HEtgCzG0R5ogOx9jGUzmr8kywtaFuyD1Vvab+SpyH+Nmm+ao+0ee6TIihiJ\nMkoZ43frLVVG3ng8eiuFPLVVqgNwKqNTFF3V692RqyMSArIcWFoiDjcfmXeInttc\nFFfSuzfukF4XLWtvhACOIM7bozEvgCqKsBodqpxHpT6mQRgSiloGzJ1v4PW4tDMX\n48FqGh58+3wYeElRcp0QmmgBXIEB8928DV/CT3yQPRyVLM2A9WCG/u1i/aHxFPxx\nP1sBHO/yWJSRlIfwOzcY5cHvy1ndbq88IT5IqsBN39b3EZ3JDE38yjFI4o/xpDcw\nNv59RzezX9KzOncxBdZJi21llvo+NvNHyTdgQiPZHbxhXuDB2lo/MwPsWS9kdQPI\nQ+0UVEuopRk7C2gZCBjT8hh5xJ5YpLSv7Wml5GXfVqiYrg3TfkHiLv8Qmpy50QDk\nGz17NXBecboAnDjKJcIjD4ogHr8auZu64rJbPEJwFRIFXi0S1rHQukLgj2F1YqZl\nQ6C+bALtiC9sPvV58pUP\n=3cCy\n-----END PGP SIGNATURE-----\n",
                "payload": "tree d0178cb98efef519253d07c9fefa593b2e9718e8\nparent 1c43d0aed74de4aae210ba7081b60f944df31954\nauthor mofeiZ <34200447+mofeiZ@users.noreply.github.com> 1747862609 -0400\ncommitter GitHub <noreply@github.com> 1747862609 -0400\n\n[compiler][gating] Experimental directive based gating (#33149)\n\nAdds `dynamicGating` as an experimental option for testing rollout DX at\nMeta. If specified, this enables dynamic gating which matches `use memo\nif(...)` directives.\n\n#### Example usage\nInput file\n```js\n// @dynamicGating:{\"source\":\"myModule\"}\nexport function MyComponent() {\n  'use memo if(isEnabled)';\n   return <div>...</div>;\n}\n```\nCompiler output\n```js\nimport {isEnabled} from 'myModule';\nexport const MyComponent = isEnabled()\n  ? <optimized version>\n  : <original version>;\n```\n---\n[//]: # (BEGIN SAPLING FOOTER)\nStack created with [Sapling](https://sapling-scm.com). Best reviewed\nwith [ReviewStack](https://reviewstack.dev/facebook/react/pull/33149).\n* __->__ #33149\n* #33148",
                "verified_at": "2025-05-21T21:23:31Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/459a2c4298187cb0ee45605e2575ff35f4a81183",
        "html_url": "https://github.com/facebook/react/commit/459a2c4298187cb0ee45605e2575ff35f4a81183",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/459a2c4298187cb0ee45605e2575ff35f4a81183/comments",
        "author": {
            "login": "mofeiZ",
            "id": 34200447,
            "node_id": "MDQ6VXNlcjM0MjAwNDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/34200447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mofeiZ",
            "html_url": "https://github.com/mofeiZ",
            "followers_url": "https://api.github.com/users/mofeiZ/followers",
            "following_url": "https://api.github.com/users/mofeiZ/following{/other_user}",
            "gists_url": "https://api.github.com/users/mofeiZ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mofeiZ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mofeiZ/subscriptions",
            "organizations_url": "https://api.github.com/users/mofeiZ/orgs",
            "repos_url": "https://api.github.com/users/mofeiZ/repos",
            "events_url": "https://api.github.com/users/mofeiZ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mofeiZ/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "1c43d0aed74de4aae210ba7081b60f944df31954",
                "url": "https://api.github.com/repos/facebook/react/commits/1c43d0aed74de4aae210ba7081b60f944df31954",
                "html_url": "https://github.com/facebook/react/commit/1c43d0aed74de4aae210ba7081b60f944df31954"
            }
        ]
    },
    {
        "sha": "1c43d0aed74de4aae210ba7081b60f944df31954",
        "node_id": "C_kwDOAJy2KtoAKDFjNDNkMGFlZDc0ZGU0YWFlMjEwYmE3MDgxYjYwZjk0NGRmMzE5NTQ",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-05-21T20:13:54Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-21T20:13:54Z"
            },
            "message": "Unify serverAct helpers (#33327)\n\nThis uses the richer `serverAct` helper that we already use in other\ntests.\n\nThis avoids using the `Scheduler`. We don't use that package on the\nserver so it doesn't make sense to simulate going through it.\nAdditionally, we really should be getting rid of it on the client too to\nfavor `postTask` polyfills.",
            "tree": {
                "sha": "20c662552ffb182541cb8c8529e86e24364ce78a",
                "url": "https://api.github.com/repos/facebook/react/git/trees/20c662552ffb182541cb8c8529e86e24364ce78a"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/1c43d0aed74de4aae210ba7081b60f944df31954",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoLjQCCRC1aQ7uu5UhlAAAd/MQAJ5L6ehjlNT7NmwFuuA19Egy\nLf42bvqTzl4xBFrA/2WV4KRyqZ6lFAemSgtcgieP7kaamlHroTj8+r/SzH+62TMy\nT+geigKgRwYcm+Yn+BPwkst7rCg7B210N/1rfMDJDRnGYHHBqDwqBhiDsiZeNh2I\nyVfARiZT5ITA1HwTkFEQNesKx6Y6gk15tHmRZlMTevjeMp5mWNyx+hKUFDNK5oho\n0l1rD/Av/2PXR/TvNso8PObK19Rk26zktzkxBZlGbv/eyC4MDJzj5d+VHpNe3JOn\nlb4VyZNpdQmpOqqdk9PVIYQIw6KQr6ALD0DZi1Cay7mmN5DFISgM6dEgmdGUyecg\nmEPiQPl9YV1yorNuLYneqlH2p0WniM3xGtIqbXabBbxaN2RIYDPhOf7Yy626itbY\np8E3QfR1U8ZwChE1rgBMOXkMs821eRUbIxLu99CMNVK+tJLNjvFdxvGZcRPUovGx\nwjIVjl0HWrMSqXJR1QNipCYv9GelQQNTmX+5AO3NtC6tB2UMs+4Bs684chdwuKv+\nkhgV/sY3QcsyB7JexJk7xHc0eeTS2+83L8XRbNX9oV/ev0xB3gciwj6WgIvu8DuU\nsFdO5sscTZgFwP9xPiiOrJk2D9q8mJfXvbMBG1nlfzlZdiydnrs/ZuXRI2cJJ8B8\n1IHQodVc6zXRbRanUcOR\n=HkQe\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 20c662552ffb182541cb8c8529e86e24364ce78a\nparent 1835b3f7d9c0541259a8812c5dfaf3d77f0721eb\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1747858434 -0400\ncommitter GitHub <noreply@github.com> 1747858434 -0400\n\nUnify serverAct helpers (#33327)\n\nThis uses the richer `serverAct` helper that we already use in other\ntests.\n\nThis avoids using the `Scheduler`. We don't use that package on the\nserver so it doesn't make sense to simulate going through it.\nAdditionally, we really should be getting rid of it on the client too to\nfavor `postTask` polyfills.",
                "verified_at": "2025-05-21T20:13:56Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/1c43d0aed74de4aae210ba7081b60f944df31954",
        "html_url": "https://github.com/facebook/react/commit/1c43d0aed74de4aae210ba7081b60f944df31954",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/1c43d0aed74de4aae210ba7081b60f944df31954/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "1835b3f7d9c0541259a8812c5dfaf3d77f0721eb",
                "url": "https://api.github.com/repos/facebook/react/commits/1835b3f7d9c0541259a8812c5dfaf3d77f0721eb",
                "html_url": "https://github.com/facebook/react/commit/1835b3f7d9c0541259a8812c5dfaf3d77f0721eb"
            }
        ]
    },
    {
        "sha": "1835b3f7d9c0541259a8812c5dfaf3d77f0721eb",
        "node_id": "C_kwDOAJy2KtoAKDE4MzViM2Y3ZDljMDU0MTI1OWE4ODEyYzVkZmFmM2Q3N2YwNzIxZWI",
        "commit": {
            "author": {
                "name": "Jack Pope",
                "email": "jackpope1@gmail.com",
                "date": "2025-05-21T19:47:47Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-21T19:47:47Z"
            },
            "message": "New children notify fragment instances in Fabric (#33093)\n\nWhen a new child of a fragment instance is inserted, we need to notify\nthe instance to keep any relevant tracking up to date. For example, we\nautomatically observe the new child with any active\nIntersectionObserver.\n\nFor mutable renderers (DOM), we reuse the existing traversal in\n`commitPlacement` that does the insertions for HostComponents. Immutable\nrenderers (Fabric) exit this path before the traversal though, so\ncurrently we can't notify the fragment instances.\n\nHere I've created a separate traversal in `commitPlacement`,\nspecifically for immutable renders when `enableFragmentRefs` is on.",
            "tree": {
                "sha": "5a61d1cf401d2ca67c4bcedee5c5e367ae4ae121",
                "url": "https://api.github.com/repos/facebook/react/git/trees/5a61d1cf401d2ca67c4bcedee5c5e367ae4ae121"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/1835b3f7d9c0541259a8812c5dfaf3d77f0721eb",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoLi3jCRC1aQ7uu5UhlAAAVLsQAGIVMLaq9E1HW5Lft50wsVcY\nHou2/0KhQy6HIQZbAEJxgUrGP0voUpNlOnJF9ST+rcBt/UKFZIwpYv08n+BALm6Q\nXJIazi0/D6k9Ynx07s1otBy/VcWX1r+nZcNuE9AMjKsRZCjvCLgPntq6XGWBJYFx\nvK5IHoTnMkmcGmn+xJWIAEnWAm2CxjBWWuwlIoAVOy/A+pspAmrHZfH5dFfogHyd\nOuhskZxK3A/Qnf0YbfZobZjF9w8xnu0DhA4vUSdDxTVIgxqm33Ry9YGwGZ10OGlI\nnn3xfg+lt40mSHfXjIebfBHPFFQo6C/DWXPjIu3MaugOp4iPolWGdkL+GlDPR7tL\nvlOXBqaf9pGUXk8J1DzhWA+6AGHom1WoZGfTTtSY9JDBzRJTDiCHM5z1t7ySVEkU\npfFypB/OgxwWIxLakSOnylC1AeMVYpjVmDBQdoSKv/c2j2g4h0MxhcaHMqMXHOf4\nM0an5Vl65hGp4VXAhgh8TV1bTW8piy8yqllpxb9tw62hHdXn0vOnQ6dcnXBChwLh\nGMSMf9qnBP1AfzGH2hYlxeQfxsGbqEKSGNKopY8Ri3cpewBgedrLFsxUIE0nrT2y\nNogpWRwDVTkqHqd+UUcGOQwjApC1i5PqXeAWPfI/UENUFlEAZugXfVYzTnyhgdyk\nhehcQBq56GbO8m6c+H8t\n=yUQk\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 5a61d1cf401d2ca67c4bcedee5c5e367ae4ae121\nparent f4041aa388b7eeba94a26f6c273e9f4c18e2d2b3\nauthor Jack Pope <jackpope1@gmail.com> 1747856867 -0400\ncommitter GitHub <noreply@github.com> 1747856867 -0400\n\nNew children notify fragment instances in Fabric (#33093)\n\nWhen a new child of a fragment instance is inserted, we need to notify\nthe instance to keep any relevant tracking up to date. For example, we\nautomatically observe the new child with any active\nIntersectionObserver.\n\nFor mutable renderers (DOM), we reuse the existing traversal in\n`commitPlacement` that does the insertions for HostComponents. Immutable\nrenderers (Fabric) exit this path before the traversal though, so\ncurrently we can't notify the fragment instances.\n\nHere I've created a separate traversal in `commitPlacement`,\nspecifically for immutable renders when `enableFragmentRefs` is on.",
                "verified_at": "2025-05-21T19:47:49Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/1835b3f7d9c0541259a8812c5dfaf3d77f0721eb",
        "html_url": "https://github.com/facebook/react/commit/1835b3f7d9c0541259a8812c5dfaf3d77f0721eb",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/1835b3f7d9c0541259a8812c5dfaf3d77f0721eb/comments",
        "author": {
            "login": "jackpope",
            "id": 8965173,
            "node_id": "MDQ6VXNlcjg5NjUxNzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8965173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jackpope",
            "html_url": "https://github.com/jackpope",
            "followers_url": "https://api.github.com/users/jackpope/followers",
            "following_url": "https://api.github.com/users/jackpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/jackpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jackpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jackpope/subscriptions",
            "organizations_url": "https://api.github.com/users/jackpope/orgs",
            "repos_url": "https://api.github.com/users/jackpope/repos",
            "events_url": "https://api.github.com/users/jackpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jackpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "f4041aa388b7eeba94a26f6c273e9f4c18e2d2b3",
                "url": "https://api.github.com/repos/facebook/react/commits/f4041aa388b7eeba94a26f6c273e9f4c18e2d2b3",
                "html_url": "https://github.com/facebook/react/commit/f4041aa388b7eeba94a26f6c273e9f4c18e2d2b3"
            }
        ]
    },
    {
        "sha": "f4041aa388b7eeba94a26f6c273e9f4c18e2d2b3",
        "node_id": "C_kwDOAJy2KtoAKGY0MDQxYWEzODhiN2VlYmE5NGEyNmY2YzI3M2U5ZjRjMThlMmQyYjM",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-05-21T19:31:22Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-21T19:31:22Z"
            },
            "message": "[Fizz] Unblock SuspenseList when prerendering (#33321)\n\nThere's an interesting case when a SuspenseList is partially prerendered\nbut some of the completed boundaries are blocked by rows to be resumed.\n\nThis handles it but just unblocking the future rows to avoid stalling.\n\nHowever, the correct semantics will need special handling in the\npostponed state.",
            "tree": {
                "sha": "98a9c601e8a0a8261b70529582dad74b82ae4872",
                "url": "https://api.github.com/repos/facebook/react/git/trees/98a9c601e8a0a8261b70529582dad74b82ae4872"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/f4041aa388b7eeba94a26f6c273e9f4c18e2d2b3",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoLioKCRC1aQ7uu5UhlAAArVUQACyehOGdLKXlodgyIGWZ08aJ\nThYJ2FcvPRe4C71zpbJwqoMrGL6jb2w+NA8lWopfWnGz5swa2etZYlRPYYViJ4Im\nCmarMdvw5Le42FNumvRsbvLvyt+26ZRhfugu2Rj4GkkQZMhRmfi/cN10otl9mT09\neyM9zNswhgAMQ24ylBIiXzNS3HTbiqwb7RNm4CgOUwl26GUU48bTCchpLMBUv6vI\nAqM2Pa7jgMsLfMfnoYXnTD4qKo+RWD84JmeSMXsvsU+tIk1CVPXQWqSApPsSgCTr\n36c70E+goA/IrG7YDxDJcQawn905+wn2+cfqOweHqN1UlyJvwPOf9geyNvC/TQ1H\njTdlu+f9zlPHSHI4WAyXIEHee7imPabrhXeBX9rwRa/mQfC06Ck9lRmHhH8EcRsD\npjJVqVE9NXQiQo8a9egi3+ea/u8k64FqKwajQnHBCvocXrx4FddCi9qANnqe+OUY\n8kBQmTBKLl19AiQQ+2aLEm3/WXSv1LDIXeKKE1fMXG6jlj3Miy18/Z5yAIay5ZPw\nC7EDbMumNNtKoQoKgnqCi+axkn0iKNm2IlUuqUsRwOJvBSZqtVvjvoTjQtUo49fB\nFQv3Kaim921NR5LRnCjWgFyPiDvkCrWloN5X7cK4aNpzwvPv8Aj1hV6xa84Sxzmp\n0GOXrFeiwuilA6is5i6B\n=o67K\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 98a9c601e8a0a8261b70529582dad74b82ae4872\nparent 3710c4d4f9ffb6aa07e291b822e4ec7d69ed5a32\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1747855882 -0400\ncommitter GitHub <noreply@github.com> 1747855882 -0400\n\n[Fizz] Unblock SuspenseList when prerendering (#33321)\n\nThere's an interesting case when a SuspenseList is partially prerendered\nbut some of the completed boundaries are blocked by rows to be resumed.\n\nThis handles it but just unblocking the future rows to avoid stalling.\n\nHowever, the correct semantics will need special handling in the\npostponed state.",
                "verified_at": "2025-05-21T19:31:25Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/f4041aa388b7eeba94a26f6c273e9f4c18e2d2b3",
        "html_url": "https://github.com/facebook/react/commit/f4041aa388b7eeba94a26f6c273e9f4c18e2d2b3",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/f4041aa388b7eeba94a26f6c273e9f4c18e2d2b3/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "3710c4d4f9ffb6aa07e291b822e4ec7d69ed5a32",
                "url": "https://api.github.com/repos/facebook/react/commits/3710c4d4f9ffb6aa07e291b822e4ec7d69ed5a32",
                "html_url": "https://github.com/facebook/react/commit/3710c4d4f9ffb6aa07e291b822e4ec7d69ed5a32"
            }
        ]
    },
    {
        "sha": "3710c4d4f9ffb6aa07e291b822e4ec7d69ed5a32",
        "node_id": "C_kwDOAJy2KtoAKDM3MTBjNGQ0ZjlmZmI2YWEwN2UyOTFiODIyZTRlYzdkNjllZDVhMzI",
        "commit": {
            "author": {
                "name": "Jack Pope",
                "email": "jackpope1@gmail.com",
                "date": "2025-05-21T17:57:35Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-21T17:57:35Z"
            },
            "message": "Prevent errors from comment node roots with enableViewTransition (#33205)\n\nWe have many cases internally where the `containerInstance` resolves to\na comment node. `restoreRootViewTransitionName` is called when\n`enableViewTransition` is on, even without introducing a\n`<ViewTransition />`. So that means it can crash pages because\n`containerInstance.style` is `undefined` just by turning on the flag.\n\nThis skips cancel/restore of root view transition name if a comment node is the root.",
            "tree": {
                "sha": "494620b57bda86d36af9c80da9776b4a689ee573",
                "url": "https://api.github.com/repos/facebook/react/git/trees/494620b57bda86d36af9c80da9776b4a689ee573"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/3710c4d4f9ffb6aa07e291b822e4ec7d69ed5a32",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoLhQPCRC1aQ7uu5UhlAAA7NoQAEfagrvd7ivkkUgrALOpzN07\nF7hibIDrrto7k8FAOXpmVM/ZY7Wh65zMwTuTHWo181OI99nV4uCE6QtqGWZq7TQL\nraP918DXC99U1gL1J3vfXtR4f+f8DGAl3L1KsVEH8p7vdOv8NN9RG15Y+qgiV4gz\n205apAVaZ1uoS9g+VXkcURH1RRD26Bms+1dhMCY8hM0i8a53kC+dyuby3kKxDMTs\nYzcu8lRDH+Hpl+LetO6txqfWY3HKwGsbrHvjQ5WtVpcV39VC4dmaok1PO+TDm/Q4\nbM8/uVU3hFrGpVFQJwJNko4DscEr6/ztDSunAffzk9fECTvZnLrUgBgSfJqGnhjv\n6ecbPJ1yISMs363nrKNmtfPNXZjQF/0WFrxgKglMPRII7L/YRfxFhkF2wEgFnnv2\n0wYPGX891965gA7vyHZc1nyZemtn90f4rDwjMFvaTomDNcnFH1r9BfsuXV0Yd2+e\n0K/WrpCFCI7Rftyx1STAQnCJWfjj2CgWJxp/H1clM/xs0BZG1r/xSrNF5o6ZaAp7\n+F5Cby1e3EA+J/HtbheLZaThrJc0znzbxaeF7SDjEB+NJQbfE+FvQBFWoaUeMO50\nmyS3YGWpkA4hPibWfqoVuC9hhhSQznjF0epUT6iuv6frj5J/3umFgaxS+kZncCX0\nqGXEe9pb9T6qXYIyz+7L\n=xVrm\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 494620b57bda86d36af9c80da9776b4a689ee573\nparent 2388481283640d034fd6b4edfca4f11e67953673\nauthor Jack Pope <jackpope1@gmail.com> 1747850255 -0400\ncommitter GitHub <noreply@github.com> 1747850255 -0400\n\nPrevent errors from comment node roots with enableViewTransition (#33205)\n\nWe have many cases internally where the `containerInstance` resolves to\na comment node. `restoreRootViewTransitionName` is called when\n`enableViewTransition` is on, even without introducing a\n`<ViewTransition />`. So that means it can crash pages because\n`containerInstance.style` is `undefined` just by turning on the flag.\n\nThis skips cancel/restore of root view transition name if a comment node is the root.",
                "verified_at": "2025-05-21T17:57:36Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/3710c4d4f9ffb6aa07e291b822e4ec7d69ed5a32",
        "html_url": "https://github.com/facebook/react/commit/3710c4d4f9ffb6aa07e291b822e4ec7d69ed5a32",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/3710c4d4f9ffb6aa07e291b822e4ec7d69ed5a32/comments",
        "author": {
            "login": "jackpope",
            "id": 8965173,
            "node_id": "MDQ6VXNlcjg5NjUxNzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8965173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jackpope",
            "html_url": "https://github.com/jackpope",
            "followers_url": "https://api.github.com/users/jackpope/followers",
            "following_url": "https://api.github.com/users/jackpope/following{/other_user}",
            "gists_url": "https://api.github.com/users/jackpope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jackpope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jackpope/subscriptions",
            "organizations_url": "https://api.github.com/users/jackpope/orgs",
            "repos_url": "https://api.github.com/users/jackpope/repos",
            "events_url": "https://api.github.com/users/jackpope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jackpope/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "2388481283640d034fd6b4edfca4f11e67953673",
                "url": "https://api.github.com/repos/facebook/react/commits/2388481283640d034fd6b4edfca4f11e67953673",
                "html_url": "https://github.com/facebook/react/commit/2388481283640d034fd6b4edfca4f11e67953673"
            }
        ]
    },
    {
        "sha": "2388481283640d034fd6b4edfca4f11e67953673",
        "node_id": "C_kwDOAJy2KtoAKDIzODg0ODEyODM2NDBkMDM0ZmQ2YjRlZGZjYTRmMTFlNjc5NTM2NzM",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-05-21T01:08:47Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-21T01:08:47Z"
            },
            "message": "[Fizz] Set keyPath for SuspenseList (#33320)\n\nI missed setting the `keyPath` because the `renderChildrenArray` that\nthis is forked from doesn't need to set a path but since this is\nrendered from the `SuspenseList` element it needs it.",
            "tree": {
                "sha": "bf56bb9d912afdd6b389117df73d26654d19bf27",
                "url": "https://api.github.com/repos/facebook/react/git/trees/bf56bb9d912afdd6b389117df73d26654d19bf27"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/2388481283640d034fd6b4edfca4f11e67953673",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoLSefCRC1aQ7uu5UhlAAA/XoQAExKp1VYKVb5OqIhoAS74jqf\nkvk96SNBNRxzriT+BrXrQ1IOWAYfkIbTV9OfIIkRMbapz0Dofy82ro2/1Ed5ddUp\nhSyRUIR2z42DhP/K3BoIsZ/lahN0d/8wPxZDmhEuNQaQUQn2anbi3ZohwW2Jv++x\nC7VSPFp6wiwiiPrzGesiq06KPfDQHvETcJij2x3D2o/F/Xp8WiczxuCUniBNQbQ8\nWB3qpjMrYFKH1qCNqmNUZit04BT/zv59F7bqQ5mgROoRkCTtAjSdGP81+iTdiFkz\n576QXpOMM62PwCGDJoXM3trujKbuOXt0wahLglPVIa4kW+I4suzEbIIpkL8I0mCz\nwo03/KmjdS/gRTvIkDLUZjBcWlzOG9tsXXH3qWjbVaNh8ZhC/fEzgeRt4wiI3Zi7\nfd9b7ylAfXXbJ4NEObUL56sQ4wuGg1MoMzpfw2EQWwiVZIgVyRVNrSa5HEQwgMwQ\nutXDWCwSJ9izYDQ9HdK7Fl+IKZgWiU/8XeLWqPfZrq5B7G5fOiF3bIs3+5lZ7os/\n7kYPuALAINzjB8XdGdx5U/OxwAQsVMtfSOssH+4z+eSL1qEm3onpM7agPadxQSsJ\nKlBA+z0iQ/K6f4lhMRBNgJH4sPqVK2/+Z694wWrUsKTBWCEElujkMF/0Gmm7mH76\nKhcGwq2lKrBgUCG2QWVE\n=6Al4\n-----END PGP SIGNATURE-----\n",
                "payload": "tree bf56bb9d912afdd6b389117df73d26654d19bf27\nparent 9c7b10e22ea4c184c0465df15705f17ba36b115a\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1747789727 -0400\ncommitter GitHub <noreply@github.com> 1747789727 -0400\n\n[Fizz] Set keyPath for SuspenseList (#33320)\n\nI missed setting the `keyPath` because the `renderChildrenArray` that\nthis is forked from doesn't need to set a path but since this is\nrendered from the `SuspenseList` element it needs it.",
                "verified_at": "2025-05-21T01:08:50Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/2388481283640d034fd6b4edfca4f11e67953673",
        "html_url": "https://github.com/facebook/react/commit/2388481283640d034fd6b4edfca4f11e67953673",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/2388481283640d034fd6b4edfca4f11e67953673/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "9c7b10e22ea4c184c0465df15705f17ba36b115a",
                "url": "https://api.github.com/repos/facebook/react/commits/9c7b10e22ea4c184c0465df15705f17ba36b115a",
                "html_url": "https://github.com/facebook/react/commit/9c7b10e22ea4c184c0465df15705f17ba36b115a"
            }
        ]
    },
    {
        "sha": "9c7b10e22ea4c184c0465df15705f17ba36b115a",
        "node_id": "C_kwDOAJy2KtoAKDljN2IxMGUyMmVhNGMxODRjMDQ2NWRmMTU3MDVmMTdiYTM2YjExNWE",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-05-21T00:31:16Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-21T00:31:16Z"
            },
            "message": "[Fizz] Clean up row that was blocked by an aborted boundary (#33318)\n\nFixes a bug that we caused us to hang after an abort because we didn't\nmanage the ref count correctly.",
            "tree": {
                "sha": "86189273057a1d826250c9855c60bbd83679f7fb",
                "url": "https://api.github.com/repos/facebook/react/git/trees/86189273057a1d826250c9855c60bbd83679f7fb"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/9c7b10e22ea4c184c0465df15705f17ba36b115a",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoLR7UCRC1aQ7uu5UhlAAAZvYQAK1E3/TwlXNCpIPuCihLSmFe\nfI3aTlxR4OZQrbn4BKNxWZqwHKmLYt9c4Z1nOh22xLvFxzYf1vC3GVEyPHfCAR9+\nE8jhcSlQyv3B1f74WfXGtVXVbLT+3sRLJjHZSQK2FsQi2K2g8p/4qgq/AJAwPuI1\n723f5OQiXsBtOlm5GPBzJAIs67a2SwJW9wjStTAOViEE2NjKx1CLCNypZxgMIhzg\nulINNjwEVgJQfCaTXZn4ijlyWu1vZtV3ndtHIUhnNC3ieLd6mWEbUP58zaRNN0Dq\nLb1aEDtjNmXYjRVuxf7LZFLoPBTQ2EDWm0FSroJKJ+O7/qWUvuE8eufgUk4jYcJp\n3r5GluVsGOgMTXax/9gFww6bbsefn3cZc3W2TmraJsCEjbOgIRGoJifLssOeGrMK\noBtOBsOmbhnOZ4zWYWu3OgAyjXhp0ZgORibahktjRjjen+vgGmrzYH2OO7IN7XGu\nKS11bPtCv1AxnY3xe8JQ/VfXAOkIblOIcBAsD6HbF//bVfmDixDsrG4tpsn0kWZ2\nckc99qVaK5xu/plhfSIeQr7mOakQrRd3hfx1OTX975QWZvBoQFU47ZXLO69GtDrh\nMD0YgrLG9QQXph/L6M0uHmN3cMeU9jvDTGMzYkj5sqKspW529IzC3C3zVE3UpsXr\nlNF66GfFw7/T35hkiw5g\n=INbX\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 86189273057a1d826250c9855c60bbd83679f7fb\nparent 50389e179273558d0919d45bc5db99a21b258b03\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1747787476 -0400\ncommitter GitHub <noreply@github.com> 1747787476 -0400\n\n[Fizz] Clean up row that was blocked by an aborted boundary (#33318)\n\nFixes a bug that we caused us to hang after an abort because we didn't\nmanage the ref count correctly.",
                "verified_at": "2025-05-21T00:31:18Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/9c7b10e22ea4c184c0465df15705f17ba36b115a",
        "html_url": "https://github.com/facebook/react/commit/9c7b10e22ea4c184c0465df15705f17ba36b115a",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/9c7b10e22ea4c184c0465df15705f17ba36b115a/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "50389e179273558d0919d45bc5db99a21b258b03",
                "url": "https://api.github.com/repos/facebook/react/commits/50389e179273558d0919d45bc5db99a21b258b03",
                "html_url": "https://github.com/facebook/react/commit/50389e179273558d0919d45bc5db99a21b258b03"
            }
        ]
    },
    {
        "sha": "50389e179273558d0919d45bc5db99a21b258b03",
        "node_id": "C_kwDOAJy2KtoAKDUwMzg5ZTE3OTI3MzU1OGQwOTE5ZDQ1YmM1ZGI5OWEyMWIyNThiMDM",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-05-20T18:48:51Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-20T18:48:51Z"
            },
            "message": "[Fizz] Hoist hoistables to each row and transfer the dependencies to future rows (#33312)\n\nStacked on #33311.\n\nWhen a row contains Suspense boundaries that themselves depend on CSS,\nthey will not resolve until the CSS has loaded on the client. We need\nfuture rows in a list to be blocked until this happens. We could do\nsomething in the runtime but a simpler approach is to just add those CSS\ndependencies to all those boundaries as well.\n\nTo do this, we first hoist the HoistableState from a completed boundary\nonto its parent row. Then when the row finishes do we hoist it onto the\nnext row and onto any boundaries within that row.",
            "tree": {
                "sha": "4b0cecb076c82686ffed8288ea0a3bd2417a8b1d",
                "url": "https://api.github.com/repos/facebook/react/git/trees/4b0cecb076c82686ffed8288ea0a3bd2417a8b1d"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/50389e179273558d0919d45bc5db99a21b258b03",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoLM6TCRC1aQ7uu5UhlAAAscYQAK+tD7Hseew1/5TK32QBP7qU\nPiXMuF20RgqVmeNtJj04LZ5lHgdXz17orzfzOXu6Z0SECFyRHZyb+FTFMVoSP/dg\nDLbH8mjvnmH3DcZKnoekLpgWdhIAyjmjiCTezgI1rXaR9ni4OO7xD2/ROZvdQyXC\nVuXAxBZYN7Xqe0nSXR4aUADljOhYWNxOL3JsglGXKOcyku3iqAVIsln4tQha1luG\nE0JxzBtOVx7BSn/uWxh1SqCqMmCVaO0n42OWen5ceNmwKtWK8Ot+3PQkgLr3ZprS\nl6Cv0ye9YhVUb0KnL+xmPINSHdUab2u98c7emZZincMf56Uh2i46fqJ7/wWLKstS\n6Or1K5uGSpViTQLlLqJSdf6U6fo68uqfZ/jhQnyqu4FvjRNTgZHysjm8KnjdewwU\nLjP75UMXd7tT3zVbbsPLod7ufzgrpVzoggF0W+kuNhfWpEPDNHJVGwjH7PicqjpJ\n80UIAzbZ8J4CE/qI5Q8dsnbGTH4kB7bnkhZInJGhXRV6JvkbYTE7sp1SeMZwhhBC\nATBDJor6J/0Umed4az4RVELSDgoFReFsbPTB0JsPhcvQfSa+wYamtPjYgPzluFH3\noHaR1r8Bao1kaCe17AUbTVtAzKNLWAMkHJg8HQ1IQtw11COhXVLo1QhVrHe+WwIi\nt+jcSLh+/cPvlVUwiMre\n=whgm\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 4b0cecb076c82686ffed8288ea0a3bd2417a8b1d\nparent 99aa685cefc3c828d4523da04d7830c1e494a6bd\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1747766931 -0400\ncommitter GitHub <noreply@github.com> 1747766931 -0400\n\n[Fizz] Hoist hoistables to each row and transfer the dependencies to future rows (#33312)\n\nStacked on #33311.\n\nWhen a row contains Suspense boundaries that themselves depend on CSS,\nthey will not resolve until the CSS has loaded on the client. We need\nfuture rows in a list to be blocked until this happens. We could do\nsomething in the runtime but a simpler approach is to just add those CSS\ndependencies to all those boundaries as well.\n\nTo do this, we first hoist the HoistableState from a completed boundary\nonto its parent row. Then when the row finishes do we hoist it onto the\nnext row and onto any boundaries within that row.",
                "verified_at": "2025-05-20T18:48:54Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/50389e179273558d0919d45bc5db99a21b258b03",
        "html_url": "https://github.com/facebook/react/commit/50389e179273558d0919d45bc5db99a21b258b03",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/50389e179273558d0919d45bc5db99a21b258b03/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "99aa685cefc3c828d4523da04d7830c1e494a6bd",
                "url": "https://api.github.com/repos/facebook/react/commits/99aa685cefc3c828d4523da04d7830c1e494a6bd",
                "html_url": "https://github.com/facebook/react/commit/99aa685cefc3c828d4523da04d7830c1e494a6bd"
            }
        ]
    },
    {
        "sha": "99aa685cefc3c828d4523da04d7830c1e494a6bd",
        "node_id": "C_kwDOAJy2KtoAKDk5YWE2ODVjZWZjM2M4MjhkNDUyM2RhMDRkNzgzMGMxZTQ5NGE2YmQ",
        "commit": {
            "author": {
                "name": "Sebastian Markb\u00e5ge",
                "email": "sebastian@calyptus.eu",
                "date": "2025-05-20T18:42:05Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2025-05-20T18:42:05Z"
            },
            "message": "[Fizz] Support SuspenseList revealOrder=\"together\" (#33311)\n\nStacked on #33308.\n\nFor \"together\" mode, we can be a self-blocking row that adds all its\nboundaries to the blocked set, but there's no parent row that unblocks\nit.\n\nA particular quirk of this mode is that it's not enough to just unblock\nthem all on the server together. Because if one boundary downloads all\nits html and then issues a complete instruction it'll appear before the\nothers while streaming in. What we actually want is to reveal them all\nin a single batch.\n\nThis implementation takes a short cut by unblocking the rows in\n`flushPartialBoundary`. That ensures that all the segments of every\nboundary has a chance to flush before we start emitting any of the\ncomplete boundary instructions. Once the last one unblocks, all the\ncomplete boundary instructions are queued. Ideally this would be a\nsingle `<script>` tag so that they can't be split up even if we get a\nchunk containing some of them.\n\n~A downside of this approach is that we always outline these boundaries.\nWe could inline them if they all complete before the parent flushes.\nE.g. by checking if the row is blocked only by its own boundaries and if\nall the boundaries would fit without getting outlined, then we can\ninline them all at once.~ I went ahead and did this because it solves an\nissue with `renderToString` where it doesn't support the script runtime\nso it can only handle this if inlined.",
            "tree": {
                "sha": "0a6b44231881b81c19476497d314935338a9ec08",
                "url": "https://api.github.com/repos/facebook/react/git/trees/0a6b44231881b81c19476497d314935338a9ec08"
            },
            "url": "https://api.github.com/repos/facebook/react/git/commits/99aa685cefc3c828d4523da04d7830c1e494a6bd",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoLMz9CRC1aQ7uu5UhlAAA7K4QACUQlGFp+XXQ9ohKaFKOnqY5\nO8Hd1VOhVEBDlQA8lD5R4GbtS4gQCKmH5nzpD5ols4i2LZTJuzcm3XM6CsLe48O+\nSC6YpnlQpM9NJYnveRKLp+w+3GDCBbr9TbbNngVYdr8Mcsfj36fciKNWmE1qTGrp\nY8mjwjPuXuvOR6R0Ce2ObZH32V77gcF/Aace0wrdNkkKS+rRS3Ek+2NhmqEZ1p1A\nk5MFsOITWacN6nJMD7qDWbWQv3D6lwka3VtGK4dJnse118fWnL/moG29cYXoegXi\nB75ZCkCMa+/shhCAW7/1S61WsZQDcZG3bP7H7h1ONMcPJlIJPj+icWthLlZD61pe\nK8W0CY4yZRnyGtIRqX9+5MHBJJCs+2ScMmq3NF6Z/BE02Bc57I6X3kFo73bH0Tq9\nt2CTt2b95No+9evW8Zs7GtB4YOVRSvrvQn4UNWZZeQXwELdRLuFD3ZQOTrpIfgC5\nOUMzpo12N+tBgMEvKnqRI2xVw+75DO5qbPskk4v6FUlkTdJgWegg5Zjx6GTG0eVE\nZDBfYZL/4jJirixS5nz6oUmXZ9/x4lJepUhSsCxL01JIzknNBpAGK2Ril73nMz64\n6Oevaabg3nZu5fO8R3lJe0572RR72iS2bf3ELTozRGm7VesQ9uAnsZ+O5wr433yl\nGNSkoc51ecI6+4QJigws\n=49HA\n-----END PGP SIGNATURE-----\n",
                "payload": "tree 0a6b44231881b81c19476497d314935338a9ec08\nparent d38c7e10d3625c550744ce36c623a73c15c2b5d8\nauthor Sebastian Markb\u00e5ge <sebastian@calyptus.eu> 1747766525 -0400\ncommitter GitHub <noreply@github.com> 1747766525 -0400\n\n[Fizz] Support SuspenseList revealOrder=\"together\" (#33311)\n\nStacked on #33308.\n\nFor \"together\" mode, we can be a self-blocking row that adds all its\nboundaries to the blocked set, but there's no parent row that unblocks\nit.\n\nA particular quirk of this mode is that it's not enough to just unblock\nthem all on the server together. Because if one boundary downloads all\nits html and then issues a complete instruction it'll appear before the\nothers while streaming in. What we actually want is to reveal them all\nin a single batch.\n\nThis implementation takes a short cut by unblocking the rows in\n`flushPartialBoundary`. That ensures that all the segments of every\nboundary has a chance to flush before we start emitting any of the\ncomplete boundary instructions. Once the last one unblocks, all the\ncomplete boundary instructions are queued. Ideally this would be a\nsingle `<script>` tag so that they can't be split up even if we get a\nchunk containing some of them.\n\n~A downside of this approach is that we always outline these boundaries.\nWe could inline them if they all complete before the parent flushes.\nE.g. by checking if the row is blocked only by its own boundaries and if\nall the boundaries would fit without getting outlined, then we can\ninline them all at once.~ I went ahead and did this because it solves an\nissue with `renderToString` where it doesn't support the script runtime\nso it can only handle this if inlined.",
                "verified_at": "2025-05-20T18:42:07Z"
            }
        },
        "url": "https://api.github.com/repos/facebook/react/commits/99aa685cefc3c828d4523da04d7830c1e494a6bd",
        "html_url": "https://github.com/facebook/react/commit/99aa685cefc3c828d4523da04d7830c1e494a6bd",
        "comments_url": "https://api.github.com/repos/facebook/react/commits/99aa685cefc3c828d4523da04d7830c1e494a6bd/comments",
        "author": {
            "login": "sebmarkbage",
            "id": 63648,
            "node_id": "MDQ6VXNlcjYzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebmarkbage",
            "html_url": "https://github.com/sebmarkbage",
            "followers_url": "https://api.github.com/users/sebmarkbage/followers",
            "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
            "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
            "repos_url": "https://api.github.com/users/sebmarkbage/repos",
            "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "user_view_type": "public",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "d38c7e10d3625c550744ce36c623a73c15c2b5d8",
                "url": "https://api.github.com/repos/facebook/react/commits/d38c7e10d3625c550744ce36c623a73c15c2b5d8",
                "html_url": "https://github.com/facebook/react/commit/d38c7e10d3625c550744ce36c623a73c15c2b5d8"
            }
        ]
    }
]